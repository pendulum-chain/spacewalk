//! Autogenerated weights for oracle
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-10-28, STEPS: `100`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// target/release/interbtc-standalone
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// oracle
// --extrinsic
// *
// --steps
// 100
// --repeat
// 10
// --output
// crates/oracle/src/default_weights.rs
// --template
// .deploy/weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for oracle.
pub trait WeightInfo {
	fn on_initialize() -> Weight;
	fn feed_values(u: u32, ) -> Weight;
	fn insert_authorized_oracle() -> Weight;
	fn remove_authorized_oracle() -> Weight;
}

/// Weights for oracle using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Oracle RawValuesUpdated (r:0 w:1)
	// Storage: Oracle ValidUntil (r:0 w:1)
	// Storage: Timestamp Now (r:0 w:1)
	fn on_initialize() -> Weight {
		(5_971_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Oracle AuthorizedOracles (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Oracle RawValuesUpdated (r:0 w:1)
	// Storage: Oracle RawValues (r:0 w:1)
	fn feed_values(u: u32, ) -> Weight {
		(48_201_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((5_697_000 as Weight).saturating_mul(u as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Oracle AuthorizedOracles (r:0 w:1)
	fn insert_authorized_oracle() -> Weight {
		(4_690_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Oracle AuthorizedOracles (r:0 w:1)
	fn remove_authorized_oracle() -> Weight {
		(4_367_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Oracle RawValuesUpdated (r:0 w:1)
	// Storage: Oracle ValidUntil (r:0 w:1)
	// Storage: Timestamp Now (r:0 w:1)
	fn on_initialize() -> Weight {
		(5_971_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: Oracle AuthorizedOracles (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Oracle RawValuesUpdated (r:0 w:1)
	// Storage: Oracle RawValues (r:0 w:1)
	fn feed_values(u: u32, ) -> Weight {
		(48_201_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((5_697_000 as Weight).saturating_mul(u as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: Oracle AuthorizedOracles (r:0 w:1)
	fn insert_authorized_oracle() -> Weight {
		(4_690_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Oracle AuthorizedOracles (r:0 w:1)
	fn remove_authorized_oracle() -> Weight {
		(4_367_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}

