
//! Autogenerated weights for vault_registry
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-13, STEPS: `100`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Bogdans-M2-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/spacewalk-standalone
// benchmark
// pallet
// --chain=dev
// --pallet=vault-registry
// --extrinsic=*
// --steps=100
// --repeat=10
// --wasm-execution=compiled
// --output=pallets/vault-registry/src/default_weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for vault_registry.
pub trait WeightInfo {
	fn register_vault() -> Weight;
	fn deposit_collateral() -> Weight;
	fn withdraw_collateral() -> Weight;
	fn register_public_key() -> Weight;
	fn accept_new_issues() -> Weight;
	fn set_custom_secure_threshold() -> Weight;
	fn set_minimum_collateral() -> Weight;
	fn set_system_collateral_ceiling() -> Weight;
	fn set_secure_collateral_threshold() -> Weight;
	fn set_premium_redeem_threshold() -> Weight;
	fn set_liquidation_collateral_threshold() -> Weight;
	fn report_undercollateralized_vault() -> Weight;
	fn recover_vault_id() -> Weight;
	fn set_punishment_delay() -> Weight;
}

/// Weights for vault_registry using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry PremiumRedeemThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry PremiumRedeemThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry LiquidationCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry LiquidationCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry MinimumCollateralVault (r:1 w:0)
	/// Proof Skipped: VaultRegistry MinimumCollateralVault (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry SystemCollateralCeiling (r:1 w:0)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry VaultStellarPublicKey (r:1 w:0)
	/// Proof Skipped: VaultRegistry VaultStellarPublicKey (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	fn register_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1703`
		//  Estimated: `111566`
		// Minimum execution time: 79_000_000 picoseconds.
		Weight::from_parts(82_000_000, 111566)
			.saturating_add(T::DbWeight::get().reads(24_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:0)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry SystemCollateralCeiling (r:1 w:0)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	fn deposit_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2877`
		//  Estimated: `110518`
		// Minimum execution time: 103_000_000 picoseconds.
		Weight::from_parts(116_000_000, 110518)
			.saturating_add(T::DbWeight::get().reads(21_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:0)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry PremiumRedeemThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry PremiumRedeemThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	fn withdraw_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2884`
		//  Estimated: `110616`
		// Minimum execution time: 100_000_000 picoseconds.
		Weight::from_parts(104_000_000, 110616)
			.saturating_add(T::DbWeight::get().reads(21_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	/// Storage: VaultRegistry VaultStellarPublicKey (r:1 w:1)
	/// Proof Skipped: VaultRegistry VaultStellarPublicKey (max_values: None, max_size: None, mode: Measured)
	fn register_public_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `334`
		//  Estimated: `3799`
		// Minimum execution time: 8_000_000 picoseconds.
		Weight::from_parts(9_000_000, 3799)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:0)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:0)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	fn accept_new_issues() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1379`
		//  Estimated: `36784`
		// Minimum execution time: 33_000_000 picoseconds.
		Weight::from_parts(35_000_000, 36784)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	fn set_custom_secure_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `717`
		//  Estimated: `8364`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_000_000, 8364)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry MinimumCollateralVault (r:0 w:1)
	/// Proof Skipped: VaultRegistry MinimumCollateralVault (max_values: None, max_size: None, mode: Measured)
	fn set_minimum_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(3_000_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry SystemCollateralCeiling (r:0 w:1)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	fn set_system_collateral_ceiling() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(3_000_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VaultStaking RewardCurrencies (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:0 w:1)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	fn set_secure_collateral_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `1569`
		// Minimum execution time: 5_000_000 picoseconds.
		Weight::from_parts(5_000_000, 1569)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: VaultRegistry PremiumRedeemThreshold (r:0 w:1)
	/// Proof Skipped: VaultRegistry PremiumRedeemThreshold (max_values: None, max_size: None, mode: Measured)
	fn set_premium_redeem_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(3_000_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry LiquidationCollateralThreshold (r:0 w:1)
	/// Proof Skipped: VaultRegistry LiquidationCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	fn set_liquidation_collateral_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(4_000_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry LiquidationCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry LiquidationCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: VaultRegistry SystemCollateralCeiling (r:1 w:0)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry LiquidationVault (r:1 w:1)
	/// Proof Skipped: VaultRegistry LiquidationVault (max_values: None, max_size: None, mode: Measured)
	fn report_undercollateralized_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3172`
		//  Estimated: `130106`
		// Minimum execution time: 162_000_000 picoseconds.
		Weight::from_parts(169_000_000, 130106)
			.saturating_add(T::DbWeight::get().reads(25_u64))
			.saturating_add(T::DbWeight::get().writes(16_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	fn recover_vault_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `583`
		//  Estimated: `4048`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(11_000_000, 4048)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry PunishmentDelay (r:0 w:1)
	/// Proof Skipped: VaultRegistry PunishmentDelay (max_values: Some(1), max_size: None, mode: Measured)
	fn set_punishment_delay() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(2_000_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry PremiumRedeemThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry PremiumRedeemThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry LiquidationCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry LiquidationCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry MinimumCollateralVault (r:1 w:0)
	/// Proof Skipped: VaultRegistry MinimumCollateralVault (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry SystemCollateralCeiling (r:1 w:0)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry VaultStellarPublicKey (r:1 w:0)
	/// Proof Skipped: VaultRegistry VaultStellarPublicKey (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	fn register_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1703`
		//  Estimated: `111566`
		// Minimum execution time: 79_000_000 picoseconds.
		Weight::from_parts(82_000_000, 111566)
			.saturating_add(RocksDbWeight::get().reads(24_u64))
			.saturating_add(RocksDbWeight::get().writes(12_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:0)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry SystemCollateralCeiling (r:1 w:0)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	fn deposit_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2877`
		//  Estimated: `110518`
		// Minimum execution time: 103_000_000 picoseconds.
		Weight::from_parts(116_000_000, 110518)
			.saturating_add(RocksDbWeight::get().reads(21_u64))
			.saturating_add(RocksDbWeight::get().writes(12_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:0)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry PremiumRedeemThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry PremiumRedeemThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	fn withdraw_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2884`
		//  Estimated: `110616`
		// Minimum execution time: 100_000_000 picoseconds.
		Weight::from_parts(104_000_000, 110616)
			.saturating_add(RocksDbWeight::get().reads(21_u64))
			.saturating_add(RocksDbWeight::get().writes(12_u64))
	}
	/// Storage: VaultRegistry VaultStellarPublicKey (r:1 w:1)
	/// Proof Skipped: VaultRegistry VaultStellarPublicKey (max_values: None, max_size: None, mode: Measured)
	fn register_public_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `334`
		//  Estimated: `3799`
		// Minimum execution time: 8_000_000 picoseconds.
		Weight::from_parts(9_000_000, 3799)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:0)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:0)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	fn accept_new_issues() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1379`
		//  Estimated: `36784`
		// Minimum execution time: 33_000_000 picoseconds.
		Weight::from_parts(35_000_000, 36784)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	fn set_custom_secure_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `717`
		//  Estimated: `8364`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_000_000, 8364)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry MinimumCollateralVault (r:0 w:1)
	/// Proof Skipped: VaultRegistry MinimumCollateralVault (max_values: None, max_size: None, mode: Measured)
	fn set_minimum_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(3_000_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry SystemCollateralCeiling (r:0 w:1)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	fn set_system_collateral_ceiling() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(3_000_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VaultStaking RewardCurrencies (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:0 w:1)
	/// Proof Skipped: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	fn set_secure_collateral_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `1569`
		// Minimum execution time: 5_000_000 picoseconds.
		Weight::from_parts(5_000_000, 1569)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: VaultRegistry PremiumRedeemThreshold (r:0 w:1)
	/// Proof Skipped: VaultRegistry PremiumRedeemThreshold (max_values: None, max_size: None, mode: Measured)
	fn set_premium_redeem_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(3_000_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry LiquidationCollateralThreshold (r:0 w:1)
	/// Proof Skipped: VaultRegistry LiquidationCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	fn set_liquidation_collateral_threshold() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(4_000_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry LiquidationCollateralThreshold (r:1 w:0)
	/// Proof Skipped: VaultRegistry LiquidationCollateralThreshold (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof Skipped: VaultStaking Nonce (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalCurrentStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultStaking Stake (r:1 w:1)
	/// Proof Skipped: VaultStaking Stake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashPerToken (r:1 w:0)
	/// Proof Skipped: VaultStaking SlashPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking SlashTally (r:1 w:1)
	/// Proof Skipped: VaultStaking SlashTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardCurrencies (r:1 w:0)
	/// Proof Skipped: VaultStaking RewardCurrencies (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards Stake (r:1 w:1)
	/// Proof: VaultRewards Stake (max_values: None, max_size: Some(202), added: 2677, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardPerToken (r:1 w:0)
	/// Proof: VaultRewards RewardPerToken (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardTally (r:1 w:1)
	/// Proof: VaultRewards RewardTally (max_values: None, max_size: Some(264), added: 2739, mode: MaxEncodedLen)
	/// Storage: VaultRewards TotalRewards (r:1 w:1)
	/// Proof: VaultRewards TotalRewards (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultStaking RewardPerToken (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardPerToken (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking TotalStake (r:1 w:1)
	/// Proof Skipped: VaultStaking TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultStaking RewardTally (r:1 w:1)
	/// Proof Skipped: VaultStaking RewardTally (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1 w:1)
	/// Proof: VaultRewards TotalStake (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: VaultRewards RewardCurrencies (r:1 w:0)
	/// Proof: VaultRewards RewardCurrencies (max_values: None, max_size: Some(523), added: 2998, mode: MaxEncodedLen)
	/// Storage: VaultRegistry TotalUserVaultCollateral (r:1 w:1)
	/// Proof Skipped: VaultRegistry TotalUserVaultCollateral (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(150), added: 2625, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: VaultRegistry SystemCollateralCeiling (r:1 w:0)
	/// Proof Skipped: VaultRegistry SystemCollateralCeiling (max_values: None, max_size: None, mode: Measured)
	/// Storage: VaultRegistry LiquidationVault (r:1 w:1)
	/// Proof Skipped: VaultRegistry LiquidationVault (max_values: None, max_size: None, mode: Measured)
	fn report_undercollateralized_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3172`
		//  Estimated: `130106`
		// Minimum execution time: 162_000_000 picoseconds.
		Weight::from_parts(169_000_000, 130106)
			.saturating_add(RocksDbWeight::get().reads(25_u64))
			.saturating_add(RocksDbWeight::get().writes(16_u64))
	}
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof Skipped: VaultRegistry Vaults (max_values: None, max_size: None, mode: Measured)
	fn recover_vault_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `583`
		//  Estimated: `4048`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(11_000_000, 4048)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VaultRegistry PunishmentDelay (r:0 w:1)
	/// Proof Skipped: VaultRegistry PunishmentDelay (max_values: Some(1), max_size: None, mode: Measured)
	fn set_punishment_delay() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(2_000_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}