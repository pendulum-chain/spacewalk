[
  1635018093,
  {
    "V15": {
      "types": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 1,
            "type": {
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 2,
            "type": {
              "def": {
                "primitive": "u8"
              }
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce"
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 4,
            "type": {
              "def": {
                "primitive": "u32"
              }
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "flags",
                      "type": 7,
                      "typeName": "ExtraFlags"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 6,
            "type": {
              "def": {
                "primitive": "u128"
              }
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ExtraFlags"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 8,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 9,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 9,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 9,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 10,
                      "typeName": "u64"
                    },
                    {
                      "name": "proof_size",
                      "type": 10,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 10,
            "type": {
              "def": {
                "compact": {
                  "type": 11
                }
              }
            }
          },
          {
            "id": 11,
            "type": {
              "def": {
                "primitive": "u64"
              }
            }
          },
          {
            "id": 12,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 13,
            "type": {
              "def": {
                "sequence": {
                  "type": 2
                }
              }
            }
          },
          {
            "id": 14,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 15,
                      "typeName": "Vec<DigestItem>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 15,
            "type": {
              "def": {
                "sequence": {
                  "type": 16
                }
              }
            }
          },
          {
            "id": 16,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 17,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 18,
            "type": {
              "def": {
                "sequence": {
                  "type": 19
                }
              }
            }
          },
          {
            "id": 19,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 20
                },
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 193,
                      "typeName": "Phase"
                    },
                    {
                      "name": "event",
                      "type": 20,
                      "typeName": "E"
                    },
                    {
                      "name": "topics",
                      "type": 194,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "amplitude_runtime",
                "RuntimeEvent"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 21,
                          "typeName": "frame_system::Event<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "cumulus_pallet_parachain_system::Event<Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 33,
                          "typeName": "pallet_balances::Event<Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "type": 35,
                          "typeName": "pallet_transaction_payment::Event<Runtime>"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Democracy",
                      "fields": [
                        {
                          "type": 36,
                          "typeName": "pallet_democracy::Event<Runtime>"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "type": 41,
                          "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "type": 44,
                          "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "type": 45,
                          "typeName": "pallet_scheduler::Event<Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "type": 47,
                          "typeName": "pallet_preimage::Event<Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 48,
                          "typeName": "pallet_multisig::Event<Runtime>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "type": 50,
                          "typeName": "pallet_treasury::Event<Runtime>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Bounties",
                      "fields": [
                        {
                          "type": 51,
                          "typeName": "pallet_bounties::Event<Runtime>"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "ChildBounties",
                      "fields": [
                        {
                          "type": 52,
                          "typeName": "pallet_child_bounties::Event<Runtime>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "type": 53,
                          "typeName": "pallet_proxy::Event<Runtime>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 56,
                          "typeName": "pallet_session::Event"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "ParachainStaking",
                      "fields": [
                        {
                          "type": 57,
                          "typeName": "parachain_staking::Event<Runtime>"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "type": 59,
                          "typeName": "cumulus_pallet_xcmp_queue::Event<Runtime>"
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 60,
                          "typeName": "pallet_xcm::Event<Runtime>"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "type": 116,
                          "typeName": "cumulus_pallet_xcm::Event<Runtime>"
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "type": 117,
                          "typeName": "cumulus_pallet_dmp_queue::Event<Runtime>"
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "type": 118,
                          "typeName": "pallet_vesting::Event<Runtime>"
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 119,
                          "typeName": "pallet_utility::Event"
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Tokens",
                      "fields": [
                        {
                          "type": 120,
                          "typeName": "orml_tokens::Event<Runtime>"
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "XTokens",
                      "fields": [
                        {
                          "type": 124,
                          "typeName": "orml_xtokens::Event<Runtime>"
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "type": 125,
                          "typeName": "pallet_identity::Event<Runtime>"
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Contracts",
                      "fields": [
                        {
                          "type": 127,
                          "typeName": "pallet_contracts::Event<Runtime>"
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "DiaOracleModule",
                      "fields": [
                        {
                          "type": 130,
                          "typeName": "dia_oracle::Event<Runtime>"
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "ZenlinkProtocol",
                      "fields": [
                        {
                          "type": 135,
                          "typeName": "zenlink_protocol::Event<Runtime>"
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Issue",
                      "fields": [
                        {
                          "type": 142,
                          "typeName": "issue::Event<Runtime>"
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Nomination",
                      "fields": [
                        {
                          "type": 146,
                          "typeName": "nomination::Event<Runtime>"
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Oracle",
                      "fields": [
                        {
                          "type": 147,
                          "typeName": "oracle::Event<Runtime>"
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Redeem",
                      "fields": [
                        {
                          "type": 153,
                          "typeName": "redeem::Event<Runtime>"
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Replace",
                      "fields": [
                        {
                          "type": 155,
                          "typeName": "replace::Event<Runtime>"
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Security",
                      "fields": [
                        {
                          "type": 156,
                          "typeName": "security::Event<Runtime>"
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "StellarRelay",
                      "fields": [
                        {
                          "type": 160,
                          "typeName": "stellar_relay::Event<Runtime>"
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "VaultRegistry",
                      "fields": [
                        {
                          "type": 161,
                          "typeName": "vault_registry::Event<Runtime>"
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "PooledVaultRewards",
                      "fields": [
                        {
                          "type": 163,
                          "typeName": "pooled_rewards::Event<Runtime>"
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "VaultStaking",
                      "fields": [
                        {
                          "type": 166,
                          "typeName": "staking::Event<Runtime>"
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "ClientsInfo",
                      "fields": [
                        {
                          "type": 167,
                          "typeName": "clients_info::Event<Runtime>"
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "RewardDistribution",
                      "fields": [
                        {
                          "type": 170,
                          "typeName": "reward_distribution::Event<Runtime>"
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "TokenAllowance",
                      "fields": [
                        {
                          "type": 171,
                          "typeName": "orml_currencies_allowance_extension::Event<Runtime>"
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "TreasuryBuyoutExtension",
                      "fields": [
                        {
                          "type": 173,
                          "typeName": "treasury_buyout_extension::Event<Runtime>"
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Farming",
                      "fields": [
                        {
                          "type": 174,
                          "typeName": "farming::Event<Runtime>"
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "AssetRegistry",
                      "fields": [
                        {
                          "type": 182,
                          "typeName": "orml_asset_registry::Event<Runtime>"
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "VestingManager",
                      "fields": [
                        {
                          "type": 189,
                          "typeName": "vesting_manager::Event<Runtime>"
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "MessageQueue",
                      "fields": [
                        {
                          "type": 190,
                          "typeName": "pallet_message_queue::Event<Runtime>"
                        }
                      ],
                      "index": 222
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 25,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    },
                    {
                      "name": "UpgradeAuthorized",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "check_version",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An upgrade was authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 23,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "pays_fee",
                      "type": 24,
                      "typeName": "Pays"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "index": 0
                    },
                    {
                      "name": "Operational",
                      "index": 1
                    },
                    {
                      "name": "Mandatory",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "index": 0
                    },
                    {
                      "name": "No",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "index": 0
                    },
                    {
                      "name": "CannotLookup",
                      "index": 1
                    },
                    {
                      "name": "BadOrigin",
                      "index": 2
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "type": 26,
                          "typeName": "ModuleError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ConsumerRemaining",
                      "index": 4
                    },
                    {
                      "name": "NoProviders",
                      "index": 5
                    },
                    {
                      "name": "TooManyConsumers",
                      "index": 6
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "type": 27,
                          "typeName": "TokenError"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "type": 28,
                          "typeName": "ArithmeticError"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "type": 29,
                          "typeName": "TransactionalError"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Exhausted",
                      "index": 10
                    },
                    {
                      "name": "Corruption",
                      "index": 11
                    },
                    {
                      "name": "Unavailable",
                      "index": 12
                    },
                    {
                      "name": "RootNotAllowed",
                      "index": 13
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "error",
                      "type": 17,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "index": 0
                    },
                    {
                      "name": "OnlyProvider",
                      "index": 1
                    },
                    {
                      "name": "BelowMinimum",
                      "index": 2
                    },
                    {
                      "name": "CannotCreate",
                      "index": 3
                    },
                    {
                      "name": "UnknownAsset",
                      "index": 4
                    },
                    {
                      "name": "Frozen",
                      "index": 5
                    },
                    {
                      "name": "Unsupported",
                      "index": 6
                    },
                    {
                      "name": "CannotCreateHold",
                      "index": 7
                    },
                    {
                      "name": "NotExpendable",
                      "index": 8
                    },
                    {
                      "name": "Blocked",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "index": 0
                    },
                    {
                      "name": "Overflow",
                      "index": 1
                    },
                    {
                      "name": "DivisionByZero",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "index": 0
                    },
                    {
                      "name": "NoLayer",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 30,
            "type": {
              "def": {
                "primitive": "bool"
              }
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ValidationFunctionStored",
                      "index": 0,
                      "docs": [
                        "The validation function has been scheduled to apply."
                      ]
                    },
                    {
                      "name": "ValidationFunctionApplied",
                      "fields": [
                        {
                          "name": "relay_chain_block_num",
                          "type": 4,
                          "typeName": "RelayChainBlockNumber"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The validation function was applied as of the contained relay chain block number."
                      ]
                    },
                    {
                      "name": "ValidationFunctionDiscarded",
                      "index": 2,
                      "docs": [
                        "The relay-chain aborted the upgrade process."
                      ]
                    },
                    {
                      "name": "DownwardMessagesReceived",
                      "fields": [
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Some downward messages have been received and will be processed."
                      ]
                    },
                    {
                      "name": "DownwardMessagesProcessed",
                      "fields": [
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "dmq_head",
                          "type": 12,
                          "typeName": "relay_chain::Hash"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Downward messages were processed using the given weight."
                      ]
                    },
                    {
                      "name": "UpwardMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 32,
                          "typeName": "Option<XcmHash>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An upward message was sent to the relay chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 32,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "destination_status",
                          "type": 34,
                          "typeName": "Status"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Some amount was minted into an account."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some amount was burned from an account."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some amount was suspended from an account (it can be restored later)."
                      ]
                    },
                    {
                      "name": "Restored",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some amount was restored into an account."
                      ]
                    },
                    {
                      "name": "Upgraded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "An account was upgraded."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Total issuance was increased by `amount`, creating a credit to be balanced."
                      ]
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Total issuance was decreased by `amount`, creating a debt to be balanced."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Some balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Some balance was unlocked."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some balance was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Some balance was thawed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "index": 0
                    },
                    {
                      "name": "Reserved",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 35,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "PropIndex"
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion has been proposed by a public account."
                      ]
                    },
                    {
                      "name": "Tabled",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "PropIndex"
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A public proposal has been tabled for referendum vote."
                      ]
                    },
                    {
                      "name": "ExternalTabled",
                      "index": 2,
                      "docs": [
                        "An external proposal has been tabled."
                      ]
                    },
                    {
                      "name": "Started",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        },
                        {
                          "name": "threshold",
                          "type": 37,
                          "typeName": "VoteThreshold"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A referendum has begun."
                      ]
                    },
                    {
                      "name": "Passed",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proposal has been approved by referendum."
                      ]
                    },
                    {
                      "name": "NotPassed",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A proposal has been rejected by referendum."
                      ]
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A referendum has been cancelled."
                      ]
                    },
                    {
                      "name": "Delegated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An account has delegated their vote to another account."
                      ]
                    },
                    {
                      "name": "Undelegated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "An account has cancelled a previous delegation operation."
                      ]
                    },
                    {
                      "name": "Vetoed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "until",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "An external proposal has been vetoed."
                      ]
                    },
                    {
                      "name": "Blacklisted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A proposal_hash has been blacklisted permanently."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "voter",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        },
                        {
                          "name": "vote",
                          "type": 38,
                          "typeName": "AccountVote<BalanceOf<T>>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "An account has voted in a referendum"
                      ]
                    },
                    {
                      "name": "Seconded",
                      "fields": [
                        {
                          "name": "seconder",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "prop_index",
                          "type": 4,
                          "typeName": "PropIndex"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An account has secconded a proposal"
                      ]
                    },
                    {
                      "name": "ProposalCanceled",
                      "fields": [
                        {
                          "name": "prop_index",
                          "type": 4,
                          "typeName": "PropIndex"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A proposal got canceled."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 40,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Metadata for a proposal or a referendum has been set."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 40,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Metadata for a proposal or a referendum has been cleared."
                      ]
                    },
                    {
                      "name": "MetadataTransferred",
                      "fields": [
                        {
                          "name": "prev_owner",
                          "type": 40,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Previous metadata owner."
                          ]
                        },
                        {
                          "name": "owner",
                          "type": 40,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "New metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Metadata has been transferred to new owner."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "pallet_democracy",
                "vote_threshold",
                "VoteThreshold"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SuperMajorityApprove",
                      "index": 0
                    },
                    {
                      "name": "SuperMajorityAgainst",
                      "index": 1
                    },
                    {
                      "name": "SimpleMajority",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "AccountVote"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Standard",
                      "fields": [
                        {
                          "name": "vote",
                          "type": 39,
                          "typeName": "Vote"
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Split",
                      "fields": [
                        {
                          "name": "aye",
                          "type": 6,
                          "typeName": "Balance"
                        },
                        {
                          "name": "nay",
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 39,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "Vote"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "MetadataOwner"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "External",
                      "index": 0
                    },
                    {
                      "name": "Proposal",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "PropIndex"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Referendum",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "threshold",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                        "`MemberCount`)."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "voted",
                          "type": 30,
                          "typeName": "bool"
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount"
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A motion (given hash) has been voted on by given account, leaving",
                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A motion was approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Disapproved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A motion was not approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A motion was executed; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "MemberExecuted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A single member did some action; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "Closed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount"
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A proposal was closed because its threshold was reached or after its duration was up."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 42,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 43
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 43
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 43,
            "type": {
              "def": {
                "tuple": []
              }
            }
          },
          {
            "id": 44,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "threshold",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                        "`MemberCount`)."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "voted",
                          "type": 30,
                          "typeName": "bool"
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount"
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A motion (given hash) has been voted on by given account, leaving",
                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A motion was approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Disapproved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A motion was not approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A motion was executed; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "MemberExecuted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A single member did some action; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "Closed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount"
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A proposal was closed because its threshold was reached or after its duration was up."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 45,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Scheduled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Scheduled some task."
                      ]
                    },
                    {
                      "name": "Canceled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Canceled some task."
                      ]
                    },
                    {
                      "name": "Dispatched",
                      "fields": [
                        {
                          "name": "task",
                          "type": 46,
                          "typeName": "TaskAddress<BlockNumberFor<T>>"
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>"
                        },
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Dispatched some task."
                      ]
                    },
                    {
                      "name": "CallUnavailable",
                      "fields": [
                        {
                          "name": "task",
                          "type": 46,
                          "typeName": "TaskAddress<BlockNumberFor<T>>"
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The call for the provided hash was not found so the task has been aborted."
                      ]
                    },
                    {
                      "name": "PeriodicFailed",
                      "fields": [
                        {
                          "name": "task",
                          "type": 46,
                          "typeName": "TaskAddress<BlockNumberFor<T>>"
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The given task was unable to be renewed since the agenda is full at that block."
                      ]
                    },
                    {
                      "name": "PermanentlyOverweight",
                      "fields": [
                        {
                          "name": "task",
                          "type": 46,
                          "typeName": "TaskAddress<BlockNumberFor<T>>"
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The given task can never be executed since it is overweight."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 46,
            "type": {
              "def": {
                "tuple": [
                  4,
                  4
                ]
              }
            }
          },
          {
            "id": 47,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noted",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A preimage has been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A preimage has been requested."
                      ]
                    },
                    {
                      "name": "Cleared",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A preimage has ben cleared."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 48,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewMultisig",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new multisig operation has begun."
                      ]
                    },
                    {
                      "name": "MultisigApproval",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 49,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A multisig operation has been approved by someone."
                      ]
                    },
                    {
                      "name": "MultisigExecuted",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 49,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        },
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A multisig operation has been executed."
                      ]
                    },
                    {
                      "name": "MultisigCancelled",
                      "fields": [
                        {
                          "name": "cancelling",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 49,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A multisig operation has been cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 49,
            "type": {
              "path": [
                "pallet_multisig",
                "Timepoint"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New proposal."
                      ]
                    },
                    {
                      "name": "Spending",
                      "fields": [
                        {
                          "name": "budget_remaining",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "We have ended a spend period and will now allocate funds."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "award",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some funds have been allocated."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "slashed",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "Burnt",
                      "fields": [
                        {
                          "name": "burnt_funds",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some of our funds have been burnt."
                      ]
                    },
                    {
                      "name": "Rollover",
                      "fields": [
                        {
                          "name": "rollover_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Spending has finished; this is the amount that rolls over until next spend."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some funds have been deposited."
                      ]
                    },
                    {
                      "name": "SpendApproved",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A new spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "UpdatedInactive",
                      "fields": [
                        {
                          "name": "reactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "deactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The inactive funds of the pallet have been updated."
                      ]
                    },
                    {
                      "name": "AssetSpendApproved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "asset_kind",
                          "type": 43,
                          "typeName": "T::AssetKind"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::Beneficiary"
                        },
                        {
                          "name": "valid_from",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "expire_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A new asset spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "AssetSpendVoided",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "An approved spend was voided."
                      ]
                    },
                    {
                      "name": "Paid",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "payment_id",
                          "type": 43,
                          "typeName": "<T::Paymaster as Pay>::Id"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A payment happened."
                      ]
                    },
                    {
                      "name": "PaymentFailed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "payment_id",
                          "type": 43,
                          "typeName": "<T::Paymaster as Pay>::Id"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A payment failed and can be retried."
                      ]
                    },
                    {
                      "name": "SpendProcessed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A spend was processed and removed from the storage. It might have been successfully",
                        "paid or it may have expired."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 51,
            "type": {
              "path": [
                "pallet_bounties",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BountyProposed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New bounty proposal."
                      ]
                    },
                    {
                      "name": "BountyRejected",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "bond",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A bounty proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "BountyBecameActive",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A bounty proposal is funded and became active."
                      ]
                    },
                    {
                      "name": "BountyAwarded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A bounty is awarded to a beneficiary."
                      ]
                    },
                    {
                      "name": "BountyClaimed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "payout",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A bounty is claimed by beneficiary."
                      ]
                    },
                    {
                      "name": "BountyCanceled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A bounty is cancelled."
                      ]
                    },
                    {
                      "name": "BountyExtended",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A bounty expiry is extended."
                      ]
                    },
                    {
                      "name": "BountyApproved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A bounty is approved."
                      ]
                    },
                    {
                      "name": "CuratorProposed",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A bounty curator is proposed."
                      ]
                    },
                    {
                      "name": "CuratorUnassigned",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A bounty curator is unassigned."
                      ]
                    },
                    {
                      "name": "CuratorAccepted",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A bounty curator is accepted."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 52,
            "type": {
              "path": [
                "pallet_child_bounties",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Added",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A child-bounty is added."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A child-bounty is awarded to a beneficiary."
                      ]
                    },
                    {
                      "name": "Claimed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A child-bounty is claimed by beneficiary."
                      ]
                    },
                    {
                      "name": "Canceled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A child-bounty is cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProxyExecuted",
                      "fields": [
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A proxy was executed correctly, with the given."
                      ]
                    },
                    {
                      "name": "PureCreated",
                      "fields": [
                        {
                          "name": "pure",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy_type",
                          "type": 54,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "disambiguation_index",
                          "type": 55,
                          "typeName": "u16"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A pure account has been created by new proxy with given",
                        "disambiguation index and proxy type."
                      ]
                    },
                    {
                      "name": "Announced",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An announcement was placed to make a call in the future."
                      ]
                    },
                    {
                      "name": "ProxyAdded",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy_type",
                          "type": 54,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proxy was added."
                      ]
                    },
                    {
                      "name": "ProxyRemoved",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy_type",
                          "type": 54,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proxy was removed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "runtime_common",
                "proxy_type",
                "ProxyType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 55,
            "type": {
              "def": {
                "primitive": "u16"
              }
            }
          },
          {
            "id": 56,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 57,
            "type": {
              "path": [
                "parachain_staking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewRound",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "type": 4,
                          "typeName": "SessionIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new staking round has started.",
                        "\\[block number, round number\\]"
                      ]
                    },
                    {
                      "name": "EnteredTopCandidates",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A new account has joined the set of top candidates.",
                        "\\[account\\]"
                      ]
                    },
                    {
                      "name": "LeftTopCandidates",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An account was removed from the set of top candidates.",
                        "\\[account\\]"
                      ]
                    },
                    {
                      "name": "JoinedCollatorCandidates",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account has joined the set of collator candidates.",
                        "\\[account, amount staked by the new candidate\\]"
                      ]
                    },
                    {
                      "name": "CollatorStakedMore",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A collator candidate has increased the amount of funds at stake.",
                        "\\[collator's account, previous stake, new stake\\]"
                      ]
                    },
                    {
                      "name": "CollatorStakedLess",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A collator candidate has decreased the amount of funds at stake.",
                        "\\[collator's account, previous stake, new stake\\]"
                      ]
                    },
                    {
                      "name": "CollatorScheduledExit",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "SessionIndex"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 4,
                          "typeName": "SessionIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A collator candidate has started the process to leave the set of",
                        "candidates. \\[round number, collator's account, round number when",
                        "the collator will be effectively removed from the set of",
                        "candidates\\]"
                      ]
                    },
                    {
                      "name": "CollatorCanceledExit",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A collator candidate has canceled the process to leave the set of",
                        "candidates and was added back to the candidate pool. \\[collator's",
                        "account\\]"
                      ]
                    },
                    {
                      "name": "CandidateLeft",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "An account has left the set of collator candidates.",
                        "\\[account, amount of funds un-staked\\]"
                      ]
                    },
                    {
                      "name": "CollatorRemoved",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "An account was forcedly removed from the  set of collator",
                        "candidates. \\[account, amount of funds un-staked\\]"
                      ]
                    },
                    {
                      "name": "MaxCandidateStakeChanged",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "The maximum candidate stake has been changed.",
                        "\\[new max amount\\]"
                      ]
                    },
                    {
                      "name": "DelegatorStakedMore",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A delegator has increased the amount of funds at stake for a",
                        "collator. \\[delegator's account, collator's account, previous",
                        "delegation stake, new delegation stake\\]"
                      ]
                    },
                    {
                      "name": "DelegatorStakedLess",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A delegator has decreased the amount of funds at stake for a",
                        "collator. \\[delegator's account, collator's account, previous",
                        "delegation stake, new delegation stake\\]"
                      ]
                    },
                    {
                      "name": "DelegatorLeft",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "An account has left the set of delegators.",
                        "\\[account, amount of funds un-staked\\]"
                      ]
                    },
                    {
                      "name": "Delegation",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "An account has delegated a new collator candidate.",
                        "\\[account, amount of funds staked, total amount of delegators' funds",
                        "staked for the collator candidate\\]"
                      ]
                    },
                    {
                      "name": "DelegationReplaced",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A new delegation has replaced an existing one in the set of ongoing",
                        "delegations for a collator candidate. \\[new delegator's account,",
                        "amount of funds staked in the new delegation, replaced delegator's",
                        "account, amount of funds staked in the replace delegation, collator",
                        "candidate's account, new total amount of delegators' funds staked",
                        "for the collator candidate\\]"
                      ]
                    },
                    {
                      "name": "DelegatorLeftCollator",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "An account has stopped delegating a collator candidate.",
                        "\\[account, collator candidate's account, old amount of delegators'",
                        "funds staked, new amount of delegators' funds staked\\]"
                      ]
                    },
                    {
                      "name": "Rewarded",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "A collator or a delegator has received a reward.",
                        "\\[account, amount of reward\\]"
                      ]
                    },
                    {
                      "name": "RoundInflationSet",
                      "fields": [
                        {
                          "type": 58,
                          "typeName": "Perquintill"
                        },
                        {
                          "type": 58,
                          "typeName": "Perquintill"
                        },
                        {
                          "type": 58,
                          "typeName": "Perquintill"
                        },
                        {
                          "type": 58,
                          "typeName": "Perquintill"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Inflation configuration for future validation rounds has changed.",
                        "\\[maximum collator's staking rate, maximum collator's reward rate,",
                        "maximum delegator's staking rate, maximum delegator's reward rate\\]"
                      ]
                    },
                    {
                      "name": "MaxSelectedCandidatesSet",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "The maximum number of collator candidates selected in future",
                        "validation rounds has changed. \\[old value, new value\\]"
                      ]
                    },
                    {
                      "name": "BlocksPerRoundSet",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "SessionIndex"
                        },
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "The length in blocks for future validation rounds has changed.",
                        "\\[round number, first block in the current round, old value, new",
                        "value\\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 58,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perquintill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "XcmpMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 1,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An HRMP message was sent to a sibling parachain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 60,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "outcome",
                          "type": 61,
                          "typeName": "xcm::latest::Outcome"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Execution of an XCM message was attempted."
                      ]
                    },
                    {
                      "name": "Sent",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "destination",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "message",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A XCM message was sent."
                      ]
                    },
                    {
                      "name": "UnexpectedResponse",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Query response received which does not match a registered query. This may be because a",
                        "matching query was never registered, it may be because it is a duplicate response, or",
                        "because the query timed out."
                      ]
                    },
                    {
                      "name": "ResponseReady",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 84,
                          "typeName": "Response"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Query response has been received and is ready for taking with `take_response`. There is",
                        "no registered notification call."
                      ]
                    },
                    {
                      "name": "Notified",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification has",
                        "been dispatched and executed successfully."
                      ]
                    },
                    {
                      "name": "NotifyOverweight",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "actual_weight",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "max_budgeted_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification",
                        "could not be dispatched because the dispatch weight is greater than the maximum weight",
                        "originally budgeted by this runtime for the query result."
                      ]
                    },
                    {
                      "name": "NotifyDispatchError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Query response has been received and query is removed. There was a general error with",
                        "dispatching the notification call."
                      ]
                    },
                    {
                      "name": "NotifyDecodeFailed",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Query response has been received and query is removed. The dispatch was unable to be",
                        "decoded into a `Call`; this might be due to dispatch function having a signature which",
                        "is not `(origin, QueryId, Response)`."
                      ]
                    },
                    {
                      "name": "InvalidResponder",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "expected_location",
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Expected query response has been received but the origin location of the response does",
                        "not match that expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "InvalidResponderVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Expected query response has been received but the expected origin location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "ResponseTaken",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Received query response has been read and removed."
                      ]
                    },
                    {
                      "name": "AssetsTrapped",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "VersionedMultiAssets"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some assets have been placed in an asset trap."
                      ]
                    },
                    {
                      "name": "VersionChangeNotified",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "result",
                          "type": 4,
                          "typeName": "XcmVersion"
                        },
                        {
                          "name": "cost",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An XCM version change notification message has been attempted to be sent.",
                        "",
                        "The cost of sending it (borne by the chain) is included."
                      ]
                    },
                    {
                      "name": "SupportedVersionChanged",
                      "fields": [
                        {
                          "name": "location",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The supported version of a location has been changed. This might be through an",
                        "automatic notification or a manual intervention."
                      ]
                    },
                    {
                      "name": "NotifyTargetSendFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "error",
                          "type": 62,
                          "typeName": "XcmError"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "sending the notification to it."
                      ]
                    },
                    {
                      "name": "NotifyTargetMigrationFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 115,
                          "typeName": "VersionedMultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "migrating the location to our new XCM format."
                      ]
                    },
                    {
                      "name": "InvalidQuerierVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Expected query response has been received but the expected querier location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "InvalidQuerier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "expected_querier",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "maybe_actual_querier",
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Expected query response has been received but the querier location of the response does",
                        "not match the expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "VersionNotifyStarted",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "cost",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "A remote has requested XCM version change notification from us and we have honored it.",
                        "A version information message is sent to them and its cost is included."
                      ]
                    },
                    {
                      "name": "VersionNotifyRequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "cost",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "We have requested that a remote chain send us XCM version change notifications."
                      ]
                    },
                    {
                      "name": "VersionNotifyUnrequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "cost",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "We have requested that a remote chain stops sending us XCM version change",
                        "notifications."
                      ]
                    },
                    {
                      "name": "FeesPaid",
                      "fields": [
                        {
                          "name": "paying",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "fees",
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Fees were paid from a location for an operation (often for using `SendXcm`)."
                      ]
                    },
                    {
                      "name": "AssetsClaimed",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "origin",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "VersionedMultiAssets"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some assets have been claimed from an asset trap"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "xcm",
                "v3",
                "traits",
                "Outcome"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Complete",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Incomplete",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "type": 62,
                          "typeName": "Error"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Error"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "xcm",
                "v3",
                "traits",
                "Error"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "index": 0
                    },
                    {
                      "name": "Unimplemented",
                      "index": 1
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "index": 2
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "index": 3
                    },
                    {
                      "name": "LocationFull",
                      "index": 4
                    },
                    {
                      "name": "LocationNotInvertible",
                      "index": 5
                    },
                    {
                      "name": "BadOrigin",
                      "index": 6
                    },
                    {
                      "name": "InvalidLocation",
                      "index": 7
                    },
                    {
                      "name": "AssetNotFound",
                      "index": 8
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "index": 9
                    },
                    {
                      "name": "NotWithdrawable",
                      "index": 10
                    },
                    {
                      "name": "LocationCannotHold",
                      "index": 11
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "index": 12
                    },
                    {
                      "name": "DestinationUnsupported",
                      "index": 13
                    },
                    {
                      "name": "Transport",
                      "index": 14
                    },
                    {
                      "name": "Unroutable",
                      "index": 15
                    },
                    {
                      "name": "UnknownClaim",
                      "index": 16
                    },
                    {
                      "name": "FailedToDecode",
                      "index": 17
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "index": 18
                    },
                    {
                      "name": "NotHoldingFees",
                      "index": 19
                    },
                    {
                      "name": "TooExpensive",
                      "index": 20
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "ExpectationFalse",
                      "index": 22
                    },
                    {
                      "name": "PalletNotFound",
                      "index": 23
                    },
                    {
                      "name": "NameMismatch",
                      "index": 24
                    },
                    {
                      "name": "VersionIncompatible",
                      "index": 25
                    },
                    {
                      "name": "HoldingWouldOverflow",
                      "index": 26
                    },
                    {
                      "name": "ExportError",
                      "index": 27
                    },
                    {
                      "name": "ReanchorFailed",
                      "index": 28
                    },
                    {
                      "name": "NoDeal",
                      "index": 29
                    },
                    {
                      "name": "FeesNotMet",
                      "index": 30
                    },
                    {
                      "name": "LockError",
                      "index": 31
                    },
                    {
                      "name": "NoPermission",
                      "index": 32
                    },
                    {
                      "name": "Unanchored",
                      "index": 33
                    },
                    {
                      "name": "NotDepositable",
                      "index": 34
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "index": 35
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "Barrier",
                      "index": 37
                    },
                    {
                      "name": "WeightNotComputable",
                      "index": 38
                    },
                    {
                      "name": "ExceedsStackLimit",
                      "index": 39
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 63,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multilocation",
                "MultiLocation"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "interior",
                      "type": 64,
                      "typeName": "Junctions"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 64,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junctions",
                "Junctions"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "index": 0
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        },
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "Junction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 67,
                          "typeName": "Option<NetworkId>"
                        },
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 67,
                          "typeName": "Option<NetworkId>"
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 67,
                          "typeName": "Option<NetworkId>"
                        },
                        {
                          "name": "key",
                          "type": 69,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "u128"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": "length",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "data",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "OnlyChild",
                      "index": 7
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 71,
                          "typeName": "BodyId"
                        },
                        {
                          "name": "part",
                          "type": 72,
                          "typeName": "BodyPart"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "GlobalConsensus",
                      "fields": [
                        {
                          "type": 68,
                          "typeName": "NetworkId"
                        }
                      ],
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 66,
            "type": {
              "def": {
                "compact": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 67,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 68
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 68
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "NetworkId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ByGenesis",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ByFork",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 11,
                          "typeName": "u64"
                        },
                        {
                          "name": "block_hash",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Polkadot",
                      "index": 2
                    },
                    {
                      "name": "Kusama",
                      "index": 3
                    },
                    {
                      "name": "Westend",
                      "index": 4
                    },
                    {
                      "name": "Rococo",
                      "index": 5
                    },
                    {
                      "name": "Wococo",
                      "index": 6
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "name": "chain_id",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "BitcoinCore",
                      "index": 8
                    },
                    {
                      "name": "BitcoinCash",
                      "index": 9
                    },
                    {
                      "name": "PolkadotBulletin",
                      "index": 10
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 69,
            "type": {
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 70,
            "type": {
              "def": {
                "compact": {
                  "type": 6
                }
              }
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "BodyId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "index": 0
                    },
                    {
                      "name": "Moniker",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "[u8; 4]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Executive",
                      "index": 3
                    },
                    {
                      "name": "Technical",
                      "index": 4
                    },
                    {
                      "name": "Legislative",
                      "index": 5
                    },
                    {
                      "name": "Judicial",
                      "index": 6
                    },
                    {
                      "name": "Defense",
                      "index": 7
                    },
                    {
                      "name": "Administration",
                      "index": 8
                    },
                    {
                      "name": "Treasury",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "BodyPart"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "index": 0
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 73,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 74,
                      "typeName": "Vec<Instruction<Call>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 74,
            "type": {
              "def": {
                "sequence": {
                  "type": 75
                }
              }
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 84,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "querier",
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 94,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "call",
                          "type": 95,
                          "typeName": "DoubleEncoded<Call>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 64,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "beneficiary",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "want",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "maximal",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 73,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 73,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "type": 85,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "type": 91,
                          "typeName": "MaybeErrorCode"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "response_info",
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "crate_major",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "ClearTransactStatus",
                      "index": 36
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 68,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "destination",
                          "type": 64,
                          "typeName": "InteriorMultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "unlocker",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "target",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "owner",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "locker",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "ClearTopic",
                      "index": 45
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        },
                        {
                          "name": "check_origin",
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 47
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "MultiAssets"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 77,
                      "typeName": "Vec<MultiAsset>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 77,
            "type": {
              "def": {
                "sequence": {
                  "type": 78
                }
              }
            }
          },
          {
            "id": 78,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "MultiAsset"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 79,
                      "typeName": "AssetId"
                    },
                    {
                      "name": "fun",
                      "type": 80,
                      "typeName": "Fungibility"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "AssetId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 80,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "Fungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "u128"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "type": 81,
                          "typeName": "AssetInstance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "AssetInstance"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "u128"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "[u8; 4]"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "type": 82,
                          "typeName": "[u8; 8]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "type": 83,
                          "typeName": "[u8; 16]"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 82,
            "type": {
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 83,
            "type": {
              "def": {
                "array": {
                  "len": 16,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 84,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Response"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "index": 0
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "type": 85,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "super::Version"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "PalletsInfo",
                      "fields": [
                        {
                          "type": 87,
                          "typeName": "BoundedVec<PalletInfo, MaxPalletsInfo>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "DispatchResult",
                      "fields": [
                        {
                          "type": 91,
                          "typeName": "MaybeErrorCode"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 85,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 86
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 86
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 86,
            "type": {
              "def": {
                "tuple": [
                  4,
                  62
                ]
              }
            }
          },
          {
            "id": 87,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 88
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 90,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "xcm",
                "v3",
                "PalletInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 66,
                      "typeName": "u32"
                    },
                    {
                      "name": "name",
                      "type": 89,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>"
                    },
                    {
                      "name": "module_name",
                      "type": 89,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>"
                    },
                    {
                      "name": "major",
                      "type": 66,
                      "typeName": "u32"
                    },
                    {
                      "name": "minor",
                      "type": 66,
                      "typeName": "u32"
                    },
                    {
                      "name": "patch",
                      "type": 66,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 90,
            "type": {
              "def": {
                "sequence": {
                  "type": 88
                }
              }
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "xcm",
                "v3",
                "MaybeErrorCode"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Success",
                      "index": 0
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "type": 92,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "TruncatedError",
                      "fields": [
                        {
                          "type": 92,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 92,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 63
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 63
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "xcm",
                "v2",
                "OriginKind"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Native",
                      "index": 0
                    },
                    {
                      "name": "SovereignAccount",
                      "index": 1
                    },
                    {
                      "name": "Superuser",
                      "index": 2
                    },
                    {
                      "name": "Xcm",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 95,
            "type": {
              "path": [
                "xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 96,
            "type": {
              "path": [
                "xcm",
                "v3",
                "QueryResponseInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "destination",
                      "type": 63,
                      "typeName": "MultiLocation"
                    },
                    {
                      "name": "query_id",
                      "type": 10,
                      "typeName": "QueryId"
                    },
                    {
                      "name": "max_weight",
                      "type": 9,
                      "typeName": "Weight"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "MultiAssetFilter"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "WildMultiAsset"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 98,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "WildMultiAsset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "index": 0
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 79,
                          "typeName": "AssetId"
                        },
                        {
                          "name": "fun",
                          "type": 99,
                          "typeName": "WildFungibility"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AllCounted",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AllOfCounted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 79,
                          "typeName": "AssetId"
                        },
                        {
                          "name": "fun",
                          "type": 99,
                          "typeName": "WildFungibility"
                        },
                        {
                          "name": "count",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 99,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "WildFungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "xcm",
                "v3",
                "WeightLimit"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "index": 0
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "xcm",
                "VersionedMultiAssets"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "v2::MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "v3::MultiAssets"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 102,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "MultiAssets"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 103,
                      "typeName": "Vec<MultiAsset>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 103,
            "type": {
              "def": {
                "sequence": {
                  "type": 104
                }
              }
            }
          },
          {
            "id": 104,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "MultiAsset"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 105,
                      "typeName": "AssetId"
                    },
                    {
                      "name": "fun",
                      "type": 113,
                      "typeName": "Fungibility"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 105,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "AssetId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "type": 106,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 106,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multilocation",
                "MultiLocation"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "interior",
                      "type": 107,
                      "typeName": "Junctions"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 107,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multilocation",
                "Junctions"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "index": 0
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        },
                        {
                          "type": 108,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "xcm",
                "v2",
                "junction",
                "Junction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 109,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 109,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 109,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "key",
                          "type": 69,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "u128"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "type": 110,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "OnlyChild",
                      "index": 7
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 111,
                          "typeName": "BodyId"
                        },
                        {
                          "name": "part",
                          "type": 112,
                          "typeName": "BodyPart"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "xcm",
                "v2",
                "NetworkId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "index": 0
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "type": 110,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Polkadot",
                      "index": 2
                    },
                    {
                      "name": "Kusama",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 110,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 111,
            "type": {
              "path": [
                "xcm",
                "v2",
                "BodyId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "index": 0
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "type": 110,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Executive",
                      "index": 3
                    },
                    {
                      "name": "Technical",
                      "index": 4
                    },
                    {
                      "name": "Legislative",
                      "index": 5
                    },
                    {
                      "name": "Judicial",
                      "index": 6
                    },
                    {
                      "name": "Defense",
                      "index": 7
                    },
                    {
                      "name": "Administration",
                      "index": 8
                    },
                    {
                      "name": "Treasury",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 112,
            "type": {
              "path": [
                "xcm",
                "v2",
                "BodyPart"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "index": 0
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "Fungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "u128"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "type": 114,
                          "typeName": "AssetInstance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "AssetInstance"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "u128"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "[u8; 4]"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "type": 82,
                          "typeName": "[u8; 8]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "type": 83,
                          "typeName": "[u8; 16]"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Blob",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 115,
            "type": {
              "path": [
                "xcm",
                "VersionedMultiLocation"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 106,
                          "typeName": "v2::MultiLocation"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "v3::MultiLocation"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 116,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidFormat",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Downward message is invalid XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "UnsupportedVersion",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Downward message is unsupported version of XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "ExecutedDownward",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        },
                        {
                          "type": 61,
                          "typeName": "Outcome"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Downward message executed with the given outcome.",
                        "\\[ id, outcome \\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StartedExport",
                      "index": 0,
                      "docs": [
                        "The export of pages started."
                      ]
                    },
                    {
                      "name": "Exported",
                      "fields": [
                        {
                          "name": "page",
                          "type": 4,
                          "typeName": "PageCounter"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The export of a page completed."
                      ]
                    },
                    {
                      "name": "ExportFailed",
                      "fields": [
                        {
                          "name": "page",
                          "type": 4,
                          "typeName": "PageCounter"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The export of a page failed.",
                        "",
                        "This should never be emitted."
                      ]
                    },
                    {
                      "name": "CompletedExport",
                      "index": 3,
                      "docs": [
                        "The export of pages completed."
                      ]
                    },
                    {
                      "name": "StartedOverweightExport",
                      "index": 4,
                      "docs": [
                        "The export of overweight messages started."
                      ]
                    },
                    {
                      "name": "ExportedOverweight",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The export of an overweight message completed."
                      ]
                    },
                    {
                      "name": "ExportOverweightFailed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The export of an overweight message failed.",
                        "",
                        "This should never be emitted."
                      ]
                    },
                    {
                      "name": "CompletedOverweightExport",
                      "index": 7,
                      "docs": [
                        "The export of overweight messages completed."
                      ]
                    },
                    {
                      "name": "StartedCleanup",
                      "index": 8,
                      "docs": [
                        "The cleanup of remaining pallet storage started."
                      ]
                    },
                    {
                      "name": "CleanedSome",
                      "fields": [
                        {
                          "name": "keys_removed",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some debris was cleaned up."
                      ]
                    },
                    {
                      "name": "Completed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "The cleanup of remaining pallet storage completed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingUpdated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "unvested",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The amount vested has been updated. This could indicate a change in funds available.",
                        "The balance given is the amount which is left unvested (and thus locked)."
                      ]
                    },
                    {
                      "name": "VestingCompleted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An \\[account\\] has become fully vested."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 119,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchInterrupted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                        "well as the error."
                      ]
                    },
                    {
                      "name": "BatchCompleted",
                      "index": 1,
                      "docs": [
                        "Batch of dispatches completed fully with no error."
                      ]
                    },
                    {
                      "name": "BatchCompletedWithErrors",
                      "index": 2,
                      "docs": [
                        "Batch of dispatches completed but has errors."
                      ]
                    },
                    {
                      "name": "ItemCompleted",
                      "index": 3,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with no error."
                      ]
                    },
                    {
                      "name": "ItemFailed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with error."
                      ]
                    },
                    {
                      "name": "DispatchedAs",
                      "fields": [
                        {
                          "name": "result",
                          "type": 42,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A call was dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "orml_tokens",
                "module",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below",
                        "ExistentialDeposit, resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "status",
                          "type": 34,
                          "typeName": "BalanceStatus"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some reserved balance was repatriated (moved from reserved to",
                        "another account)."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "reserved",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "TotalIssuanceSet",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The total issuance of an currency has been set"
                      ]
                    },
                    {
                      "name": "Withdrawn",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some balances were withdrawn (e.g. pay for transaction fee)"
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free_amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "reserved_amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some balances were slashed (e.g. due to mis-behavior)"
                      ]
                    },
                    {
                      "name": "Deposited",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Deposited some balance into an account"
                      ]
                    },
                    {
                      "name": "LockSet",
                      "fields": [
                        {
                          "name": "lock_id",
                          "type": 82,
                          "typeName": "LockIdentifier"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some funds are locked"
                      ]
                    },
                    {
                      "name": "LockRemoved",
                      "fields": [
                        {
                          "name": "lock_id",
                          "type": 82,
                          "typeName": "LockIdentifier"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some locked funds were unlocked"
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some free balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Some locked balance was freed."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 16
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 121,
            "type": {
              "path": [
                "spacewalk_primitives",
                "CurrencyId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Native",
                      "index": 0
                    },
                    {
                      "name": "XCM",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Stellar",
                      "fields": [
                        {
                          "type": 122,
                          "typeName": "Asset"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "ZenlinkLPToken",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "spacewalk_primitives",
                "Asset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StellarNative",
                      "index": 0
                    },
                    {
                      "name": "AlphaNum4",
                      "fields": [
                        {
                          "name": "code",
                          "type": 17,
                          "typeName": "Bytes4"
                        },
                        {
                          "name": "issuer",
                          "type": 1,
                          "typeName": "AssetIssuer"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AlphaNum12",
                      "fields": [
                        {
                          "name": "code",
                          "type": 123,
                          "typeName": "Bytes12"
                        },
                        {
                          "name": "issuer",
                          "type": 1,
                          "typeName": "AssetIssuer"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 123,
            "type": {
              "def": {
                "array": {
                  "len": 12,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "orml_xtokens",
                "module",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransferredMultiAssets",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "assets",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "fee",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "dest",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Transferred `MultiAsset` with fee."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IdentitySet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A name was set or reset (which will remove all judgements)."
                      ]
                    },
                    {
                      "name": "IdentityCleared",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A name was cleared, and the given balance returned."
                      ]
                    },
                    {
                      "name": "IdentityKilled",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A name was removed and the given balance slashed."
                      ]
                    },
                    {
                      "name": "JudgementRequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A judgement was asked from a registrar."
                      ]
                    },
                    {
                      "name": "JudgementUnrequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A judgement request was retracted."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A judgement was given by a registrar."
                      ]
                    },
                    {
                      "name": "RegistrarAdded",
                      "fields": [
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A registrar was added."
                      ]
                    },
                    {
                      "name": "SubIdentityAdded",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A sub-identity was added to an identity and the deposit paid."
                      ]
                    },
                    {
                      "name": "SubIdentityRemoved",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A sub-identity was removed from an identity and the deposit freed."
                      ]
                    },
                    {
                      "name": "SubIdentityRevoked",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A sub-identity was cleared, and the given deposit repatriated from the",
                        "main identity account to the sub-identity account."
                      ]
                    },
                    {
                      "name": "AuthorityAdded",
                      "fields": [
                        {
                          "name": "authority",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A username authority was added."
                      ]
                    },
                    {
                      "name": "AuthorityRemoved",
                      "fields": [
                        {
                          "name": "authority",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A username authority was removed."
                      ]
                    },
                    {
                      "name": "UsernameSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A username was set for `who`."
                      ]
                    },
                    {
                      "name": "UsernameQueued",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        },
                        {
                          "name": "expiration",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A username was queued, but `who` must accept it prior to `expiration`."
                      ]
                    },
                    {
                      "name": "PreapprovalExpired",
                      "fields": [
                        {
                          "name": "whose",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A queued username passed its expiration without being claimed and was removed."
                      ]
                    },
                    {
                      "name": "PrimaryUsernameSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A username was set as a primary and can be looked up from `who`."
                      ]
                    },
                    {
                      "name": "DanglingUsernameRemoved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "A dangling username (as in, a username corresponding to an account that has removed its",
                        "identity) has been removed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 126,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Instantiated",
                      "fields": [
                        {
                          "name": "deployer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Contract deployed by address at the specified address."
                      ]
                    },
                    {
                      "name": "Terminated",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that was terminated."
                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that received the contracts remaining balance"
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Contract has been removed.",
                        "",
                        "# Note",
                        "",
                        "The only way for a contract to be removed and emitting this event is by calling",
                        "`seal_terminate`."
                      ]
                    },
                    {
                      "name": "CodeStored",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "deposit_held",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "uploader",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Code with the specified hash has been stored."
                      ]
                    },
                    {
                      "name": "ContractEmitted",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that emitted the event."
                          ]
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": [
                            "Data supplied by the contract. Metadata generated during contract compilation",
                            "is needed to decode it."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A custom event emitted by the contract."
                      ]
                    },
                    {
                      "name": "CodeRemoved",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "deposit_released",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "remover",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A code with the specified hash was removed."
                      ]
                    },
                    {
                      "name": "ContractCodeUpdated",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that has been updated."
                          ]
                        },
                        {
                          "name": "new_code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "New code hash that was set for the contract."
                          ]
                        },
                        {
                          "name": "old_code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Previous code hash of the contract."
                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A contract's code was updated."
                      ]
                    },
                    {
                      "name": "Called",
                      "fields": [
                        {
                          "name": "caller",
                          "type": 128,
                          "typeName": "Origin<T>",
                          "docs": [
                            "The caller of the `contract`."
                          ]
                        },
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that was called."
                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A contract was called either by a plain account or another contract.",
                        "",
                        "# Note",
                        "",
                        "Please keep in mind that like all events this is only emitted for successful",
                        "calls. This is because on failure all storage changes including events are",
                        "rolled back."
                      ]
                    },
                    {
                      "name": "DelegateCalled",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that performed the delegate call and hence in whose context",
                            "the `code_hash` is executed."
                          ]
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>",
                          "docs": [
                            "The code hash that was delegate called."
                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A contract delegate called a code hash.",
                        "",
                        "# Note",
                        "",
                        "Please keep in mind that like all events this is only emitted for successful",
                        "calls. This is because on failure all storage changes including events are",
                        "rolled back."
                      ]
                    },
                    {
                      "name": "StorageDepositTransferredAndHeld",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some funds have been transferred and held as storage deposit."
                      ]
                    },
                    {
                      "name": "StorageDepositTransferredAndReleased",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some storage deposit funds have been transferred and released."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 128,
            "type": {
              "path": [
                "pallet_contracts",
                "Origin"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 129
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "index": 0
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 129,
            "type": {
              "path": [
                "amplitude_runtime",
                "Runtime"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 130,
            "type": {
              "path": [
                "dia_oracle",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UpdatedPrices",
                      "fields": [
                        {
                          "type": 131,
                          "typeName": "Vec<((Vec<u8>, Vec<u8>), CoinInfo)>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Event is triggered when prices are updated"
                      ]
                    },
                    {
                      "name": "AccountIdAuthorized",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Event is triggered when account is authorized"
                      ]
                    },
                    {
                      "name": "AccountIdDeauthorized",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Event is triggered when account is deauthorized"
                      ]
                    },
                    {
                      "name": "CurrencyAdded",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Event is triggered when currency is added to the list"
                      ]
                    },
                    {
                      "name": "CurrencyRemoved",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Event is triggered when currency is remove from the list"
                      ]
                    },
                    {
                      "name": "BatchingApiRouteSet",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Event is triggered when batching api route is set from the list"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 131,
            "type": {
              "def": {
                "sequence": {
                  "type": 132
                }
              }
            }
          },
          {
            "id": 132,
            "type": {
              "def": {
                "tuple": [
                  133,
                  134
                ]
              }
            }
          },
          {
            "id": 133,
            "type": {
              "def": {
                "tuple": [
                  13,
                  13
                ]
              }
            }
          },
          {
            "id": 134,
            "type": {
              "path": [
                "dia_oracle",
                "dia",
                "CoinInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "symbol",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "name",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "blockchain",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "supply",
                      "type": 6,
                      "typeName": "u128"
                    },
                    {
                      "name": "last_update_timestamp",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "price",
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "zenlink_protocol",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Foreign Asset",
                        "Some assets were transferred. \\[asset_id, owner, target, amount\\]"
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some assets were burned. \\[asset_id, owner, amount\\]"
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some assets were minted. \\[asset_id, owner, amount\\]"
                      ]
                    },
                    {
                      "name": "PairCreated",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Swap",
                        "Create a trading pair. \\[asset_0, asset_1\\]"
                      ]
                    },
                    {
                      "name": "LiquidityAdded",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Add liquidity. \\[owner, asset_0, asset_1, add_balance_0, add_balance_1,",
                        "mint_balance_lp\\]"
                      ]
                    },
                    {
                      "name": "LiquidityRemoved",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Remove liquidity. \\[owner, recipient, asset_0, asset_1, rm_balance_0, rm_balance_1,",
                        "burn_balance_lp\\]"
                      ]
                    },
                    {
                      "name": "AssetSwap",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 137,
                          "typeName": "Vec<T::AssetId>"
                        },
                        {
                          "type": 138,
                          "typeName": "Vec<AssetBalance>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Transact in trading \\[owner, recipient, swap_path, balances\\]"
                      ]
                    },
                    {
                      "name": "TransferredToParachain",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 139,
                          "typeName": "ParaId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Transfer by xcm",
                        "Transferred to parachain. \\[asset_id, src, para_id, dest, amount, used_weight\\]"
                      ]
                    },
                    {
                      "name": "BootstrapContribute",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Contribute to bootstrap pair. \\[who, asset_0, asset_0_contribute, asset_1_contribute\\]"
                      ]
                    },
                    {
                      "name": "BootstrapEnd",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A bootstrap pair end. \\[asset_0, asset_1, asset_0_amount, asset_1_amount,",
                        "total_lp_supply]"
                      ]
                    },
                    {
                      "name": "BootstrapCreated",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Create a bootstrap pair. \\[bootstrap_pair_account, asset_0, asset_1,",
                        "total_supply_0,total_supply_1, capacity_supply_0,capacity_supply_1, end\\]"
                      ]
                    },
                    {
                      "name": "BootstrapClaim",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Claim a bootstrap pair. \\[bootstrap_pair_account, claimer, receiver, asset_0, asset_1,",
                        "asset_0_refund, asset_1_refund, lp_amount\\]"
                      ]
                    },
                    {
                      "name": "BootstrapUpdate",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Update a bootstrap pair. \\[caller, asset_0, asset_1,",
                        "total_supply_0,total_supply_1, capacity_supply_0,capacity_supply_1\\]"
                      ]
                    },
                    {
                      "name": "BootstrapRefund",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        },
                        {
                          "type": 6,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Refund from disable bootstrap pair. \\[bootstrap_pair_account, caller, asset_0, asset_1,",
                        "asset_0_refund, asset_1_refund\\]"
                      ]
                    },
                    {
                      "name": "DistributeReward",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 140,
                          "typeName": "Vec<(T::AssetId, AssetBalance)>"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Bootstrap distribute some rewards to contributors."
                      ]
                    },
                    {
                      "name": "ChargeReward",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 140,
                          "typeName": "Vec<(T::AssetId, AssetBalance)>"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Charge reward into a bootstrap."
                      ]
                    },
                    {
                      "name": "WithdrawReward",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Withdraw all reward from a bootstrap."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 136,
            "type": {
              "path": [
                "zenlink_protocol",
                "primitives",
                "AssetId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "asset_type",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "asset_index",
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 137,
            "type": {
              "def": {
                "sequence": {
                  "type": 136
                }
              }
            }
          },
          {
            "id": 138,
            "type": {
              "def": {
                "sequence": {
                  "type": 6
                }
              }
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "Id"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 140,
            "type": {
              "def": {
                "sequence": {
                  "type": 141
                }
              }
            }
          },
          {
            "id": 141,
            "type": {
              "def": {
                "tuple": [
                  136,
                  6
                ]
              }
            }
          },
          {
            "id": 142,
            "type": {
              "path": [
                "issue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequestIssue",
                      "fields": [
                        {
                          "name": "issue_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "requester",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "griefing_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "vault_stellar_public_key",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "IssueAmountChange",
                      "fields": [
                        {
                          "name": "issue_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "confiscated_griefing_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ExecuteIssue",
                      "fields": [
                        {
                          "name": "issue_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "requester",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "CancelIssue",
                      "fields": [
                        {
                          "name": "issue_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "requester",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "griefing_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "IssuePeriodChange",
                      "fields": [
                        {
                          "name": "period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "RateLimitUpdate",
                      "fields": [
                        {
                          "name": "limit_volume_amount",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        },
                        {
                          "name": "limit_volume_currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "interval_length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "IssueMinimumTransferAmountUpdate",
                      "fields": [
                        {
                          "name": "new_minimum_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 6
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "spacewalk_primitives",
                "VaultId"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "CurrencyId",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account_id",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "currencies",
                      "type": 144,
                      "typeName": "VaultCurrencyPair<CurrencyId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 144,
            "type": {
              "path": [
                "spacewalk_primitives",
                "VaultCurrencyPair"
              ],
              "params": [
                {
                  "name": "CurrencyId",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "collateral",
                      "type": 121,
                      "typeName": "CurrencyId"
                    },
                    {
                      "name": "wrapped",
                      "type": 121,
                      "typeName": "CurrencyId"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 145,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 6
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 146,
            "type": {
              "path": [
                "nomination",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NominationOptIn",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "NominationOptOut",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "DepositCollateral",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "nominator_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "WithdrawCollateral",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "nominator_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 147,
            "type": {
              "path": [
                "oracle",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AggregateUpdated",
                      "fields": [
                        {
                          "name": "values",
                          "type": 148,
                          "typeName": "Vec<(OracleKey, T::UnsignedFixedPoint)>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "OracleKeysUpdated",
                      "fields": [
                        {
                          "name": "oracle_keys",
                          "type": 152,
                          "typeName": "Vec<OracleKey>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "MaxDelayUpdated",
                      "fields": [
                        {
                          "name": "max_delay",
                          "type": 11,
                          "typeName": "T::Moment"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 148,
            "type": {
              "def": {
                "sequence": {
                  "type": 149
                }
              }
            }
          },
          {
            "id": 149,
            "type": {
              "def": {
                "tuple": [
                  150,
                  151
                ]
              }
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "spacewalk_primitives",
                "oracle",
                "Key"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExchangeRate",
                      "fields": [
                        {
                          "type": 121,
                          "typeName": "CurrencyId"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 151,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 152,
            "type": {
              "def": {
                "sequence": {
                  "type": 150
                }
              }
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "redeem",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequestRedeem",
                      "fields": [
                        {
                          "name": "redeem_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "redeemer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "premium",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "stellar_address",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        },
                        {
                          "name": "transfer_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "LiquidationRedeem",
                      "fields": [
                        {
                          "name": "redeemer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ExecuteRedeem",
                      "fields": [
                        {
                          "name": "redeem_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "redeemer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "transfer_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "CancelRedeem",
                      "fields": [
                        {
                          "name": "redeem_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "redeemer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "slashed_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "status",
                          "type": 154,
                          "typeName": "RedeemRequestStatus"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "MintTokensForReimbursedRedeem",
                      "fields": [
                        {
                          "name": "redeem_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "RedeemPeriodChange",
                      "fields": [
                        {
                          "name": "period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "SelfRedeem",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "RateLimitUpdate",
                      "fields": [
                        {
                          "name": "limit_volume_amount",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        },
                        {
                          "name": "limit_volume_currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "interval_length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "RedeemMinimumTransferAmountUpdate",
                      "fields": [
                        {
                          "name": "new_minimum_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "spacewalk_primitives",
                "redeem",
                "RedeemRequestStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "index": 0
                    },
                    {
                      "name": "Completed",
                      "index": 1
                    },
                    {
                      "name": "Reimbursed",
                      "fields": [
                        {
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Retried",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "replace",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequestReplace",
                      "fields": [
                        {
                          "name": "old_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "griefing_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "WithdrawReplace",
                      "fields": [
                        {
                          "name": "old_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "withdrawn_tokens",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "withdrawn_griefing_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AcceptReplace",
                      "fields": [
                        {
                          "name": "replace_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "old_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "new_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "stellar_address",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "ExecuteReplace",
                      "fields": [
                        {
                          "name": "replace_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "old_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "new_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "CancelReplace",
                      "fields": [
                        {
                          "name": "replace_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "new_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "old_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "griefing_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "ReplacePeriodChange",
                      "fields": [
                        {
                          "name": "period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "ReplaceMinimumTransferAmountUpdate",
                      "fields": [
                        {
                          "name": "new_minimum_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 6
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "security",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RecoverFromErrors",
                      "fields": [
                        {
                          "name": "new_status",
                          "type": 157,
                          "typeName": "StatusCode"
                        },
                        {
                          "name": "cleared_errors",
                          "type": 158,
                          "typeName": "Vec<ErrorCode>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "UpdateActiveBlock",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 157,
            "type": {
              "path": [
                "security",
                "types",
                "StatusCode"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Running",
                      "index": 0
                    },
                    {
                      "name": "Error",
                      "index": 1
                    },
                    {
                      "name": "Shutdown",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 158,
            "type": {
              "def": {
                "sequence": {
                  "type": 159
                }
              }
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "security",
                "types",
                "ErrorCode"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "OracleOffline",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 160,
            "type": {
              "path": [
                "stellar_relay",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UpdateTier1ValidatorSet",
                      "fields": [
                        {
                          "name": "new_validators_enactment_block_height",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 161,
            "type": {
              "path": [
                "vault_registry",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RegisterVault",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "DepositCollateral",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "new_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "total_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "free_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "WithdrawCollateral",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "withdrawn_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "total_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "IncreaseLockedCollateral",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "delta",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "total",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "DecreaseLockedCollateral",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "delta",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "total",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "UpdatePublicKey",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "public_key",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "RegisterAddress",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "address",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "IncreaseToBeIssuedTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "increase",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "DecreaseToBeIssuedTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "decrease",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "IssueTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "increase",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "IncreaseToBeRedeemedTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "increase",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "DecreaseToBeRedeemedTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "decrease",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "IncreaseToBeReplacedTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "increase",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DecreaseToBeReplacedTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "decrease",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DecreaseTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "user_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "decrease",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "RedeemTokens",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "redeemed_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "RedeemTokensPremium",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "redeemed_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "user_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "RedeemTokensLiquidatedVault",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "tokens",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "RedeemTokensLiquidation",
                      "fields": [
                        {
                          "name": "redeemer_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "burned_tokens",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "transferred_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "ReplaceTokens",
                      "fields": [
                        {
                          "name": "old_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "new_vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "additional_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "LiquidateVault",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "issued_tokens",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "to_be_issued_tokens",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "to_be_redeemed_tokens",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "to_be_replaced_tokens",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "backing_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "status",
                          "type": 162,
                          "typeName": "VaultStatus"
                        },
                        {
                          "name": "replace_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "BanVault",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "banned_until",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 21
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "vault_registry",
                "types",
                "VaultStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Active",
                      "fields": [
                        {
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Liquidated",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 163,
            "type": {
              "path": [
                "pooled_rewards",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositStake",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 121,
                          "typeName": "T::PoolId"
                        },
                        {
                          "name": "stake_id",
                          "type": 143,
                          "typeName": "T::StakeId"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "DistributeReward",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::PoolRewardsCurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "WithdrawStake",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 121,
                          "typeName": "T::PoolId"
                        },
                        {
                          "name": "stake_id",
                          "type": 143,
                          "typeName": "T::StakeId"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "WithdrawReward",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 121,
                          "typeName": "T::PoolId"
                        },
                        {
                          "name": "stake_id",
                          "type": 143,
                          "typeName": "T::StakeId"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::PoolRewardsCurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedI128"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 165,
                      "typeName": "i128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 165,
            "type": {
              "def": {
                "primitive": "i128"
              }
            }
          },
          {
            "id": 166,
            "type": {
              "path": [
                "staking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositStake",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "nominator_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "DistributeReward",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "WithdrawStake",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "nominator_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "WithdrawReward",
                      "fields": [
                        {
                          "name": "nonce",
                          "type": 4,
                          "typeName": "T::Nonce"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "nominator_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 164,
                          "typeName": "T::SignedFixedPoint"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ForceRefund",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "IncreaseNonce",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "new_nonce",
                          "type": 4,
                          "typeName": "T::Nonce"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 167,
            "type": {
              "path": [
                "clients_info",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotifyClientRelease",
                      "fields": [
                        {
                          "name": "release",
                          "type": 168,
                          "typeName": "ClientRelease<UriOf<T>, T::Hash>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ApplyClientRelease",
                      "fields": [
                        {
                          "name": "release",
                          "type": 168,
                          "typeName": "ClientRelease<UriOf<T>, T::Hash>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AccountIdAuthorized",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AccountIdDeauthorized",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 168,
            "type": {
              "path": [
                "clients_info",
                "ClientRelease"
              ],
              "params": [
                {
                  "name": "Uri",
                  "type": 169
                },
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "uri",
                      "type": 169,
                      "typeName": "Uri"
                    },
                    {
                      "name": "checksum",
                      "type": 12,
                      "typeName": "Hash"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 169,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 170,
            "type": {
              "path": [
                "reward_distribution",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RewardPerBlockAdapted",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new RewardPerBlock value has been set."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "orml_currencies_allowance_extension",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AllowedCurrenciesAdded",
                      "fields": [
                        {
                          "name": "currencies",
                          "type": 172,
                          "typeName": "Vec<CurrencyOf<T>>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AllowedCurrenciesDeleted",
                      "fields": [
                        {
                          "name": "currencies",
                          "type": 172,
                          "typeName": "Vec<CurrencyOf<T>>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "TransferApproved",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "CurrencyOf<T>"
                        },
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "(Additional) funds have been approved for transfer to a destination account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 172,
            "type": {
              "def": {
                "sequence": {
                  "type": 121
                }
              }
            }
          },
          {
            "id": 173,
            "type": {
              "path": [
                "treasury_buyout_extension",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Buyout",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "buyout_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyIdOf<T>"
                        },
                        {
                          "name": "exchange_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Buyout event"
                      ]
                    },
                    {
                      "name": "BuyoutLimitUpdated",
                      "fields": [
                        {
                          "name": "limit",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Buyout limit updated event"
                      ]
                    },
                    {
                      "name": "AllowedAssetsForBuyoutUpdated",
                      "fields": [
                        {
                          "name": "allowed_assets",
                          "type": 172,
                          "typeName": "Vec<CurrencyIdOf<T>>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Updated allowed assets for buyout event"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 174,
            "type": {
              "path": [
                "bifrost_farming",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FarmingPoolCreated",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "FarmingPoolReset",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "FarmingPoolClosed",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "FarmingPoolKilled",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "FarmingPoolEdited",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Charged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "rewards",
                          "type": 175,
                          "typeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Deposited",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "add_value",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gauge_info",
                          "type": 177,
                          "typeName": "Option<(BalanceOf<T>, BlockNumberFor<T>)>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Withdrawn",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "remove_value",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Claimed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "WithdrawClaimed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "GaugeWithdrawn",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "gid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "AllForceGaugeClaimed",
                      "fields": [
                        {
                          "name": "gid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "PartiallyForceGaugeClaimed",
                      "fields": [
                        {
                          "name": "gid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "AllRetired",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "PartiallyRetired",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "RetireLimitSet",
                      "fields": [
                        {
                          "name": "limit",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "RoundEnd",
                      "fields": [
                        {
                          "name": "total_votes",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "start_round",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "end_round",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "RoundStartError",
                      "fields": [
                        {
                          "name": "info",
                          "type": 25,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "RoundStart",
                      "fields": [
                        {
                          "name": "round_length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "vote_list",
                          "type": 179,
                          "typeName": "Vec<(PoolId, Percent)>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "BoostCharged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "rewards",
                          "type": 175,
                          "typeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>"
                        }
                      ],
                      "index": 20
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 175,
            "type": {
              "def": {
                "sequence": {
                  "type": 176
                }
              }
            }
          },
          {
            "id": 176,
            "type": {
              "def": {
                "tuple": [
                  121,
                  6
                ]
              }
            }
          },
          {
            "id": 177,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 178
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 178
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 178,
            "type": {
              "def": {
                "tuple": [
                  6,
                  4
                ]
              }
            }
          },
          {
            "id": 179,
            "type": {
              "def": {
                "sequence": {
                  "type": 180
                }
              }
            }
          },
          {
            "id": 180,
            "type": {
              "def": {
                "tuple": [
                  4,
                  181
                ]
              }
            }
          },
          {
            "id": 181,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Percent"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 182,
            "type": {
              "path": [
                "orml_asset_registry",
                "module",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RegisteredAsset",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 121,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "metadata",
                          "type": 183,
                          "typeName": "AssetMetadata<T::Balance, T::CustomMetadata, T::StringLimit>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "UpdatedAsset",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 121,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "metadata",
                          "type": 183,
                          "typeName": "AssetMetadata<T::Balance, T::CustomMetadata, T::StringLimit>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 183,
            "type": {
              "path": [
                "orml_traits",
                "asset_registry",
                "AssetMetadata"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "CustomMetadata",
                  "type": 184
                },
                {
                  "name": "StringLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "decimals",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "name",
                      "type": 187,
                      "typeName": "BoundedVec<u8, StringLimit>"
                    },
                    {
                      "name": "symbol",
                      "type": 187,
                      "typeName": "BoundedVec<u8, StringLimit>"
                    },
                    {
                      "name": "existential_deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "location",
                      "type": 188,
                      "typeName": "Option<VersionedMultiLocation>"
                    },
                    {
                      "name": "additional",
                      "type": 184,
                      "typeName": "CustomMetadata"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 184,
            "type": {
              "path": [
                "runtime_common",
                "asset_registry",
                "CustomMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "dia_keys",
                      "type": 185,
                      "typeName": "DiaKeys<StringLimit>"
                    },
                    {
                      "name": "fee_per_second",
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 185,
            "type": {
              "path": [
                "runtime_common",
                "asset_registry",
                "DiaKeys"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 186
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "blockchain",
                      "type": 187,
                      "typeName": "BoundedVec<u8, T>"
                    },
                    {
                      "name": "symbol",
                      "type": 187,
                      "typeName": "BoundedVec<u8, T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 186,
            "type": {
              "path": [
                "runtime_common",
                "asset_registry",
                "StringLimit"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 187,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 188,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 115
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 115
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 189,
            "type": {
              "path": [
                "vesting_manager",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingScheduleRemoved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "schedule_index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 190,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProcessingFailed",
                      "fields": [
                        {
                          "name": "id",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [
                            "The `blake2_256` hash of the message."
                          ]
                        },
                        {
                          "name": "origin",
                          "type": 191,
                          "typeName": "MessageOriginOf<T>",
                          "docs": [
                            "The queue of the message."
                          ]
                        },
                        {
                          "name": "error",
                          "type": 192,
                          "typeName": "ProcessMessageError",
                          "docs": [
                            "The error that occurred.",
                            "",
                            "This error is pretty opaque. More fine-grained errors need to be emitted as events",
                            "by the `MessageProcessor`."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
                      ]
                    },
                    {
                      "name": "Processed",
                      "fields": [
                        {
                          "name": "id",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [
                            "The `blake2_256` hash of the message."
                          ]
                        },
                        {
                          "name": "origin",
                          "type": 191,
                          "typeName": "MessageOriginOf<T>",
                          "docs": [
                            "The queue of the message."
                          ]
                        },
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [
                            "How much weight was used to process the message."
                          ]
                        },
                        {
                          "name": "success",
                          "type": 30,
                          "typeName": "bool",
                          "docs": [
                            "Whether the message was processed.",
                            "",
                            "Note that this does not mean that the underlying `MessageProcessor` was internally",
                            "successful. It *solely* means that the MQ pallet will treat this as a success",
                            "condition and discard the message. Any internal error needs to be emitted as events",
                            "by the `MessageProcessor`."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Message is processed."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": [
                            "The `blake2_256` hash of the message."
                          ]
                        },
                        {
                          "name": "origin",
                          "type": 191,
                          "typeName": "MessageOriginOf<T>",
                          "docs": [
                            "The queue of the message."
                          ]
                        },
                        {
                          "name": "page_index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": [
                            "The page of the message."
                          ]
                        },
                        {
                          "name": "message_index",
                          "type": 4,
                          "typeName": "T::Size",
                          "docs": [
                            "The index of the message within the page."
                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Message placed in overweight queue."
                      ]
                    },
                    {
                      "name": "PageReaped",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 191,
                          "typeName": "MessageOriginOf<T>",
                          "docs": [
                            "The queue of the page."
                          ]
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": [
                            "The index of the page."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "This page was reaped."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 191,
            "type": {
              "path": [
                "cumulus_primitives_core",
                "AggregateMessageOrigin"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "index": 0
                    },
                    {
                      "name": "Parent",
                      "index": 1
                    },
                    {
                      "name": "Sibling",
                      "fields": [
                        {
                          "type": 139,
                          "typeName": "ParaId"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 192,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "messages",
                "ProcessMessageError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BadFormat",
                      "index": 0
                    },
                    {
                      "name": "Corrupt",
                      "index": 1
                    },
                    {
                      "name": "Unsupported",
                      "index": 2
                    },
                    {
                      "name": "Overweight",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Yield",
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 193,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Finalization",
                      "index": 1
                    },
                    {
                      "name": "Initialization",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 194,
            "type": {
              "def": {
                "sequence": {
                  "type": 12
                }
              }
            }
          },
          {
            "id": 195,
            "type": {
              "def": {
                "sequence": {
                  "type": 46
                }
              }
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 66,
                      "typeName": "codec::Compact<u32>"
                    },
                    {
                      "name": "spec_name",
                      "type": 197,
                      "typeName": "sp_runtime::RuntimeString"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 197,
            "type": {
              "def": {
                "primitive": "str"
              }
            }
          },
          {
            "id": 198,
            "type": {
              "path": [
                "frame_system",
                "CodeUpgradeAuthorization"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": 12,
                      "typeName": "T::Hash"
                    },
                    {
                      "name": "check_version",
                      "type": 30,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 199,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remark`]."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_heap_pages`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_code_without_checks`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 200,
                          "typeName": "Vec<KeyValue>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 201,
                          "typeName": "Vec<Key>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_storage`]."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 13,
                          "typeName": "Key"
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::kill_prefix`]."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remark_with_event`]."
                      ]
                    },
                    {
                      "name": "authorize_upgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::authorize_upgrade`]."
                      ]
                    },
                    {
                      "name": "authorize_upgrade_without_checks",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::authorize_upgrade_without_checks`]."
                      ]
                    },
                    {
                      "name": "apply_authorized_upgrade",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::apply_authorized_upgrade`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 200,
            "type": {
              "def": {
                "sequence": {
                  "type": 133
                }
              }
            }
          },
          {
            "id": 201,
            "type": {
              "def": {
                "sequence": {
                  "type": 13
                }
              }
            }
          },
          {
            "id": 202,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_block",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "per_class",
                      "type": 203,
                      "typeName": "PerDispatchClass<WeightsPerClass>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 203,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 204
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 204,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 204,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 204,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 204,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 205,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "max_total",
                      "type": 205,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "reserved",
                      "type": 205,
                      "typeName": "Option<Weight>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 9
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 206,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 207,
                      "typeName": "PerDispatchClass<u32>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 207,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 208,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "write",
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 209,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 197,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "impl_name",
                      "type": 197,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "apis",
                      "type": 210,
                      "typeName": "ApisVec"
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 210,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 211
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 211
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 211,
            "type": {
              "def": {
                "sequence": {
                  "type": 212
                }
              }
            }
          },
          {
            "id": 212,
            "type": {
              "def": {
                "tuple": [
                  82,
                  4
                ]
              }
            }
          },
          {
            "id": 213,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    },
                    {
                      "name": "NothingAuthorized",
                      "index": 6,
                      "docs": [
                        "No upgrade authorized."
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "index": 7,
                      "docs": [
                        "The submitted code is not authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 214,
            "type": {
              "def": {
                "sequence": {
                  "type": 215
                }
              }
            }
          },
          {
            "id": 215,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "Ancestor"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "used_bandwidth",
                      "type": 216,
                      "typeName": "UsedBandwidth"
                    },
                    {
                      "name": "para_head_hash",
                      "type": 221,
                      "typeName": "Option<H>"
                    },
                    {
                      "name": "consumed_go_ahead_signal",
                      "type": 222,
                      "typeName": "Option<relay_chain::UpgradeGoAhead>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 216,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "UsedBandwidth"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ump_msg_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "ump_total_bytes",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "hrmp_outgoing",
                      "type": 217,
                      "typeName": "BTreeMap<ParaId, HrmpChannelUpdate>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 217,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 139
                },
                {
                  "name": "V",
                  "type": 218
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 219
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 218,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "HrmpChannelUpdate"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "total_bytes",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 219,
            "type": {
              "def": {
                "sequence": {
                  "type": 220
                }
              }
            }
          },
          {
            "id": 220,
            "type": {
              "def": {
                "tuple": [
                  139,
                  218
                ]
              }
            }
          },
          {
            "id": 221,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 12
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 222,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 223
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 223
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 223,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "UpgradeGoAhead"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Abort",
                      "index": 0
                    },
                    {
                      "name": "GoAhead",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 224,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "SegmentTracker"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "used_bandwidth",
                      "type": 216,
                      "typeName": "UsedBandwidth"
                    },
                    {
                      "name": "hrmp_watermark",
                      "type": 225,
                      "typeName": "Option<relay_chain::BlockNumber>"
                    },
                    {
                      "name": "consumed_go_ahead_signal",
                      "type": 222,
                      "typeName": "Option<relay_chain::UpgradeGoAhead>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 225,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 4
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 226,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "PersistedValidationData"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_head",
                      "type": 227,
                      "typeName": "HeadData"
                    },
                    {
                      "name": "relay_parent_number",
                      "type": 4,
                      "typeName": "N"
                    },
                    {
                      "name": "relay_parent_storage_root",
                      "type": 12,
                      "typeName": "H"
                    },
                    {
                      "name": "max_pov_size",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 227,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "HeadData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 228,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 229
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 229
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 229,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "UpgradeRestriction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Present",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 230,
            "type": {
              "path": [
                "sp_trie",
                "storage_proof",
                "StorageProof"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "trie_nodes",
                      "type": 231,
                      "typeName": "BTreeSet<Vec<u8>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 231,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 201
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 232,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "relay_state_snapshot",
                "MessagingStateSnapshot"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "dmq_mqc_head",
                      "type": 12,
                      "typeName": "relay_chain::Hash"
                    },
                    {
                      "name": "relay_dispatch_queue_remaining_capacity",
                      "type": 233,
                      "typeName": "RelayDispatchQueueRemainingCapacity"
                    },
                    {
                      "name": "ingress_channels",
                      "type": 234,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>"
                    },
                    {
                      "name": "egress_channels",
                      "type": 234,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 233,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "relay_state_snapshot",
                "RelayDispatchQueueRemainingCapacity"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "remaining_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "remaining_size",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 234,
            "type": {
              "def": {
                "sequence": {
                  "type": 235
                }
              }
            }
          },
          {
            "id": 235,
            "type": {
              "def": {
                "tuple": [
                  139,
                  236
                ]
              }
            }
          },
          {
            "id": 236,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "AbridgedHrmpChannel"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_capacity",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_total_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_message_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "total_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "mqc_head",
                      "type": 221,
                      "typeName": "Option<Hash>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 237,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "AbridgedHostConfiguration"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_code_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_head_data_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_queue_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_queue_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_message_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "hrmp_max_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "validation_upgrade_cooldown",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "validation_upgrade_delay",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "async_backing_params",
                      "type": 238,
                      "typeName": "AsyncBackingParams"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 238,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "async_backing",
                "AsyncBackingParams"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_candidate_depth",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "allowed_ancestry_len",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 239,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "MessageQueueChain"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 12,
                      "typeName": "RelayHash"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 240,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 139
                },
                {
                  "name": "V",
                  "type": 239
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 241
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 241,
            "type": {
              "def": {
                "sequence": {
                  "type": 242
                }
              }
            }
          },
          {
            "id": 242,
            "type": {
              "def": {
                "tuple": [
                  139,
                  239
                ]
              }
            }
          },
          {
            "id": 243,
            "type": {
              "def": {
                "sequence": {
                  "type": 244
                }
              }
            }
          },
          {
            "id": 244,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "OutboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 139,
                      "typeName": "Id"
                    },
                    {
                      "name": "data",
                      "type": 13,
                      "typeName": "sp_std::vec::Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 245,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_validation_data",
                      "fields": [
                        {
                          "name": "data",
                          "type": 246,
                          "typeName": "ParachainInherentData"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_validation_data`]."
                      ]
                    },
                    {
                      "name": "sudo_send_upward_message",
                      "fields": [
                        {
                          "name": "message",
                          "type": 13,
                          "typeName": "UpwardMessage"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_send_upward_message`]."
                      ]
                    },
                    {
                      "name": "authorize_upgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "check_version",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::authorize_upgrade`]."
                      ]
                    },
                    {
                      "name": "enact_authorized_upgrade",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::enact_authorized_upgrade`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 246,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "ParachainInherentData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "validation_data",
                      "type": 226,
                      "typeName": "PersistedValidationData"
                    },
                    {
                      "name": "relay_chain_state",
                      "type": 230,
                      "typeName": "sp_trie::StorageProof"
                    },
                    {
                      "name": "downward_messages",
                      "type": 247,
                      "typeName": "Vec<InboundDownwardMessage>"
                    },
                    {
                      "name": "horizontal_messages",
                      "type": 249,
                      "typeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 247,
            "type": {
              "def": {
                "sequence": {
                  "type": 248
                }
              }
            }
          },
          {
            "id": 248,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundDownwardMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "msg",
                      "type": 13,
                      "typeName": "DownwardMessage"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 249,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 139
                },
                {
                  "name": "V",
                  "type": 250
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 252
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 250,
            "type": {
              "def": {
                "sequence": {
                  "type": 251
                }
              }
            }
          },
          {
            "id": 251,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "data",
                      "type": 13,
                      "typeName": "sp_std::vec::Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 252,
            "type": {
              "def": {
                "sequence": {
                  "type": 253
                }
              }
            }
          },
          {
            "id": 253,
            "type": {
              "def": {
                "tuple": [
                  139,
                  250
                ]
              }
            }
          },
          {
            "id": 254,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OverlappingUpgrades",
                      "index": 0,
                      "docs": [
                        "Attempt to upgrade validation function while existing upgrade pending."
                      ]
                    },
                    {
                      "name": "ProhibitedByPolkadot",
                      "index": 1,
                      "docs": [
                        "Polkadot currently prohibits this parachain from upgrading its validation function."
                      ]
                    },
                    {
                      "name": "TooBig",
                      "index": 2,
                      "docs": [
                        "The supplied validation function has compiled into a blob larger than Polkadot is",
                        "willing to run."
                      ]
                    },
                    {
                      "name": "ValidationDataNotAvailable",
                      "index": 3,
                      "docs": [
                        "The inherent which supplies the validation data did not run this block."
                      ]
                    },
                    {
                      "name": "HostConfigurationNotAvailable",
                      "index": 4,
                      "docs": [
                        "The inherent which supplies the host configuration did not run this block."
                      ]
                    },
                    {
                      "name": "NotScheduled",
                      "index": 5,
                      "docs": [
                        "No validation function upgrade is currently scheduled."
                      ]
                    },
                    {
                      "name": "NothingAuthorized",
                      "index": 6,
                      "docs": [
                        "No code upgrade has been authorized."
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "index": 7,
                      "docs": [
                        "The given code upgrade has not been authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 255,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 10,
                          "typeName": "T::Moment"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 256,
            "type": {
              "path": [
                "staging_parachain_info",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 257,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 258
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 260,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 258,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 82,
                      "typeName": "LockIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reasons",
                      "type": 259,
                      "typeName": "Reasons"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 259,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "Reasons"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "index": 0
                    },
                    {
                      "name": "Misc",
                      "index": 1
                    },
                    {
                      "name": "All",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 260,
            "type": {
              "def": {
                "sequence": {
                  "type": 258
                }
              }
            }
          },
          {
            "id": 261,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 262
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 263,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 262,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 82
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 82,
                      "typeName": "ReserveIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 263,
            "type": {
              "def": {
                "sequence": {
                  "type": 262
                }
              }
            }
          },
          {
            "id": 264,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 265
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 269,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 265,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 266
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 266,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 266,
            "type": {
              "path": [
                "amplitude_runtime",
                "RuntimeHoldReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "type": 267,
                          "typeName": "pallet_preimage::HoldReason"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Contracts",
                      "fields": [
                        {
                          "type": 268,
                          "typeName": "pallet_contracts::HoldReason"
                        }
                      ],
                      "index": 56
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 267,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "HoldReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Preimage",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 268,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "HoldReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CodeUploadDepositReserve",
                      "index": 0
                    },
                    {
                      "name": "StorageDepositReserve",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 269,
            "type": {
              "def": {
                "sequence": {
                  "type": 265
                }
              }
            }
          },
          {
            "id": 270,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 271
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 272,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 271,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 43
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 43,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 272,
            "type": {
              "def": {
                "sequence": {
                  "type": 271
                }
              }
            }
          },
          {
            "id": 273,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer_allow_death`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "keep_alive",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_all`]."
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_unreserve`]."
                      ]
                    },
                    {
                      "name": "upgrade_accounts",
                      "fields": [
                        {
                          "name": "who",
                          "type": 276,
                          "typeName": "Vec<T::AccountId>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::upgrade_accounts`]."
                      ]
                    },
                    {
                      "name": "force_set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "new_free",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::force_set_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 274,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AccountIndex",
                  "type": 43
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 275,
                          "typeName": "AccountIndex"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "type": 69,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 275,
            "type": {
              "def": {
                "compact": {
                  "type": 43
                }
              }
            }
          },
          {
            "id": 276,
            "type": {
              "def": {
                "sequence": {
                  "type": 0
                }
              }
            }
          },
          {
            "id": 277,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value."
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "index": 2,
                      "docs": [
                        "Balance too low to send value."
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit."
                      ]
                    },
                    {
                      "name": "Expendability",
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account."
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account."
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed `MaxReserves`."
                      ]
                    },
                    {
                      "name": "TooManyHolds",
                      "index": 8,
                      "docs": [
                        "Number of holds exceed `MaxHolds`."
                      ]
                    },
                    {
                      "name": "TooManyFreezes",
                      "index": 9,
                      "docs": [
                        "Number of freezes exceed `MaxFreezes`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 278,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "index": 0
                    },
                    {
                      "name": "V2",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 279,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 280
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 432,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 280,
            "type": {
              "def": {
                "tuple": [
                  4,
                  281,
                  0
                ]
              }
            }
          },
          {
            "id": 281,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "preimages",
                "Bounded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 282
                },
                {
                  "name": "H",
                  "type": 430
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H::Output"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Inline",
                      "fields": [
                        {
                          "type": 431,
                          "typeName": "BoundedInline"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Lookup",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H::Output"
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 282,
            "type": {
              "path": [
                "amplitude_runtime",
                "RuntimeCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 199,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "type": 245,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "type": 255,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "ParachainInfo",
                      "fields": [
                        {
                          "type": 256,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainInfo, Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 273,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Democracy",
                      "fields": [
                        {
                          "type": 283,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "type": 285,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "type": 287,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "type": 288,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "type": 290,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 291,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "type": 293,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Bounties",
                      "fields": [
                        {
                          "type": 294,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Bounties, Runtime>"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "ChildBounties",
                      "fields": [
                        {
                          "type": 295,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ChildBounties, Runtime>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "type": 296,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 298,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "ParachainStaking",
                      "fields": [
                        {
                          "type": 302,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainStaking, Runtime>"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "type": 303,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>"
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 304,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "type": 325,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CumulusXcm, Runtime>"
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "type": 326,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>"
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "type": 327,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>"
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 329,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>"
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Currencies",
                      "fields": [
                        {
                          "type": 338,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Currencies, Runtime>"
                        }
                      ],
                      "index": 52
                    },
                    {
                      "name": "Tokens",
                      "fields": [
                        {
                          "type": 339,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tokens, Runtime>"
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "XTokens",
                      "fields": [
                        {
                          "type": 340,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XTokens, Runtime>"
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "type": 342,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>"
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Contracts",
                      "fields": [
                        {
                          "type": 386,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Contracts, Runtime>"
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "DiaOracleModule",
                      "fields": [
                        {
                          "type": 389,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DiaOracleModule, Runtime>"
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "ZenlinkProtocol",
                      "fields": [
                        {
                          "type": 390,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ZenlinkProtocol, Runtime>"
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Fee",
                      "fields": [
                        {
                          "type": 392,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Fee, Runtime>"
                        }
                      ],
                      "index": 61
                    },
                    {
                      "name": "Issue",
                      "fields": [
                        {
                          "type": 393,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Issue, Runtime>"
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Nomination",
                      "fields": [
                        {
                          "type": 394,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Nomination, Runtime>"
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Oracle",
                      "fields": [
                        {
                          "type": 395,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Oracle, Runtime>"
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Redeem",
                      "fields": [
                        {
                          "type": 396,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Redeem, Runtime>"
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Replace",
                      "fields": [
                        {
                          "type": 397,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Replace, Runtime>"
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Security",
                      "fields": [
                        {
                          "type": 398,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Security, Runtime>"
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "StellarRelay",
                      "fields": [
                        {
                          "type": 399,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<StellarRelay, Runtime>"
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "VaultRegistry",
                      "fields": [
                        {
                          "type": 405,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VaultRegistry, Runtime>"
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "PooledVaultRewards",
                      "fields": [
                        {
                          "type": 407,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PooledVaultRewards, Runtime>"
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "VaultStaking",
                      "fields": [
                        {
                          "type": 408,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VaultStaking, Runtime>"
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "ClientsInfo",
                      "fields": [
                        {
                          "type": 409,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ClientsInfo, Runtime>"
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "RewardDistribution",
                      "fields": [
                        {
                          "type": 410,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RewardDistribution, Runtime>"
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "TokenAllowance",
                      "fields": [
                        {
                          "type": 411,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TokenAllowance, Runtime>"
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "TreasuryBuyoutExtension",
                      "fields": [
                        {
                          "type": 412,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TreasuryBuyoutExtension, Runtime>"
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Farming",
                      "fields": [
                        {
                          "type": 414,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Farming, Runtime>"
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "AssetRegistry",
                      "fields": [
                        {
                          "type": 423,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetRegistry, Runtime>"
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "VestingManager",
                      "fields": [
                        {
                          "type": 428,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VestingManager, Runtime>"
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "MessageQueue",
                      "fields": [
                        {
                          "type": 429,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>"
                        }
                      ],
                      "index": 222
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 283,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 281,
                          "typeName": "BoundedCallOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "second",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 66,
                          "typeName": "PropIndex"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::second`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 66,
                          "typeName": "ReferendumIndex"
                        },
                        {
                          "name": "vote",
                          "type": 38,
                          "typeName": "AccountVote<BalanceOf<T>>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "emergency_cancel",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::emergency_cancel`]."
                      ]
                    },
                    {
                      "name": "external_propose",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 281,
                          "typeName": "BoundedCallOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::external_propose`]."
                      ]
                    },
                    {
                      "name": "external_propose_majority",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 281,
                          "typeName": "BoundedCallOf<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::external_propose_majority`]."
                      ]
                    },
                    {
                      "name": "external_propose_default",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 281,
                          "typeName": "BoundedCallOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::external_propose_default`]."
                      ]
                    },
                    {
                      "name": "fast_track",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "voting_period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::fast_track`]."
                      ]
                    },
                    {
                      "name": "veto_external",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::veto_external`]."
                      ]
                    },
                    {
                      "name": "cancel_referendum",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 66,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::cancel_referendum`]."
                      ]
                    },
                    {
                      "name": "delegate",
                      "fields": [
                        {
                          "name": "to",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "conviction",
                          "type": 284,
                          "typeName": "Conviction"
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::delegate`]."
                      ]
                    },
                    {
                      "name": "undelegate",
                      "index": 11,
                      "docs": [
                        "See [`Pallet::undelegate`]."
                      ]
                    },
                    {
                      "name": "clear_public_proposals",
                      "index": 12,
                      "docs": [
                        "See [`Pallet::clear_public_proposals`]."
                      ]
                    },
                    {
                      "name": "unlock",
                      "fields": [
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::unlock`]."
                      ]
                    },
                    {
                      "name": "remove_vote",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::remove_vote`]."
                      ]
                    },
                    {
                      "name": "remove_other_vote",
                      "fields": [
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::remove_other_vote`]."
                      ]
                    },
                    {
                      "name": "blacklist",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "maybe_ref_index",
                          "type": 225,
                          "typeName": "Option<ReferendumIndex>"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::blacklist`]."
                      ]
                    },
                    {
                      "name": "cancel_proposal",
                      "fields": [
                        {
                          "name": "prop_index",
                          "type": 66,
                          "typeName": "PropIndex"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::cancel_proposal`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 40,
                          "typeName": "MetadataOwner"
                        },
                        {
                          "name": "maybe_hash",
                          "type": 221,
                          "typeName": "Option<T::Hash>"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 284,
            "type": {
              "path": [
                "pallet_democracy",
                "conviction",
                "Conviction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Locked1x",
                      "index": 1
                    },
                    {
                      "name": "Locked2x",
                      "index": 2
                    },
                    {
                      "name": "Locked3x",
                      "index": 3
                    },
                    {
                      "name": "Locked4x",
                      "index": 4
                    },
                    {
                      "name": "Locked5x",
                      "index": 5
                    },
                    {
                      "name": "Locked6x",
                      "index": 6
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 285,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_members",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 276,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "prime",
                          "type": 286,
                          "typeName": "Option<T::AccountId>"
                        },
                        {
                          "name": "old_count",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_members`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 282,
                          "typeName": "Box<<T as Config<I>>::Proposal>"
                        },
                        {
                          "name": "length_bound",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 66,
                          "typeName": "MemberCount"
                        },
                        {
                          "name": "proposal",
                          "type": 282,
                          "typeName": "Box<<T as Config<I>>::Proposal>"
                        },
                        {
                          "name": "length_bound",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "approve",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "disapprove_proposal",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::disapprove_proposal`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "length_bound",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 286,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 0
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 287,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_members",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 276,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "prime",
                          "type": 286,
                          "typeName": "Option<T::AccountId>"
                        },
                        {
                          "name": "old_count",
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_members`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 282,
                          "typeName": "Box<<T as Config<I>>::Proposal>"
                        },
                        {
                          "name": "length_bound",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 66,
                          "typeName": "MemberCount"
                        },
                        {
                          "name": "proposal",
                          "type": 282,
                          "typeName": "Box<<T as Config<I>>::Proposal>"
                        },
                        {
                          "name": "length_bound",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "approve",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "disapprove_proposal",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::disapprove_proposal`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "length_bound",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 288,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "schedule",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 289,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::schedule`]."
                      ]
                    },
                    {
                      "name": "cancel",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::cancel`]."
                      ]
                    },
                    {
                      "name": "schedule_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName"
                        },
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 289,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::schedule_named`]."
                      ]
                    },
                    {
                      "name": "cancel_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_named`]."
                      ]
                    },
                    {
                      "name": "schedule_after",
                      "fields": [
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 289,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::schedule_after`]."
                      ]
                    },
                    {
                      "name": "schedule_named_after",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName"
                        },
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 289,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::schedule_named_after`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 289,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 46
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 46
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 290,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "note_preimage",
                      "fields": [
                        {
                          "name": "bytes",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::note_preimage`]."
                      ]
                    },
                    {
                      "name": "unnote_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unnote_preimage`]."
                      ]
                    },
                    {
                      "name": "request_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::request_preimage`]."
                      ]
                    },
                    {
                      "name": "unrequest_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unrequest_preimage`]."
                      ]
                    },
                    {
                      "name": "ensure_updated",
                      "fields": [
                        {
                          "name": "hashes",
                          "type": 194,
                          "typeName": "Vec<T::Hash>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::ensure_updated`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 291,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_multi_threshold_1",
                      "fields": [
                        {
                          "name": "other_signatories",
                          "type": 276,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_multi_threshold_1`]."
                      ]
                    },
                    {
                      "name": "as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 55,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 276,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 292,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_multi`]."
                      ]
                    },
                    {
                      "name": "approve_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 55,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 276,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 292,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_as_multi`]."
                      ]
                    },
                    {
                      "name": "cancel_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 55,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 276,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "timepoint",
                          "type": 49,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_as_multi`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 292,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 49
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 49
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 293,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_spend",
                      "fields": [
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_spend`]."
                      ]
                    },
                    {
                      "name": "reject_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 66,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::reject_proposal`]."
                      ]
                    },
                    {
                      "name": "approve_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 66,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_proposal`]."
                      ]
                    },
                    {
                      "name": "spend_local",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::spend_local`]."
                      ]
                    },
                    {
                      "name": "remove_approval",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 66,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_approval`]."
                      ]
                    },
                    {
                      "name": "spend",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 43,
                          "typeName": "Box<T::AssetKind>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetBalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "Box<BeneficiaryLookupOf<T, I>>"
                        },
                        {
                          "name": "valid_from",
                          "type": 225,
                          "typeName": "Option<BlockNumberFor<T>>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::spend`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "check_status",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::check_status`]."
                      ]
                    },
                    {
                      "name": "void_spend",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::void_spend`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 294,
            "type": {
              "path": [
                "pallet_bounties",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_bounty",
                      "fields": [
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "description",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_bounty`]."
                      ]
                    },
                    {
                      "name": "approve_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::approve_bounty`]."
                      ]
                    },
                    {
                      "name": "propose_curator",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "curator",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose_curator`]."
                      ]
                    },
                    {
                      "name": "unassign_curator",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unassign_curator`]."
                      ]
                    },
                    {
                      "name": "accept_curator",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::accept_curator`]."
                      ]
                    },
                    {
                      "name": "award_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "beneficiary",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::award_bounty`]."
                      ]
                    },
                    {
                      "name": "claim_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::claim_bounty`]."
                      ]
                    },
                    {
                      "name": "close_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::close_bounty`]."
                      ]
                    },
                    {
                      "name": "extend_bounty_expiry",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::extend_bounty_expiry`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 295,
            "type": {
              "path": [
                "pallet_child_bounties",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "description",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_child_bounty`]."
                      ]
                    },
                    {
                      "name": "propose_curator",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "curator",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::propose_curator`]."
                      ]
                    },
                    {
                      "name": "accept_curator",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::accept_curator`]."
                      ]
                    },
                    {
                      "name": "unassign_curator",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unassign_curator`]."
                      ]
                    },
                    {
                      "name": "award_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "beneficiary",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::award_child_bounty`]."
                      ]
                    },
                    {
                      "name": "claim_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::claim_child_bounty`]."
                      ]
                    },
                    {
                      "name": "close_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 66,
                          "typeName": "BountyIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close_child_bounty`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 296,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "proxy",
                      "fields": [
                        {
                          "name": "real",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 297,
                          "typeName": "Option<T::ProxyType>"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::proxy`]."
                      ]
                    },
                    {
                      "name": "add_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "proxy_type",
                          "type": 54,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::add_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "proxy_type",
                          "type": 54,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxies",
                      "index": 3,
                      "docs": [
                        "See [`Pallet::remove_proxies`]."
                      ]
                    },
                    {
                      "name": "create_pure",
                      "fields": [
                        {
                          "name": "proxy_type",
                          "type": 54,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "index",
                          "type": 55,
                          "typeName": "u16"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::create_pure`]."
                      ]
                    },
                    {
                      "name": "kill_pure",
                      "fields": [
                        {
                          "name": "spawner",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "proxy_type",
                          "type": 54,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "index",
                          "type": 55,
                          "typeName": "u16"
                        },
                        {
                          "name": "height",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "ext_index",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_pure`]."
                      ]
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "real",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::announce`]."
                      ]
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "real",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_announcement`]."
                      ]
                    },
                    {
                      "name": "reject_announcement",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::reject_announcement`]."
                      ]
                    },
                    {
                      "name": "proxy_announced",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "real",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 297,
                          "typeName": "Option<T::ProxyType>"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::proxy_announced`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 297,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 54
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 54
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 298,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 299,
                          "typeName": "T::Keys"
                        },
                        {
                          "name": "proof",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "index": 1,
                      "docs": [
                        "See [`Pallet::purge_keys`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 299,
            "type": {
              "path": [
                "amplitude_runtime",
                "SessionKeys"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "aura",
                      "type": 300,
                      "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 300,
            "type": {
              "path": [
                "sp_consensus_aura",
                "sr25519",
                "app_sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 301,
                      "typeName": "sr25519::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 301,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 302,
            "type": {
              "path": [
                "parachain_staking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "force_new_round",
                      "index": 0,
                      "docs": [
                        "See [`Pallet::force_new_round`]."
                      ]
                    },
                    {
                      "name": "set_inflation",
                      "fields": [
                        {
                          "name": "collator_max_rate_percentage",
                          "type": 58,
                          "typeName": "Perquintill"
                        },
                        {
                          "name": "collator_annual_reward_rate_percentage",
                          "type": 58,
                          "typeName": "Perquintill"
                        },
                        {
                          "name": "delegator_max_rate_percentage",
                          "type": 58,
                          "typeName": "Perquintill"
                        },
                        {
                          "name": "delegator_annual_reward_rate_percentage",
                          "type": 58,
                          "typeName": "Perquintill"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_inflation`]."
                      ]
                    },
                    {
                      "name": "set_max_selected_candidates",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_max_selected_candidates`]."
                      ]
                    },
                    {
                      "name": "set_blocks_per_round",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_blocks_per_round`]."
                      ]
                    },
                    {
                      "name": "set_max_candidate_stake",
                      "fields": [
                        {
                          "name": "new",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_max_candidate_stake`]."
                      ]
                    },
                    {
                      "name": "force_remove_candidate",
                      "fields": [
                        {
                          "name": "collator",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_remove_candidate`]."
                      ]
                    },
                    {
                      "name": "join_candidates",
                      "fields": [
                        {
                          "name": "stake",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::join_candidates`]."
                      ]
                    },
                    {
                      "name": "init_leave_candidates",
                      "index": 7,
                      "docs": [
                        "See [`Pallet::init_leave_candidates`]."
                      ]
                    },
                    {
                      "name": "execute_leave_candidates",
                      "fields": [
                        {
                          "name": "collator",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::execute_leave_candidates`]."
                      ]
                    },
                    {
                      "name": "cancel_leave_candidates",
                      "index": 9,
                      "docs": [
                        "See [`Pallet::cancel_leave_candidates`]."
                      ]
                    },
                    {
                      "name": "candidate_stake_more",
                      "fields": [
                        {
                          "name": "more",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::candidate_stake_more`]."
                      ]
                    },
                    {
                      "name": "candidate_stake_less",
                      "fields": [
                        {
                          "name": "less",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::candidate_stake_less`]."
                      ]
                    },
                    {
                      "name": "join_delegators",
                      "fields": [
                        {
                          "name": "collator",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::join_delegators`]."
                      ]
                    },
                    {
                      "name": "leave_delegators",
                      "index": 13,
                      "docs": [
                        "See [`Pallet::leave_delegators`]."
                      ]
                    },
                    {
                      "name": "delegator_stake_more",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "more",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::delegator_stake_more`]."
                      ]
                    },
                    {
                      "name": "delegator_stake_less",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "less",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::delegator_stake_less`]."
                      ]
                    },
                    {
                      "name": "unlock_unstaked",
                      "fields": [
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::unlock_unstaked`]."
                      ]
                    },
                    {
                      "name": "claim_rewards",
                      "index": 17,
                      "docs": [
                        "See [`Pallet::claim_rewards`]."
                      ]
                    },
                    {
                      "name": "increment_collator_rewards",
                      "index": 18,
                      "docs": [
                        "See [`Pallet::increment_collator_rewards`]."
                      ]
                    },
                    {
                      "name": "increment_delegator_rewards",
                      "index": 19,
                      "docs": [
                        "See [`Pallet::increment_delegator_rewards`]."
                      ]
                    },
                    {
                      "name": "execute_scheduled_reward_change",
                      "index": 20,
                      "docs": [
                        "See [`Pallet::execute_scheduled_reward_change`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 303,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "suspend_xcm_execution",
                      "index": 1,
                      "docs": [
                        "See [`Pallet::suspend_xcm_execution`]."
                      ]
                    },
                    {
                      "name": "resume_xcm_execution",
                      "index": 2,
                      "docs": [
                        "See [`Pallet::resume_xcm_execution`]."
                      ]
                    },
                    {
                      "name": "update_suspend_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::update_suspend_threshold`]."
                      ]
                    },
                    {
                      "name": "update_drop_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::update_drop_threshold`]."
                      ]
                    },
                    {
                      "name": "update_resume_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::update_resume_threshold`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 304,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "send",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "message",
                          "type": 305,
                          "typeName": "Box<VersionedXcm<()>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::send`]."
                      ]
                    },
                    {
                      "name": "teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::teleport_assets`]."
                      ]
                    },
                    {
                      "name": "reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "message",
                          "type": 317,
                          "typeName": "Box<VersionedXcm<<T as Config>::RuntimeCall>>"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "force_xcm_version",
                      "fields": [
                        {
                          "name": "location",
                          "type": 63,
                          "typeName": "Box<MultiLocation>"
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_default_xcm_version",
                      "fields": [
                        {
                          "name": "maybe_xcm_version",
                          "type": 225,
                          "typeName": "Option<XcmVersion>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_default_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_subscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::force_subscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "force_unsubscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::force_unsubscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "limited_reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::limited_reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "limited_teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::limited_teleport_assets`]."
                      ]
                    },
                    {
                      "name": "force_suspension",
                      "fields": [
                        {
                          "name": "suspended",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::force_suspension`]."
                      ]
                    },
                    {
                      "name": "transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::transfer_assets`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 305,
            "type": {
              "path": [
                "xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 306,
                          "typeName": "v2::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 73,
                          "typeName": "v3::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 306,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 307,
                      "typeName": "Vec<Instruction<RuntimeCall>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 307,
            "type": {
              "def": {
                "sequence": {
                  "type": 308
                }
              }
            }
          },
          {
            "id": 308,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 309,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 102,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 106,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 102,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 94,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64"
                        },
                        {
                          "name": "call",
                          "type": 95,
                          "typeName": "DoubleEncoded<RuntimeCall>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 107,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "beneficiary",
                          "type": 106,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "receive",
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 104,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 316,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 306,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 306,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 102,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 106,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 309,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Response"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "index": 0
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "type": 310,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "super::Version"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 310,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 311
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 311
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 311,
            "type": {
              "def": {
                "tuple": [
                  4,
                  312
                ]
              }
            }
          },
          {
            "id": 312,
            "type": {
              "path": [
                "xcm",
                "v2",
                "traits",
                "Error"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "index": 0
                    },
                    {
                      "name": "Unimplemented",
                      "index": 1
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "index": 2
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "index": 3
                    },
                    {
                      "name": "MultiLocationFull",
                      "index": 4
                    },
                    {
                      "name": "MultiLocationNotInvertible",
                      "index": 5
                    },
                    {
                      "name": "BadOrigin",
                      "index": 6
                    },
                    {
                      "name": "InvalidLocation",
                      "index": 7
                    },
                    {
                      "name": "AssetNotFound",
                      "index": 8
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "index": 9
                    },
                    {
                      "name": "NotWithdrawable",
                      "index": 10
                    },
                    {
                      "name": "LocationCannotHold",
                      "index": 11
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "index": 12
                    },
                    {
                      "name": "DestinationUnsupported",
                      "index": 13
                    },
                    {
                      "name": "Transport",
                      "index": 14
                    },
                    {
                      "name": "Unroutable",
                      "index": 15
                    },
                    {
                      "name": "UnknownClaim",
                      "index": 16
                    },
                    {
                      "name": "FailedToDecode",
                      "index": 17
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "index": 18
                    },
                    {
                      "name": "NotHoldingFees",
                      "index": 19
                    },
                    {
                      "name": "TooExpensive",
                      "index": 20
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "index": 22
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Barrier",
                      "index": 24
                    },
                    {
                      "name": "WeightNotComputable",
                      "index": 25
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 313,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "MultiAssetFilter"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "type": 314,
                          "typeName": "WildMultiAsset"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 314,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "WildMultiAsset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "index": 0
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 105,
                          "typeName": "AssetId"
                        },
                        {
                          "name": "fun",
                          "type": 315,
                          "typeName": "WildFungibility"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 315,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "WildFungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 316,
            "type": {
              "path": [
                "xcm",
                "v2",
                "WeightLimit"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "index": 0
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 317,
            "type": {
              "path": [
                "xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 318,
                          "typeName": "v2::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 322,
                          "typeName": "v3::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 318,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 319,
                      "typeName": "Vec<Instruction<RuntimeCall>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 319,
            "type": {
              "def": {
                "sequence": {
                  "type": 320
                }
              }
            }
          },
          {
            "id": 320,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 309,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 102,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 106,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 102,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 94,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64"
                        },
                        {
                          "name": "call",
                          "type": 321,
                          "typeName": "DoubleEncoded<RuntimeCall>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 107,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "beneficiary",
                          "type": 106,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "receive",
                          "type": 102,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 306,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 106,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 313,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 104,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 316,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 318,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 318,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 102,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 106,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 321,
            "type": {
              "path": [
                "xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 322,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 323,
                      "typeName": "Vec<Instruction<Call>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 323,
            "type": {
              "def": {
                "sequence": {
                  "type": 324
                }
              }
            }
          },
          {
            "id": 324,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 84,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "querier",
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 94,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "call",
                          "type": 321,
                          "typeName": "DoubleEncoded<Call>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 64,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "beneficiary",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "want",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "maximal",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 63,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "MultiAssetFilter"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 322,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 322,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 76,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "type": 85,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "type": 91,
                          "typeName": "MaybeErrorCode"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "response_info",
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "crate_major",
                          "type": 66,
                          "typeName": "u32"
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 66,
                          "typeName": "u32"
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "type": 96,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "ClearTransactStatus",
                      "index": 36
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 68,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "destination",
                          "type": 64,
                          "typeName": "InteriorMultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 73,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "unlocker",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "target",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "owner",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 78,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "locker",
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "ClearTopic",
                      "index": 45
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        },
                        {
                          "name": "check_origin",
                          "type": 93,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 47
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 325,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 326,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 327,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vest",
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vest`]."
                      ]
                    },
                    {
                      "name": "vest_other",
                      "fields": [
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::vest_other`]."
                      ]
                    },
                    {
                      "name": "vested_transfer",
                      "fields": [
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "schedule",
                          "type": 328,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vested_transfer`]."
                      ]
                    },
                    {
                      "name": "force_vested_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "schedule",
                          "type": 328,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_vested_transfer`]."
                      ]
                    },
                    {
                      "name": "merge_schedules",
                      "fields": [
                        {
                          "name": "schedule1_index",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "schedule2_index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::merge_schedules`]."
                      ]
                    },
                    {
                      "name": "force_remove_vesting_schedule",
                      "fields": [
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "schedule_index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_remove_vesting_schedule`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 328,
            "type": {
              "path": [
                "pallet_vesting",
                "vesting_info",
                "VestingInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "locked",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "per_block",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "starting_block",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 329,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 330,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::batch`]."
                      ]
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 55,
                          "typeName": "u16"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_derivative`]."
                      ]
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 330,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::batch_all`]."
                      ]
                    },
                    {
                      "name": "dispatch_as",
                      "fields": [
                        {
                          "name": "as_origin",
                          "type": 331,
                          "typeName": "Box<T::PalletsOrigin>"
                        },
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_as`]."
                      ]
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 330,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_batch`]."
                      ]
                    },
                    {
                      "name": "with_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 282,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::with_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 330,
            "type": {
              "def": {
                "sequence": {
                  "type": 282
                }
              }
            }
          },
          {
            "id": 331,
            "type": {
              "path": [
                "amplitude_runtime",
                "OriginCaller"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "system",
                      "fields": [
                        {
                          "type": 332,
                          "typeName": "frame_system::Origin<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "type": 333,
                          "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "type": 334,
                          "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 335,
                          "typeName": "pallet_xcm::Origin"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "type": 336,
                          "typeName": "cumulus_pallet_xcm::Origin"
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "Void",
                      "fields": [
                        {
                          "type": 337,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 332,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "index": 0
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "None",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 333,
            "type": {
              "path": [
                "pallet_collective",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "MemberCount"
                        },
                        {
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Member",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "_Phantom",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 334,
            "type": {
              "path": [
                "pallet_collective",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "MemberCount"
                        },
                        {
                          "type": 4,
                          "typeName": "MemberCount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Member",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "_Phantom",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 335,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Origin"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Xcm",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Response",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 336,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Origin"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Relay",
                      "index": 0
                    },
                    {
                      "name": "SiblingParachain",
                      "fields": [
                        {
                          "type": 139,
                          "typeName": "ParaId"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 337,
            "type": {
              "path": [
                "sp_core",
                "Void"
              ],
              "def": {
                "variant": {}
              }
            }
          },
          {
            "id": 338,
            "type": {
              "path": [
                "orml_currencies",
                "module",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "CurrencyIdOf<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_native_currency",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::transfer_native_currency`]."
                      ]
                    },
                    {
                      "name": "update_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "CurrencyIdOf<T>"
                        },
                        {
                          "name": "amount",
                          "type": 165,
                          "typeName": "AmountOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::update_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 339,
            "type": {
              "path": [
                "orml_tokens",
                "module",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "keep_alive",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::transfer_all`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "new_free",
                          "type": 70,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "new_reserved",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 340,
            "type": {
              "path": [
                "orml_xtokens",
                "module",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_multiasset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 341,
                          "typeName": "Box<VersionedMultiAsset>"
                        },
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::transfer_multiasset`]."
                      ]
                    },
                    {
                      "name": "transfer_with_fee",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transfer_with_fee`]."
                      ]
                    },
                    {
                      "name": "transfer_multiasset_with_fee",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 341,
                          "typeName": "Box<VersionedMultiAsset>"
                        },
                        {
                          "name": "fee",
                          "type": 341,
                          "typeName": "Box<VersionedMultiAsset>"
                        },
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_multiasset_with_fee`]."
                      ]
                    },
                    {
                      "name": "transfer_multicurrencies",
                      "fields": [
                        {
                          "name": "currencies",
                          "type": 175,
                          "typeName": "Vec<(T::CurrencyId, T::Balance)>"
                        },
                        {
                          "name": "fee_item",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_multicurrencies`]."
                      ]
                    },
                    {
                      "name": "transfer_multiassets",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 101,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_item",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "dest",
                          "type": 115,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 100,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::transfer_multiassets`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 341,
            "type": {
              "path": [
                "xcm",
                "VersionedMultiAsset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "v2::MultiAsset"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 78,
                          "typeName": "v3::MultiAsset"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 342,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_registrar",
                      "fields": [
                        {
                          "name": "account",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_registrar`]."
                      ]
                    },
                    {
                      "name": "set_identity",
                      "fields": [
                        {
                          "name": "info",
                          "type": 343,
                          "typeName": "Box<T::IdentityInformation>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_identity`]."
                      ]
                    },
                    {
                      "name": "set_subs",
                      "fields": [
                        {
                          "name": "subs",
                          "type": 376,
                          "typeName": "Vec<(T::AccountId, Data)>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_subs`]."
                      ]
                    },
                    {
                      "name": "clear_identity",
                      "index": 3,
                      "docs": [
                        "See [`Pallet::clear_identity`]."
                      ]
                    },
                    {
                      "name": "request_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 66,
                          "typeName": "RegistrarIndex"
                        },
                        {
                          "name": "max_fee",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::request_judgement`]."
                      ]
                    },
                    {
                      "name": "cancel_request",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 4,
                          "typeName": "RegistrarIndex"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::cancel_request`]."
                      ]
                    },
                    {
                      "name": "set_fee",
                      "fields": [
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "RegistrarIndex"
                        },
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_fee`]."
                      ]
                    },
                    {
                      "name": "set_account_id",
                      "fields": [
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "RegistrarIndex"
                        },
                        {
                          "name": "new",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_account_id`]."
                      ]
                    },
                    {
                      "name": "set_fields",
                      "fields": [
                        {
                          "name": "index",
                          "type": 66,
                          "typeName": "RegistrarIndex"
                        },
                        {
                          "name": "fields",
                          "type": 11,
                          "typeName": "<T::IdentityInformation as IdentityInformationProvider>::\nFieldsIdentifier"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_fields`]."
                      ]
                    },
                    {
                      "name": "provide_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 66,
                          "typeName": "RegistrarIndex"
                        },
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "judgement",
                          "type": 378,
                          "typeName": "Judgement<BalanceOf<T>>"
                        },
                        {
                          "name": "identity",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::provide_judgement`]."
                      ]
                    },
                    {
                      "name": "kill_identity",
                      "fields": [
                        {
                          "name": "target",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::kill_identity`]."
                      ]
                    },
                    {
                      "name": "add_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "data",
                          "type": 346,
                          "typeName": "Data"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::add_sub`]."
                      ]
                    },
                    {
                      "name": "rename_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "data",
                          "type": 346,
                          "typeName": "Data"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::rename_sub`]."
                      ]
                    },
                    {
                      "name": "remove_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::remove_sub`]."
                      ]
                    },
                    {
                      "name": "quit_sub",
                      "index": 14,
                      "docs": [
                        "See [`Pallet::quit_sub`]."
                      ]
                    },
                    {
                      "name": "add_username_authority",
                      "fields": [
                        {
                          "name": "authority",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "suffix",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "allocation",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::add_username_authority`]."
                      ]
                    },
                    {
                      "name": "remove_username_authority",
                      "fields": [
                        {
                          "name": "authority",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::remove_username_authority`]."
                      ]
                    },
                    {
                      "name": "set_username_for",
                      "fields": [
                        {
                          "name": "who",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "username",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "signature",
                          "type": 379,
                          "typeName": "Option<T::OffchainSignature>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::set_username_for`]."
                      ]
                    },
                    {
                      "name": "accept_username",
                      "fields": [
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::accept_username`]."
                      ]
                    },
                    {
                      "name": "remove_expired_approval",
                      "fields": [
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::remove_expired_approval`]."
                      ]
                    },
                    {
                      "name": "set_primary_username",
                      "fields": [
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::set_primary_username`]."
                      ]
                    },
                    {
                      "name": "remove_dangling_username",
                      "fields": [
                        {
                          "name": "username",
                          "type": 126,
                          "typeName": "Username<T>"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::remove_dangling_username`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Identity pallet declaration."
              ]
            }
          },
          {
            "id": 343,
            "type": {
              "path": [
                "pallet_identity",
                "legacy",
                "IdentityInfo"
              ],
              "params": [
                {
                  "name": "FieldLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "additional",
                      "type": 344,
                      "typeName": "BoundedVec<(Data, Data), FieldLimit>"
                    },
                    {
                      "name": "display",
                      "type": 346,
                      "typeName": "Data"
                    },
                    {
                      "name": "legal",
                      "type": 346,
                      "typeName": "Data"
                    },
                    {
                      "name": "web",
                      "type": 346,
                      "typeName": "Data"
                    },
                    {
                      "name": "riot",
                      "type": 346,
                      "typeName": "Data"
                    },
                    {
                      "name": "email",
                      "type": 346,
                      "typeName": "Data"
                    },
                    {
                      "name": "pgp_fingerprint",
                      "type": 375,
                      "typeName": "Option<[u8; 20]>"
                    },
                    {
                      "name": "image",
                      "type": 346,
                      "typeName": "Data"
                    },
                    {
                      "name": "twitter",
                      "type": 346,
                      "typeName": "Data"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 344,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 345
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 374,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 345,
            "type": {
              "def": {
                "tuple": [
                  346,
                  346
                ]
              }
            }
          },
          {
            "id": 346,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Data"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Raw0",
                      "fields": [
                        {
                          "type": 347
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Raw1",
                      "fields": [
                        {
                          "type": 348
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Raw2",
                      "fields": [
                        {
                          "type": 349
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Raw3",
                      "fields": [
                        {
                          "type": 350
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Raw4",
                      "fields": [
                        {
                          "type": 17
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Raw5",
                      "fields": [
                        {
                          "type": 351
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Raw6",
                      "fields": [
                        {
                          "type": 352
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Raw7",
                      "fields": [
                        {
                          "type": 353
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Raw8",
                      "fields": [
                        {
                          "type": 82
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Raw9",
                      "fields": [
                        {
                          "type": 354
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Raw10",
                      "fields": [
                        {
                          "type": 355
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Raw11",
                      "fields": [
                        {
                          "type": 356
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Raw12",
                      "fields": [
                        {
                          "type": 123
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Raw13",
                      "fields": [
                        {
                          "type": 357
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Raw14",
                      "fields": [
                        {
                          "type": 358
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Raw15",
                      "fields": [
                        {
                          "type": 359
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Raw16",
                      "fields": [
                        {
                          "type": 83
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Raw17",
                      "fields": [
                        {
                          "type": 360
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Raw18",
                      "fields": [
                        {
                          "type": 361
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Raw19",
                      "fields": [
                        {
                          "type": 362
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "Raw20",
                      "fields": [
                        {
                          "type": 69
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Raw21",
                      "fields": [
                        {
                          "type": 363
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Raw22",
                      "fields": [
                        {
                          "type": 364
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Raw23",
                      "fields": [
                        {
                          "type": 365
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Raw24",
                      "fields": [
                        {
                          "type": 366
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "Raw25",
                      "fields": [
                        {
                          "type": 367
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "Raw26",
                      "fields": [
                        {
                          "type": 368
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "Raw27",
                      "fields": [
                        {
                          "type": 369
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "Raw28",
                      "fields": [
                        {
                          "type": 370
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Raw29",
                      "fields": [
                        {
                          "type": 371
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "Raw30",
                      "fields": [
                        {
                          "type": 372
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "Raw31",
                      "fields": [
                        {
                          "type": 373
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "Raw32",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "BlakeTwo256",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "Sha256",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "Keccak256",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "ShaThree256",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 37
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 347,
            "type": {
              "def": {
                "array": {
                  "len": 0,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 348,
            "type": {
              "def": {
                "array": {
                  "len": 1,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 349,
            "type": {
              "def": {
                "array": {
                  "len": 2,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 350,
            "type": {
              "def": {
                "array": {
                  "len": 3,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 351,
            "type": {
              "def": {
                "array": {
                  "len": 5,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 352,
            "type": {
              "def": {
                "array": {
                  "len": 6,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 353,
            "type": {
              "def": {
                "array": {
                  "len": 7,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 354,
            "type": {
              "def": {
                "array": {
                  "len": 9,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 355,
            "type": {
              "def": {
                "array": {
                  "len": 10,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 356,
            "type": {
              "def": {
                "array": {
                  "len": 11,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 357,
            "type": {
              "def": {
                "array": {
                  "len": 13,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 358,
            "type": {
              "def": {
                "array": {
                  "len": 14,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 359,
            "type": {
              "def": {
                "array": {
                  "len": 15,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 360,
            "type": {
              "def": {
                "array": {
                  "len": 17,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 361,
            "type": {
              "def": {
                "array": {
                  "len": 18,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 362,
            "type": {
              "def": {
                "array": {
                  "len": 19,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 363,
            "type": {
              "def": {
                "array": {
                  "len": 21,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 364,
            "type": {
              "def": {
                "array": {
                  "len": 22,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 365,
            "type": {
              "def": {
                "array": {
                  "len": 23,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 366,
            "type": {
              "def": {
                "array": {
                  "len": 24,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 367,
            "type": {
              "def": {
                "array": {
                  "len": 25,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 368,
            "type": {
              "def": {
                "array": {
                  "len": 26,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 369,
            "type": {
              "def": {
                "array": {
                  "len": 27,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 370,
            "type": {
              "def": {
                "array": {
                  "len": 28,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 371,
            "type": {
              "def": {
                "array": {
                  "len": 29,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 372,
            "type": {
              "def": {
                "array": {
                  "len": 30,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 373,
            "type": {
              "def": {
                "array": {
                  "len": 31,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 374,
            "type": {
              "def": {
                "sequence": {
                  "type": 345
                }
              }
            }
          },
          {
            "id": 375,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 69
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 69
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 376,
            "type": {
              "def": {
                "sequence": {
                  "type": 377
                }
              }
            }
          },
          {
            "id": 377,
            "type": {
              "def": {
                "tuple": [
                  0,
                  346
                ]
              }
            }
          },
          {
            "id": 378,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Judgement"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unknown",
                      "index": 0
                    },
                    {
                      "name": "FeePaid",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Reasonable",
                      "index": 2
                    },
                    {
                      "name": "KnownGood",
                      "index": 3
                    },
                    {
                      "name": "OutOfDate",
                      "index": 4
                    },
                    {
                      "name": "LowQuality",
                      "index": 5
                    },
                    {
                      "name": "Erroneous",
                      "index": 6
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 379,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 380
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 380
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 380,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSignature"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "type": 381,
                          "typeName": "ed25519::Signature"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "type": 383,
                          "typeName": "sr25519::Signature"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "type": 384,
                          "typeName": "ecdsa::Signature"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 381,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 382,
                      "typeName": "[u8; 64]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 382,
            "type": {
              "def": {
                "array": {
                  "len": 64,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 383,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 382,
                      "typeName": "[u8; 64]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 384,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 385,
                      "typeName": "[u8; SIGNATURE_SERIALIZED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 385,
            "type": {
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 386,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "call_old_weight",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "OldWeight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 387,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>"
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::call_old_weight`]."
                      ]
                    },
                    {
                      "name": "instantiate_with_code_old_weight",
                      "fields": [
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "OldWeight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 387,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>"
                        },
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::instantiate_with_code_old_weight`]."
                      ]
                    },
                    {
                      "name": "instantiate_old_weight",
                      "fields": [
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "OldWeight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 387,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>"
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>"
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::instantiate_old_weight`]."
                      ]
                    },
                    {
                      "name": "upload_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 387,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>"
                        },
                        {
                          "name": "determinism",
                          "type": 388,
                          "typeName": "Determinism"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::upload_code`]."
                      ]
                    },
                    {
                      "name": "remove_code",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_code`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "call",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 387,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>"
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::call`]."
                      ]
                    },
                    {
                      "name": "instantiate_with_code",
                      "fields": [
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 387,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>"
                        },
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::instantiate_with_code`]."
                      ]
                    },
                    {
                      "name": "instantiate",
                      "fields": [
                        {
                          "name": "value",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 387,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>"
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>"
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::instantiate`]."
                      ]
                    },
                    {
                      "name": "migrate",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::migrate`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 387,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 70
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 388,
            "type": {
              "path": [
                "pallet_contracts",
                "wasm",
                "Determinism"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Enforced",
                      "index": 0
                    },
                    {
                      "name": "Relaxed",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 389,
            "type": {
              "path": [
                "dia_oracle",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_currency",
                      "fields": [
                        {
                          "name": "blockchain",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_currency`]."
                      ]
                    },
                    {
                      "name": "remove_currency",
                      "fields": [
                        {
                          "name": "blockchain",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_currency`]."
                      ]
                    },
                    {
                      "name": "authorize_account",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::authorize_account`]."
                      ]
                    },
                    {
                      "name": "deauthorize_account",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::deauthorize_account`]."
                      ]
                    },
                    {
                      "name": "set_updated_coin_infos",
                      "fields": [
                        {
                          "name": "coin_infos",
                          "type": 131,
                          "typeName": "Vec<((Vec<u8>, Vec<u8>), CoinInfo)>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_updated_coin_infos`]."
                      ]
                    },
                    {
                      "name": "set_batching_api",
                      "fields": [
                        {
                          "name": "api",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_batching_api`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 390,
            "type": {
              "path": [
                "zenlink_protocol",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_fee_receiver",
                      "fields": [
                        {
                          "name": "send_to",
                          "type": 391,
                          "typeName": "Option<<T::Lookup as StaticLookup>::Source>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_fee_receiver`]."
                      ]
                    },
                    {
                      "name": "set_fee_point",
                      "fields": [
                        {
                          "name": "fee_point",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_fee_point`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "recipient",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetBalance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "create_pair",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "fee_recipient",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::create_pair`]."
                      ]
                    },
                    {
                      "name": "add_liquidity",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "amount_0_desired",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_1_desired",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_0_min",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_1_min",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "deadline",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::add_liquidity`]."
                      ]
                    },
                    {
                      "name": "remove_liquidity",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "liquidity",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_0_min",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_1_min",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "recipient",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "deadline",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::remove_liquidity`]."
                      ]
                    },
                    {
                      "name": "swap_exact_assets_for_assets",
                      "fields": [
                        {
                          "name": "amount_in",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_out_min",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "path",
                          "type": 137,
                          "typeName": "Vec<T::AssetId>"
                        },
                        {
                          "name": "recipient",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "deadline",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::swap_exact_assets_for_assets`]."
                      ]
                    },
                    {
                      "name": "swap_assets_for_exact_assets",
                      "fields": [
                        {
                          "name": "amount_out",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_in_max",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "path",
                          "type": 137,
                          "typeName": "Vec<T::AssetId>"
                        },
                        {
                          "name": "recipient",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "deadline",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::swap_assets_for_exact_assets`]."
                      ]
                    },
                    {
                      "name": "bootstrap_create",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "target_supply_0",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "target_supply_1",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "capacity_supply_0",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "capacity_supply_1",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "end",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "rewards",
                          "type": 137,
                          "typeName": "Vec<T::AssetId>"
                        },
                        {
                          "name": "limits",
                          "type": 140,
                          "typeName": "Vec<(T::AssetId, AssetBalance)>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::bootstrap_create`]."
                      ]
                    },
                    {
                      "name": "bootstrap_contribute",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "amount_0_contribute",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "amount_1_contribute",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "deadline",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::bootstrap_contribute`]."
                      ]
                    },
                    {
                      "name": "bootstrap_claim",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        },
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "deadline",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::bootstrap_claim`]."
                      ]
                    },
                    {
                      "name": "bootstrap_end",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::bootstrap_end`]."
                      ]
                    },
                    {
                      "name": "bootstrap_update",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "target_supply_0",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "target_supply_1",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "capacity_supply_0",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "capacity_supply_1",
                          "type": 70,
                          "typeName": "AssetBalance"
                        },
                        {
                          "name": "end",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "rewards",
                          "type": 137,
                          "typeName": "Vec<T::AssetId>"
                        },
                        {
                          "name": "limits",
                          "type": 140,
                          "typeName": "Vec<(T::AssetId, AssetBalance)>"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::bootstrap_update`]."
                      ]
                    },
                    {
                      "name": "bootstrap_refund",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::bootstrap_refund`]."
                      ]
                    },
                    {
                      "name": "bootstrap_charge_reward",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "charge_rewards",
                          "type": 140,
                          "typeName": "Vec<(T::AssetId, AssetBalance)>"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::bootstrap_charge_reward`]."
                      ]
                    },
                    {
                      "name": "bootstrap_withdraw_reward",
                      "fields": [
                        {
                          "name": "asset_0",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "asset_1",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "recipient",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::bootstrap_withdraw_reward`]."
                      ]
                    },
                    {
                      "name": "set_new_fee_receiver",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 136,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "send_to",
                          "type": 274,
                          "typeName": "<T::Lookup as StaticLookup>::Source"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::set_new_fee_receiver`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 391,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 274
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 274
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 392,
            "type": {
              "path": [
                "fee",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_issue_fee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_issue_fee`]."
                      ]
                    },
                    {
                      "name": "set_issue_griefing_collateral",
                      "fields": [
                        {
                          "name": "griefing_collateral",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_issue_griefing_collateral`]."
                      ]
                    },
                    {
                      "name": "set_redeem_fee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_redeem_fee`]."
                      ]
                    },
                    {
                      "name": "set_premium_redeem_fee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_premium_redeem_fee`]."
                      ]
                    },
                    {
                      "name": "set_punishment_fee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_punishment_fee`]."
                      ]
                    },
                    {
                      "name": "set_replace_griefing_collateral",
                      "fields": [
                        {
                          "name": "griefing_collateral",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_replace_griefing_collateral`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 393,
            "type": {
              "path": [
                "issue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "request_issue",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::request_issue`]."
                      ]
                    },
                    {
                      "name": "execute_issue",
                      "fields": [
                        {
                          "name": "issue_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "transaction_envelope_xdr_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "externalized_envelopes_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "transaction_set_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute_issue`]."
                      ]
                    },
                    {
                      "name": "cancel_issue",
                      "fields": [
                        {
                          "name": "issue_id",
                          "type": 12,
                          "typeName": "H256"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::cancel_issue`]."
                      ]
                    },
                    {
                      "name": "set_issue_period",
                      "fields": [
                        {
                          "name": "period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_issue_period`]."
                      ]
                    },
                    {
                      "name": "rate_limit_update",
                      "fields": [
                        {
                          "name": "limit_volume_amount",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        },
                        {
                          "name": "limit_volume_currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "interval_length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::rate_limit_update`]."
                      ]
                    },
                    {
                      "name": "minimum_transfer_amount_update",
                      "fields": [
                        {
                          "name": "new_minimum_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::minimum_transfer_amount_update`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 394,
            "type": {
              "path": [
                "nomination",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_nomination_enabled",
                      "fields": [
                        {
                          "name": "enabled",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_nomination_enabled`]."
                      ]
                    },
                    {
                      "name": "opt_in_to_nomination",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::opt_in_to_nomination`]."
                      ]
                    },
                    {
                      "name": "opt_out_of_nomination",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::opt_out_of_nomination`]."
                      ]
                    },
                    {
                      "name": "deposit_collateral",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::deposit_collateral`]."
                      ]
                    },
                    {
                      "name": "withdraw_collateral",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "index",
                          "type": 225,
                          "typeName": "Option<T::Nonce>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::withdraw_collateral`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 395,
            "type": {
              "path": [
                "oracle",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_oracle_keys",
                      "fields": [
                        {
                          "name": "oracle_keys",
                          "type": 152,
                          "typeName": "Vec<OracleKey>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::update_oracle_keys`]."
                      ]
                    },
                    {
                      "name": "set_max_delay",
                      "fields": [
                        {
                          "name": "new_max_delay",
                          "type": 11,
                          "typeName": "T::Moment"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_max_delay`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 396,
            "type": {
              "path": [
                "redeem",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "request_redeem",
                      "fields": [
                        {
                          "name": "amount_wrapped",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "stellar_address",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        },
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::request_redeem`]."
                      ]
                    },
                    {
                      "name": "liquidation_redeem",
                      "fields": [
                        {
                          "name": "currencies",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "amount_wrapped",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::liquidation_redeem`]."
                      ]
                    },
                    {
                      "name": "execute_redeem",
                      "fields": [
                        {
                          "name": "redeem_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "transaction_envelope_xdr_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "externalized_envelopes_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "transaction_set_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::execute_redeem`]."
                      ]
                    },
                    {
                      "name": "cancel_redeem",
                      "fields": [
                        {
                          "name": "redeem_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "reimburse",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_redeem`]."
                      ]
                    },
                    {
                      "name": "set_redeem_period",
                      "fields": [
                        {
                          "name": "period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_redeem_period`]."
                      ]
                    },
                    {
                      "name": "mint_tokens_for_reimbursed_redeem",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "redeem_id",
                          "type": 12,
                          "typeName": "H256"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::mint_tokens_for_reimbursed_redeem`]."
                      ]
                    },
                    {
                      "name": "self_redeem",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "amount_wrapped",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::self_redeem`]."
                      ]
                    },
                    {
                      "name": "rate_limit_update",
                      "fields": [
                        {
                          "name": "limit_volume_amount",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        },
                        {
                          "name": "limit_volume_currency_id",
                          "type": 121,
                          "typeName": "T::CurrencyId"
                        },
                        {
                          "name": "interval_length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::rate_limit_update`]."
                      ]
                    },
                    {
                      "name": "minimum_transfer_amount_update",
                      "fields": [
                        {
                          "name": "new_minimum_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::minimum_transfer_amount_update`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 397,
            "type": {
              "path": [
                "replace",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "request_replace",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::request_replace`]."
                      ]
                    },
                    {
                      "name": "withdraw_replace",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::withdraw_replace`]."
                      ]
                    },
                    {
                      "name": "accept_replace",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "old_vault",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "collateral",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "stellar_address",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::accept_replace`]."
                      ]
                    },
                    {
                      "name": "execute_replace",
                      "fields": [
                        {
                          "name": "replace_id",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "transaction_envelope_xdr_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "externalized_envelopes_xdr_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "transaction_set_xdr_encoded",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::execute_replace`]."
                      ]
                    },
                    {
                      "name": "cancel_replace",
                      "fields": [
                        {
                          "name": "replace_id",
                          "type": 12,
                          "typeName": "H256"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::cancel_replace`]."
                      ]
                    },
                    {
                      "name": "set_replace_period",
                      "fields": [
                        {
                          "name": "period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_replace_period`]."
                      ]
                    },
                    {
                      "name": "minimum_transfer_amount_update",
                      "fields": [
                        {
                          "name": "new_minimum_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::minimum_transfer_amount_update`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 398,
            "type": {
              "path": [
                "security",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_parachain_status",
                      "fields": [
                        {
                          "name": "status_code",
                          "type": 157,
                          "typeName": "StatusCode"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_parachain_status`]."
                      ]
                    },
                    {
                      "name": "insert_parachain_error",
                      "fields": [
                        {
                          "name": "error_code",
                          "type": 159,
                          "typeName": "ErrorCode"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::insert_parachain_error`]."
                      ]
                    },
                    {
                      "name": "remove_parachain_error",
                      "fields": [
                        {
                          "name": "error_code",
                          "type": 159,
                          "typeName": "ErrorCode"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove_parachain_error`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 399,
            "type": {
              "path": [
                "stellar_relay",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_tier_1_validator_set",
                      "fields": [
                        {
                          "name": "validators",
                          "type": 400,
                          "typeName": "Vec<ValidatorOf<T>>"
                        },
                        {
                          "name": "organizations",
                          "type": 403,
                          "typeName": "Vec<OrganizationOf<T>>"
                        },
                        {
                          "name": "enactment_block_height",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_tier_1_validator_set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 400,
            "type": {
              "def": {
                "sequence": {
                  "type": 401
                }
              }
            }
          },
          {
            "id": 401,
            "type": {
              "path": [
                "stellar_relay",
                "traits",
                "Validator"
              ],
              "params": [
                {
                  "name": "OrganizationId",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 402,
                      "typeName": "BoundedVec<u8, FieldLength>"
                    },
                    {
                      "name": "public_key",
                      "type": 402,
                      "typeName": "BoundedVec<u8, FieldLength>"
                    },
                    {
                      "name": "organization_id",
                      "type": 6,
                      "typeName": "OrganizationId"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 402,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 403,
            "type": {
              "def": {
                "sequence": {
                  "type": 404
                }
              }
            }
          },
          {
            "id": 404,
            "type": {
              "path": [
                "stellar_relay",
                "traits",
                "Organization"
              ],
              "params": [
                {
                  "name": "OrganizationId",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 6,
                      "typeName": "OrganizationId"
                    },
                    {
                      "name": "name",
                      "type": 402,
                      "typeName": "BoundedVec<u8, FieldLength>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 405,
            "type": {
              "path": [
                "vault_registry",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "register_vault",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "collateral",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::register_vault`]."
                      ]
                    },
                    {
                      "name": "deposit_collateral",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::deposit_collateral`]."
                      ]
                    },
                    {
                      "name": "withdraw_collateral",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::withdraw_collateral`]."
                      ]
                    },
                    {
                      "name": "register_public_key",
                      "fields": [
                        {
                          "name": "public_key",
                          "type": 1,
                          "typeName": "StellarPublicKeyRaw"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::register_public_key`]."
                      ]
                    },
                    {
                      "name": "accept_new_issues",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "accept_new_issues",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::accept_new_issues`]."
                      ]
                    },
                    {
                      "name": "set_custom_secure_threshold",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "custom_threshold",
                          "type": 406,
                          "typeName": "Option<UnsignedFixedPoint<T>>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_custom_secure_threshold`]."
                      ]
                    },
                    {
                      "name": "report_undercollateralized_vault",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::report_undercollateralized_vault`]."
                      ]
                    },
                    {
                      "name": "set_minimum_collateral",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "minimum",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_minimum_collateral`]."
                      ]
                    },
                    {
                      "name": "set_system_collateral_ceiling",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "ceiling",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_system_collateral_ceiling`]."
                      ]
                    },
                    {
                      "name": "set_secure_collateral_threshold",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "threshold",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::set_secure_collateral_threshold`]."
                      ]
                    },
                    {
                      "name": "set_premium_redeem_threshold",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "threshold",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::set_premium_redeem_threshold`]."
                      ]
                    },
                    {
                      "name": "set_liquidation_collateral_threshold",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        },
                        {
                          "name": "threshold",
                          "type": 151,
                          "typeName": "UnsignedFixedPoint<T>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::set_liquidation_collateral_threshold`]."
                      ]
                    },
                    {
                      "name": "recover_vault_id",
                      "fields": [
                        {
                          "name": "currency_pair",
                          "type": 144,
                          "typeName": "DefaultVaultCurrencyPair<T>"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::recover_vault_id`]."
                      ]
                    },
                    {
                      "name": "set_punishment_delay",
                      "fields": [
                        {
                          "name": "punishment_delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::set_punishment_delay`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 406,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 151
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 151
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 407,
            "type": {
              "path": [
                "pooled_rewards",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 408,
            "type": {
              "path": [
                "staking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 409,
            "type": {
              "path": [
                "clients_info",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_current_client_release",
                      "fields": [
                        {
                          "name": "client_name",
                          "type": 169,
                          "typeName": "NameOf<T>"
                        },
                        {
                          "name": "release",
                          "type": 168,
                          "typeName": "ClientRelease<UriOf<T>, T::Hash>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_current_client_release`]."
                      ]
                    },
                    {
                      "name": "set_pending_client_release",
                      "fields": [
                        {
                          "name": "client_name",
                          "type": 169,
                          "typeName": "NameOf<T>"
                        },
                        {
                          "name": "release",
                          "type": 168,
                          "typeName": "ClientRelease<UriOf<T>, T::Hash>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_pending_client_release`]."
                      ]
                    },
                    {
                      "name": "authorize_account",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::authorize_account`]."
                      ]
                    },
                    {
                      "name": "deauthorize_account",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::deauthorize_account`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 410,
            "type": {
              "path": [
                "reward_distribution",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_reward_per_block",
                      "fields": [
                        {
                          "name": "new_reward_per_block",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_reward_per_block`]."
                      ]
                    },
                    {
                      "name": "collect_reward",
                      "fields": [
                        {
                          "name": "vault_id",
                          "type": 143,
                          "typeName": "DefaultVaultId<T>"
                        },
                        {
                          "name": "reward_currency_id",
                          "type": 121,
                          "typeName": "CurrencyId<T>"
                        },
                        {
                          "name": "index",
                          "type": 225,
                          "typeName": "Option<T::Nonce>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::collect_reward`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 411,
            "type": {
              "path": [
                "orml_currencies_allowance_extension",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_allowed_currencies",
                      "fields": [
                        {
                          "name": "currencies",
                          "type": 172,
                          "typeName": "Vec<CurrencyOf<T>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_allowed_currencies`]."
                      ]
                    },
                    {
                      "name": "remove_allowed_currencies",
                      "fields": [
                        {
                          "name": "currencies",
                          "type": 172,
                          "typeName": "Vec<CurrencyOf<T>>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_allowed_currencies`]."
                      ]
                    },
                    {
                      "name": "approve",
                      "fields": [
                        {
                          "name": "id",
                          "type": 121,
                          "typeName": "CurrencyOf<T>"
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve`]."
                      ]
                    },
                    {
                      "name": "transfer_from",
                      "fields": [
                        {
                          "name": "id",
                          "type": 121,
                          "typeName": "CurrencyOf<T>"
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "destination",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_from`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 412,
            "type": {
              "path": [
                "treasury_buyout_extension",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "buyout",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 121,
                          "typeName": "CurrencyIdOf<T>"
                        },
                        {
                          "name": "amount",
                          "type": 413,
                          "typeName": "Amount<BalanceOf<T>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::buyout`]."
                      ]
                    },
                    {
                      "name": "update_buyout_limit",
                      "fields": [
                        {
                          "name": "limit",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_buyout_limit`]."
                      ]
                    },
                    {
                      "name": "update_allowed_assets",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 172,
                          "typeName": "Vec<CurrencyIdOf<T>>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::update_allowed_assets`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 413,
            "type": {
              "path": [
                "treasury_buyout_extension",
                "types",
                "Amount"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Buyout",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Exchange",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 414,
            "type": {
              "path": [
                "bifrost_farming",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create_farming_pool",
                      "fields": [
                        {
                          "name": "tokens_proportion",
                          "type": 415,
                          "typeName": "Vec<(CurrencyIdOf<T>, Perbill)>"
                        },
                        {
                          "name": "basic_rewards",
                          "type": 175,
                          "typeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>"
                        },
                        {
                          "name": "gauge_init",
                          "type": 418,
                          "typeName": "Option<\n(CurrencyIdOf<T>, BlockNumberFor<T>, Vec<\n(CurrencyIdOf<T>, BalanceOf<T>)>,)>"
                        },
                        {
                          "name": "min_deposit_to_start",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "after_block_to_start",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "withdraw_limit_time",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "claim_limit_time",
                          "type": 66,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "withdraw_limit_count",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create_farming_pool`]."
                      ]
                    },
                    {
                      "name": "charge",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "rewards",
                          "type": 175,
                          "typeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::charge`]."
                      ]
                    },
                    {
                      "name": "deposit",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "add_value",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gauge_info",
                          "type": 177,
                          "typeName": "Option<(BalanceOf<T>, BlockNumberFor<T>)>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::deposit`]."
                      ]
                    },
                    {
                      "name": "withdraw",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "remove_value",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::withdraw`]."
                      ]
                    },
                    {
                      "name": "claim",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::claim`]."
                      ]
                    },
                    {
                      "name": "withdraw_claim",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::withdraw_claim`]."
                      ]
                    },
                    {
                      "name": "force_retire_pool",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::force_retire_pool`]."
                      ]
                    },
                    {
                      "name": "set_retire_limit",
                      "fields": [
                        {
                          "name": "limit",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_retire_limit`]."
                      ]
                    },
                    {
                      "name": "close_pool",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::close_pool`]."
                      ]
                    },
                    {
                      "name": "reset_pool",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "basic_rewards",
                          "type": 420,
                          "typeName": "Option<Vec<(CurrencyIdOf<T>, BalanceOf<T>)>>"
                        },
                        {
                          "name": "min_deposit_to_start",
                          "type": 145,
                          "typeName": "Option<BalanceOf<T>>"
                        },
                        {
                          "name": "after_block_to_start",
                          "type": 225,
                          "typeName": "Option<BlockNumberFor<T>>"
                        },
                        {
                          "name": "withdraw_limit_time",
                          "type": 225,
                          "typeName": "Option<BlockNumberFor<T>>"
                        },
                        {
                          "name": "claim_limit_time",
                          "type": 225,
                          "typeName": "Option<BlockNumberFor<T>>"
                        },
                        {
                          "name": "withdraw_limit_count",
                          "type": 421,
                          "typeName": "Option<u8>"
                        },
                        {
                          "name": "gauge_init",
                          "type": 418,
                          "typeName": "Option<\n(CurrencyIdOf<T>, BlockNumberFor<T>, Vec<\n(CurrencyIdOf<T>, BalanceOf<T>)>,)>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::reset_pool`]."
                      ]
                    },
                    {
                      "name": "kill_pool",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::kill_pool`]."
                      ]
                    },
                    {
                      "name": "edit_pool",
                      "fields": [
                        {
                          "name": "pid",
                          "type": 4,
                          "typeName": "PoolId"
                        },
                        {
                          "name": "basic_rewards",
                          "type": 420,
                          "typeName": "Option<Vec<(CurrencyIdOf<T>, BalanceOf<T>)>>"
                        },
                        {
                          "name": "withdraw_limit_time",
                          "type": 225,
                          "typeName": "Option<BlockNumberFor<T>>"
                        },
                        {
                          "name": "claim_limit_time",
                          "type": 225,
                          "typeName": "Option<BlockNumberFor<T>>"
                        },
                        {
                          "name": "gauge_basic_rewards",
                          "type": 420,
                          "typeName": "Option<Vec<(CurrencyIdOf<T>, BalanceOf<T>)>>"
                        },
                        {
                          "name": "withdraw_limit_count",
                          "type": 421,
                          "typeName": "Option<u8>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::edit_pool`]."
                      ]
                    },
                    {
                      "name": "gauge_withdraw",
                      "fields": [
                        {
                          "name": "gid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::gauge_withdraw`]."
                      ]
                    },
                    {
                      "name": "force_gauge_claim",
                      "fields": [
                        {
                          "name": "gid",
                          "type": 4,
                          "typeName": "PoolId"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::force_gauge_claim`]."
                      ]
                    },
                    {
                      "name": "add_boost_pool_whitelist",
                      "fields": [
                        {
                          "name": "whitelist",
                          "type": 422,
                          "typeName": "Vec<PoolId>"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::add_boost_pool_whitelist`]."
                      ]
                    },
                    {
                      "name": "set_next_round_whitelist",
                      "fields": [
                        {
                          "name": "whitelist",
                          "type": 422,
                          "typeName": "Vec<PoolId>"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::set_next_round_whitelist`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "vote_list",
                          "type": 179,
                          "typeName": "Vec<(PoolId, Percent)>"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "start_boost_round",
                      "fields": [
                        {
                          "name": "round_length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::start_boost_round`]."
                      ]
                    },
                    {
                      "name": "end_boost_round",
                      "index": 18,
                      "docs": [
                        "See [`Pallet::end_boost_round`]."
                      ]
                    },
                    {
                      "name": "charge_boost",
                      "fields": [
                        {
                          "name": "rewards",
                          "type": 175,
                          "typeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::charge_boost`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 415,
            "type": {
              "def": {
                "sequence": {
                  "type": 416
                }
              }
            }
          },
          {
            "id": 416,
            "type": {
              "def": {
                "tuple": [
                  121,
                  417
                ]
              }
            }
          },
          {
            "id": 417,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perbill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 418,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 419
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 419
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 419,
            "type": {
              "def": {
                "tuple": [
                  121,
                  4,
                  175
                ]
              }
            }
          },
          {
            "id": 420,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 175
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 175
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 421,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 422,
            "type": {
              "def": {
                "sequence": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 423,
            "type": {
              "path": [
                "orml_asset_registry",
                "module",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "register_asset",
                      "fields": [
                        {
                          "name": "metadata",
                          "type": 183,
                          "typeName": "AssetMetadata<T::Balance, T::CustomMetadata, T::StringLimit>"
                        },
                        {
                          "name": "asset_id",
                          "type": 424,
                          "typeName": "Option<T::AssetId>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::register_asset`]."
                      ]
                    },
                    {
                      "name": "update_asset",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 121,
                          "typeName": "T::AssetId"
                        },
                        {
                          "name": "decimals",
                          "type": 225,
                          "typeName": "Option<u32>"
                        },
                        {
                          "name": "name",
                          "type": 425,
                          "typeName": "Option<BoundedVec<u8, T::StringLimit>>"
                        },
                        {
                          "name": "symbol",
                          "type": 425,
                          "typeName": "Option<BoundedVec<u8, T::StringLimit>>"
                        },
                        {
                          "name": "existential_deposit",
                          "type": 145,
                          "typeName": "Option<T::Balance>"
                        },
                        {
                          "name": "location",
                          "type": 426,
                          "typeName": "Option<Option<VersionedMultiLocation>>"
                        },
                        {
                          "name": "additional",
                          "type": 427,
                          "typeName": "Option<T::CustomMetadata>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_asset`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 424,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 121
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 121
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 425,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 187
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 187
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 426,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 188
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 188
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 427,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 184
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 184
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 428,
            "type": {
              "path": [
                "vesting_manager",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remove_vesting_schedule",
                      "fields": [
                        {
                          "name": "who",
                          "type": 274,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "schedule_index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remove_vesting_schedule`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 429,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "reap_page",
                      "fields": [
                        {
                          "name": "message_origin",
                          "type": 191,
                          "typeName": "MessageOriginOf<T>"
                        },
                        {
                          "name": "page_index",
                          "type": 4,
                          "typeName": "PageIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::reap_page`]."
                      ]
                    },
                    {
                      "name": "execute_overweight",
                      "fields": [
                        {
                          "name": "message_origin",
                          "type": 191,
                          "typeName": "MessageOriginOf<T>"
                        },
                        {
                          "name": "page",
                          "type": 4,
                          "typeName": "PageIndex"
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::Size"
                        },
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute_overweight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 430,
            "type": {
              "path": [
                "sp_runtime",
                "traits",
                "BlakeTwo256"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 431,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 432,
            "type": {
              "def": {
                "sequence": {
                  "type": 280
                }
              }
            }
          },
          {
            "id": 433,
            "type": {
              "def": {
                "tuple": [
                  434,
                  6
                ]
              }
            }
          },
          {
            "id": 434,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 276,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 435,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "ReferendumInfo"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Proposal",
                  "type": 281
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ongoing",
                      "fields": [
                        {
                          "type": 436,
                          "typeName": "ReferendumStatus<BlockNumber, Proposal, Balance>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Finished",
                      "fields": [
                        {
                          "name": "approved",
                          "type": 30,
                          "typeName": "bool"
                        },
                        {
                          "name": "end",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 436,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "ReferendumStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Proposal",
                  "type": 281
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "proposal",
                      "type": 281,
                      "typeName": "Proposal"
                    },
                    {
                      "name": "threshold",
                      "type": 37,
                      "typeName": "VoteThreshold"
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "tally",
                      "type": 437,
                      "typeName": "Tally<Balance>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 437,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "Tally"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ayes",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "nays",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "turnout",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 438,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "Voting"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "MaxVotes",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Direct",
                      "fields": [
                        {
                          "name": "votes",
                          "type": 439,
                          "typeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>"
                        },
                        {
                          "name": "delegations",
                          "type": 442,
                          "typeName": "Delegations<Balance>"
                        },
                        {
                          "name": "prior",
                          "type": 443,
                          "typeName": "PriorLock<BlockNumber, Balance>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Delegating",
                      "fields": [
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance"
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountId"
                        },
                        {
                          "name": "conviction",
                          "type": 284,
                          "typeName": "Conviction"
                        },
                        {
                          "name": "delegations",
                          "type": 442,
                          "typeName": "Delegations<Balance>"
                        },
                        {
                          "name": "prior",
                          "type": 443,
                          "typeName": "PriorLock<BlockNumber, Balance>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 439,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 440
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 441,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 440,
            "type": {
              "def": {
                "tuple": [
                  4,
                  38
                ]
              }
            }
          },
          {
            "id": 441,
            "type": {
              "def": {
                "sequence": {
                  "type": 440
                }
              }
            }
          },
          {
            "id": 442,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "Delegations"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "capital",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 443,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "PriorLock"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 444,
            "type": {
              "def": {
                "tuple": [
                  281,
                  37
                ]
              }
            }
          },
          {
            "id": 445,
            "type": {
              "def": {
                "tuple": [
                  4,
                  434
                ]
              }
            }
          },
          {
            "id": 446,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ValueLow",
                      "index": 0,
                      "docs": [
                        "Value too low"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "index": 1,
                      "docs": [
                        "Proposal does not exist"
                      ]
                    },
                    {
                      "name": "AlreadyCanceled",
                      "index": 2,
                      "docs": [
                        "Cannot cancel the same proposal twice"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "index": 3,
                      "docs": [
                        "Proposal already made"
                      ]
                    },
                    {
                      "name": "ProposalBlacklisted",
                      "index": 4,
                      "docs": [
                        "Proposal still blacklisted"
                      ]
                    },
                    {
                      "name": "NotSimpleMajority",
                      "index": 5,
                      "docs": [
                        "Next external proposal not simple majority"
                      ]
                    },
                    {
                      "name": "InvalidHash",
                      "index": 6,
                      "docs": [
                        "Invalid hash"
                      ]
                    },
                    {
                      "name": "NoProposal",
                      "index": 7,
                      "docs": [
                        "No external proposal"
                      ]
                    },
                    {
                      "name": "AlreadyVetoed",
                      "index": 8,
                      "docs": [
                        "Identity may not veto a proposal twice"
                      ]
                    },
                    {
                      "name": "ReferendumInvalid",
                      "index": 9,
                      "docs": [
                        "Vote given for invalid referendum"
                      ]
                    },
                    {
                      "name": "NoneWaiting",
                      "index": 10,
                      "docs": [
                        "No proposals waiting"
                      ]
                    },
                    {
                      "name": "NotVoter",
                      "index": 11,
                      "docs": [
                        "The given account did not vote on the referendum."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "index": 12,
                      "docs": [
                        "The actor has no permission to conduct the action."
                      ]
                    },
                    {
                      "name": "AlreadyDelegating",
                      "index": 13,
                      "docs": [
                        "The account is already delegating."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "index": 14,
                      "docs": [
                        "Too high a balance was provided that the account cannot afford."
                      ]
                    },
                    {
                      "name": "NotDelegating",
                      "index": 15,
                      "docs": [
                        "The account is not currently delegating."
                      ]
                    },
                    {
                      "name": "VotesExist",
                      "index": 16,
                      "docs": [
                        "The account currently has votes attached to it and the operation cannot succeed until",
                        "these are removed, either through `unvote` or `reap_vote`."
                      ]
                    },
                    {
                      "name": "InstantNotAllowed",
                      "index": 17,
                      "docs": [
                        "The instant referendum origin is currently disallowed."
                      ]
                    },
                    {
                      "name": "Nonsense",
                      "index": 18,
                      "docs": [
                        "Delegation to oneself makes no sense."
                      ]
                    },
                    {
                      "name": "WrongUpperBound",
                      "index": 19,
                      "docs": [
                        "Invalid upper bound."
                      ]
                    },
                    {
                      "name": "MaxVotesReached",
                      "index": 20,
                      "docs": [
                        "Maximum number of votes reached."
                      ]
                    },
                    {
                      "name": "TooMany",
                      "index": 21,
                      "docs": [
                        "Maximum number of items reached."
                      ]
                    },
                    {
                      "name": "VotingPeriodLow",
                      "index": 22,
                      "docs": [
                        "Voting period too low"
                      ]
                    },
                    {
                      "name": "PreimageNotExist",
                      "index": 23,
                      "docs": [
                        "The preimage does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 447,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 194,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 448,
            "type": {
              "path": [
                "pallet_collective",
                "Votes"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "ProposalIndex"
                    },
                    {
                      "name": "threshold",
                      "type": 4,
                      "typeName": "MemberCount"
                    },
                    {
                      "name": "ayes",
                      "type": 276,
                      "typeName": "Vec<AccountId>"
                    },
                    {
                      "name": "nays",
                      "type": 276,
                      "typeName": "Vec<AccountId>"
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 449,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "index": 0,
                      "docs": [
                        "Account is not a member"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "index": 1,
                      "docs": [
                        "Duplicate proposals not allowed"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "index": 2,
                      "docs": [
                        "Proposal must exist"
                      ]
                    },
                    {
                      "name": "WrongIndex",
                      "index": 3,
                      "docs": [
                        "Mismatched index"
                      ]
                    },
                    {
                      "name": "DuplicateVote",
                      "index": 4,
                      "docs": [
                        "Duplicate vote ignored"
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "index": 5,
                      "docs": [
                        "Members are already initialized!"
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "index": 6,
                      "docs": [
                        "The close call was made too early, before the end of the voting."
                      ]
                    },
                    {
                      "name": "TooManyProposals",
                      "index": 7,
                      "docs": [
                        "There can only be a maximum of `MaxProposals` active proposals."
                      ]
                    },
                    {
                      "name": "WrongProposalWeight",
                      "index": 8,
                      "docs": [
                        "The given weight bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "WrongProposalLength",
                      "index": 9,
                      "docs": [
                        "The given length bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "PrimeAccountNotMember",
                      "index": 10,
                      "docs": [
                        "Prime account is not a member"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 450,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 194,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 451,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "index": 0,
                      "docs": [
                        "Account is not a member"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "index": 1,
                      "docs": [
                        "Duplicate proposals not allowed"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "index": 2,
                      "docs": [
                        "Proposal must exist"
                      ]
                    },
                    {
                      "name": "WrongIndex",
                      "index": 3,
                      "docs": [
                        "Mismatched index"
                      ]
                    },
                    {
                      "name": "DuplicateVote",
                      "index": 4,
                      "docs": [
                        "Duplicate vote ignored"
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "index": 5,
                      "docs": [
                        "Members are already initialized!"
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "index": 6,
                      "docs": [
                        "The close call was made too early, before the end of the voting."
                      ]
                    },
                    {
                      "name": "TooManyProposals",
                      "index": 7,
                      "docs": [
                        "There can only be a maximum of `MaxProposals` active proposals."
                      ]
                    },
                    {
                      "name": "WrongProposalWeight",
                      "index": 8,
                      "docs": [
                        "The given weight bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "WrongProposalLength",
                      "index": 9,
                      "docs": [
                        "The given length bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "PrimeAccountNotMember",
                      "index": 10,
                      "docs": [
                        "Prime account is not a member"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 452,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 453
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 455,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 453,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 454
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 454
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 454,
            "type": {
              "path": [
                "pallet_scheduler",
                "Scheduled"
              ],
              "params": [
                {
                  "name": "Name",
                  "type": 1
                },
                {
                  "name": "Call",
                  "type": 281
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PalletsOrigin",
                  "type": 331
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "maybe_id",
                      "type": 32,
                      "typeName": "Option<Name>"
                    },
                    {
                      "name": "priority",
                      "type": 2,
                      "typeName": "schedule::Priority"
                    },
                    {
                      "name": "call",
                      "type": 281,
                      "typeName": "Call"
                    },
                    {
                      "name": "maybe_periodic",
                      "type": 289,
                      "typeName": "Option<schedule::Period<BlockNumber>>"
                    },
                    {
                      "name": "origin",
                      "type": 331,
                      "typeName": "PalletsOrigin"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 455,
            "type": {
              "def": {
                "sequence": {
                  "type": 453
                }
              }
            }
          },
          {
            "id": 456,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FailedToSchedule",
                      "index": 0,
                      "docs": [
                        "Failed to schedule a call"
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 1,
                      "docs": [
                        "Cannot find the scheduled call."
                      ]
                    },
                    {
                      "name": "TargetBlockNumberInPast",
                      "index": 2,
                      "docs": [
                        "Given target block number is in the past."
                      ]
                    },
                    {
                      "name": "RescheduleNoChange",
                      "index": 3,
                      "docs": [
                        "Reschedule failed because it does not change scheduled time."
                      ]
                    },
                    {
                      "name": "Named",
                      "index": 4,
                      "docs": [
                        "Attempt to use a non-named function on a named task."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 457,
            "type": {
              "path": [
                "pallet_preimage",
                "OldRequestStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unrequested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 458,
                          "typeName": "(AccountId, Balance)"
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 459,
                          "typeName": "Option<(AccountId, Balance)>"
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "len",
                          "type": 225,
                          "typeName": "Option<u32>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 458,
            "type": {
              "def": {
                "tuple": [
                  0,
                  6
                ]
              }
            }
          },
          {
            "id": 459,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 458
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 458
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 460,
            "type": {
              "path": [
                "pallet_preimage",
                "RequestStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Ticket",
                  "type": 461
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unrequested",
                      "fields": [
                        {
                          "name": "ticket",
                          "type": 462,
                          "typeName": "(AccountId, Ticket)"
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "maybe_ticket",
                          "type": 463,
                          "typeName": "Option<(AccountId, Ticket)>"
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "maybe_len",
                          "type": 225,
                          "typeName": "Option<u32>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 461,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "fungible",
                "HoldConsideration"
              ],
              "params": [
                {
                  "name": "A",
                  "type": null
                },
                {
                  "name": "F",
                  "type": null
                },
                {
                  "name": "R",
                  "type": null
                },
                {
                  "name": "D",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "F::Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 462,
            "type": {
              "def": {
                "tuple": [
                  0,
                  461
                ]
              }
            }
          },
          {
            "id": 463,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 462
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 462
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 464,
            "type": {
              "def": {
                "tuple": [
                  12,
                  4
                ]
              }
            }
          },
          {
            "id": 465,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 466,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooBig",
                      "index": 0,
                      "docs": [
                        "Preimage is too large to store on-chain."
                      ]
                    },
                    {
                      "name": "AlreadyNoted",
                      "index": 1,
                      "docs": [
                        "Preimage has already been noted on-chain."
                      ]
                    },
                    {
                      "name": "NotAuthorized",
                      "index": 2,
                      "docs": [
                        "The user is not authorized to perform this action."
                      ]
                    },
                    {
                      "name": "NotNoted",
                      "index": 3,
                      "docs": [
                        "The preimage cannot be removed since it has not yet been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "index": 4,
                      "docs": [
                        "A preimage may not be removed when there are outstanding requests."
                      ]
                    },
                    {
                      "name": "NotRequested",
                      "index": 5,
                      "docs": [
                        "The preimage request cannot be removed since no outstanding requests exist."
                      ]
                    },
                    {
                      "name": "TooMany",
                      "index": 6,
                      "docs": [
                        "More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once."
                      ]
                    },
                    {
                      "name": "TooFew",
                      "index": 7,
                      "docs": [
                        "Too few hashes were requested to be upgraded (i.e. zero)."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 467,
            "type": {
              "def": {
                "tuple": [
                  0,
                  1
                ]
              }
            }
          },
          {
            "id": 468,
            "type": {
              "path": [
                "pallet_multisig",
                "Multisig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "MaxApprovals",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "when",
                      "type": 49,
                      "typeName": "Timepoint<BlockNumber>"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "approvals",
                      "type": 469,
                      "typeName": "BoundedVec<AccountId, MaxApprovals>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 469,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 276,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 470,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MinimumThreshold",
                      "index": 0,
                      "docs": [
                        "Threshold must be 2 or greater."
                      ]
                    },
                    {
                      "name": "AlreadyApproved",
                      "index": 1,
                      "docs": [
                        "Call is already approved by this signatory."
                      ]
                    },
                    {
                      "name": "NoApprovalsNeeded",
                      "index": 2,
                      "docs": [
                        "Call doesn't need any (more) approvals."
                      ]
                    },
                    {
                      "name": "TooFewSignatories",
                      "index": 3,
                      "docs": [
                        "There are too few signatories in the list."
                      ]
                    },
                    {
                      "name": "TooManySignatories",
                      "index": 4,
                      "docs": [
                        "There are too many signatories in the list."
                      ]
                    },
                    {
                      "name": "SignatoriesOutOfOrder",
                      "index": 5,
                      "docs": [
                        "The signatories were provided out of order; they should be ordered."
                      ]
                    },
                    {
                      "name": "SenderInSignatories",
                      "index": 6,
                      "docs": [
                        "The sender was contained in the other signatories; it shouldn't be."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 7,
                      "docs": [
                        "Multisig operation not found when attempting to cancel."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "index": 8,
                      "docs": [
                        "Only the account that originally created the multisig is able to cancel it."
                      ]
                    },
                    {
                      "name": "NoTimepoint",
                      "index": 9,
                      "docs": [
                        "No timepoint was given, yet the multisig operation is already underway."
                      ]
                    },
                    {
                      "name": "WrongTimepoint",
                      "index": 10,
                      "docs": [
                        "A different timepoint was given to the multisig operation that is underway."
                      ]
                    },
                    {
                      "name": "UnexpectedTimepoint",
                      "index": 11,
                      "docs": [
                        "A timepoint was given, yet no multisig operation is underway."
                      ]
                    },
                    {
                      "name": "MaxWeightTooLow",
                      "index": 12,
                      "docs": [
                        "The maximum weight information provided was too low."
                      ]
                    },
                    {
                      "name": "AlreadyStored",
                      "index": 13,
                      "docs": [
                        "The data to be stored is already stored."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 471,
            "type": {
              "path": [
                "pallet_treasury",
                "Proposal"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposer",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 472,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 422,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 473,
            "type": {
              "path": [
                "pallet_treasury",
                "SpendStatus"
              ],
              "params": [
                {
                  "name": "AssetKind",
                  "type": 43
                },
                {
                  "name": "AssetBalance",
                  "type": 6
                },
                {
                  "name": "Beneficiary",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PaymentId",
                  "type": 43
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset_kind",
                      "type": 43,
                      "typeName": "AssetKind"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "AssetBalance"
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "Beneficiary"
                    },
                    {
                      "name": "valid_from",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "expire_at",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "status",
                      "type": 474,
                      "typeName": "PaymentState<PaymentId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 474,
            "type": {
              "path": [
                "pallet_treasury",
                "PaymentState"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 43
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "index": 0
                    },
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 43,
                          "typeName": "Id"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Failed",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 475,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 476,
            "type": {
              "path": [
                "frame_support",
                "PalletId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 82,
                      "typeName": "[u8; 8]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 477,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "index": 1,
                      "docs": [
                        "No proposal, bounty or spend at that index."
                      ]
                    },
                    {
                      "name": "TooManyApprovals",
                      "index": 2,
                      "docs": [
                        "Too many approvals in the queue."
                      ]
                    },
                    {
                      "name": "InsufficientPermission",
                      "index": 3,
                      "docs": [
                        "The spend origin is valid but the amount it is allowed to spend is lower than the",
                        "amount to be spent."
                      ]
                    },
                    {
                      "name": "ProposalNotApproved",
                      "index": 4,
                      "docs": [
                        "Proposal has not been approved."
                      ]
                    },
                    {
                      "name": "FailedToConvertBalance",
                      "index": 5,
                      "docs": [
                        "The balance of the asset kind is not convertible to the balance of the native asset."
                      ]
                    },
                    {
                      "name": "SpendExpired",
                      "index": 6,
                      "docs": [
                        "The spend has expired and cannot be claimed."
                      ]
                    },
                    {
                      "name": "EarlyPayout",
                      "index": 7,
                      "docs": [
                        "The spend is not yet eligible for payout."
                      ]
                    },
                    {
                      "name": "AlreadyAttempted",
                      "index": 8,
                      "docs": [
                        "The payment has already been attempted."
                      ]
                    },
                    {
                      "name": "PayoutError",
                      "index": 9,
                      "docs": [
                        "There was some issue with the mechanism of payment."
                      ]
                    },
                    {
                      "name": "NotAttempted",
                      "index": 10,
                      "docs": [
                        "The payout was not yet attempted/claimed."
                      ]
                    },
                    {
                      "name": "Inconclusive",
                      "index": 11,
                      "docs": [
                        "The payment has neither failed nor succeeded yet."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the treasury pallet."
              ]
            }
          },
          {
            "id": 478,
            "type": {
              "path": [
                "pallet_bounties",
                "Bounty"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposer",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "curator_deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "status",
                      "type": 479,
                      "typeName": "BountyStatus<AccountId, BlockNumber>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 479,
            "type": {
              "path": [
                "pallet_bounties",
                "BountyStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "index": 0
                    },
                    {
                      "name": "Approved",
                      "index": 1
                    },
                    {
                      "name": "Funded",
                      "index": 2
                    },
                    {
                      "name": "CuratorProposed",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Active",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId"
                        },
                        {
                          "name": "update_due",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "PendingPayout",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "AccountId"
                        },
                        {
                          "name": "unlock_at",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 480,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 481,
            "type": {
              "path": [
                "pallet_bounties",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "index": 1,
                      "docs": [
                        "No proposal or bounty at that index."
                      ]
                    },
                    {
                      "name": "ReasonTooBig",
                      "index": 2,
                      "docs": [
                        "The reason given is just too big."
                      ]
                    },
                    {
                      "name": "UnexpectedStatus",
                      "index": 3,
                      "docs": [
                        "The bounty status is unexpected."
                      ]
                    },
                    {
                      "name": "RequireCurator",
                      "index": 4,
                      "docs": [
                        "Require bounty curator."
                      ]
                    },
                    {
                      "name": "InvalidValue",
                      "index": 5,
                      "docs": [
                        "Invalid bounty value."
                      ]
                    },
                    {
                      "name": "InvalidFee",
                      "index": 6,
                      "docs": [
                        "Invalid bounty fee."
                      ]
                    },
                    {
                      "name": "PendingPayout",
                      "index": 7,
                      "docs": [
                        "A bounty payout is pending.",
                        "To cancel the bounty, you must unassign and slash the curator."
                      ]
                    },
                    {
                      "name": "Premature",
                      "index": 8,
                      "docs": [
                        "The bounties cannot be claimed/closed because it's still in the countdown period."
                      ]
                    },
                    {
                      "name": "HasActiveChildBounty",
                      "index": 9,
                      "docs": [
                        "The bounty cannot be closed because it has active child bounties."
                      ]
                    },
                    {
                      "name": "TooManyQueued",
                      "index": 10,
                      "docs": [
                        "Too many approvals are already queued."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 482,
            "type": {
              "path": [
                "pallet_child_bounties",
                "ChildBounty"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_bounty",
                      "type": 4,
                      "typeName": "BountyIndex"
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "curator_deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "status",
                      "type": 483,
                      "typeName": "ChildBountyStatus<AccountId, BlockNumber>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 483,
            "type": {
              "path": [
                "pallet_child_bounties",
                "ChildBountyStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Added",
                      "index": 0
                    },
                    {
                      "name": "CuratorProposed",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Active",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "PendingPayout",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "AccountId"
                        },
                        {
                          "name": "unlock_at",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 484,
            "type": {
              "path": [
                "pallet_child_bounties",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParentBountyNotActive",
                      "index": 0,
                      "docs": [
                        "The parent bounty is not in active state."
                      ]
                    },
                    {
                      "name": "InsufficientBountyBalance",
                      "index": 1,
                      "docs": [
                        "The bounty balance is not enough to add new child-bounty."
                      ]
                    },
                    {
                      "name": "TooManyChildBounties",
                      "index": 2,
                      "docs": [
                        "Number of child bounties exceeds limit `MaxActiveChildBountyCount`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 485,
            "type": {
              "def": {
                "tuple": [
                  486,
                  6
                ]
              }
            }
          },
          {
            "id": 486,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 487
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 488,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 487,
            "type": {
              "path": [
                "pallet_proxy",
                "ProxyDefinition"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ProxyType",
                  "type": 54
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegate",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "proxy_type",
                      "type": 54,
                      "typeName": "ProxyType"
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 488,
            "type": {
              "def": {
                "sequence": {
                  "type": 487
                }
              }
            }
          },
          {
            "id": 489,
            "type": {
              "def": {
                "tuple": [
                  490,
                  6
                ]
              }
            }
          },
          {
            "id": 490,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 491
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 492,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 491,
            "type": {
              "path": [
                "pallet_proxy",
                "Announcement"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "real",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "call_hash",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 492,
            "type": {
              "def": {
                "sequence": {
                  "type": 491
                }
              }
            }
          },
          {
            "id": 493,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooMany",
                      "index": 0,
                      "docs": [
                        "There are too many proxies registered or too many announcements pending."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 1,
                      "docs": [
                        "Proxy registration not found."
                      ]
                    },
                    {
                      "name": "NotProxy",
                      "index": 2,
                      "docs": [
                        "Sender is not a proxy of the account to be proxied."
                      ]
                    },
                    {
                      "name": "Unproxyable",
                      "index": 3,
                      "docs": [
                        "A call which is incompatible with the proxy type's filter was attempted."
                      ]
                    },
                    {
                      "name": "Duplicate",
                      "index": 4,
                      "docs": [
                        "Account is already a proxy."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "index": 5,
                      "docs": [
                        "Call may not be made by proxy because it may escalate its privileges."
                      ]
                    },
                    {
                      "name": "Unannounced",
                      "index": 6,
                      "docs": [
                        "Announcement, if made at all, was made too recently."
                      ]
                    },
                    {
                      "name": "NoSelfProxy",
                      "index": 7,
                      "docs": [
                        "Cannot add self as proxy."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 494,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 300
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 495,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 495,
            "type": {
              "def": {
                "sequence": {
                  "type": 300
                }
              }
            }
          },
          {
            "id": 496,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 497,
            "type": {
              "def": {
                "sequence": {
                  "type": 498
                }
              }
            }
          },
          {
            "id": 498,
            "type": {
              "def": {
                "tuple": [
                  0,
                  299
                ]
              }
            }
          },
          {
            "id": 499,
            "type": {
              "def": {
                "tuple": [
                  500,
                  13
                ]
              }
            }
          },
          {
            "id": 500,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 17,
                      "typeName": "[u8; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 501,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 502,
            "type": {
              "path": [
                "parachain_staking",
                "types",
                "RoundInfo"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "current",
                      "type": 4,
                      "typeName": "SessionIndex"
                    },
                    {
                      "name": "first",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "length",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 503,
            "type": {
              "path": [
                "parachain_staking",
                "types",
                "DelegationCounter"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round",
                      "type": 4,
                      "typeName": "SessionIndex"
                    },
                    {
                      "name": "counter",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 504,
            "type": {
              "path": [
                "parachain_staking",
                "types",
                "Stake"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 286
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 286,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 505,
            "type": {
              "path": [
                "parachain_staking",
                "types",
                "Candidate"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "MaxDelegatorsPerCandidate",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "stake",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "delegators",
                      "type": 506,
                      "typeName": "OrderedSet<Stake<AccountId, Balance>, MaxDelegatorsPerCandidate>"
                    },
                    {
                      "name": "total",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "status",
                      "type": 510,
                      "typeName": "CandidateStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 506,
            "type": {
              "path": [
                "parachain_staking",
                "set",
                "OrderedSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 507
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 508,
                      "typeName": "BoundedVec<T, S>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 507,
            "type": {
              "path": [
                "parachain_staking",
                "types",
                "Stake"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 508,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 507
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 509,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 509,
            "type": {
              "def": {
                "sequence": {
                  "type": 507
                }
              }
            }
          },
          {
            "id": 510,
            "type": {
              "path": [
                "parachain_staking",
                "types",
                "CandidateStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Active",
                      "index": 0
                    },
                    {
                      "name": "Leaving",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "SessionIndex"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 511,
            "type": {
              "path": [
                "parachain_staking",
                "types",
                "TotalStake"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "collators",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "delegators",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 512,
            "type": {
              "path": [
                "parachain_staking",
                "set",
                "OrderedSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 507
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 513,
                      "typeName": "BoundedVec<T, S>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 513,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 507
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 509,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 514,
            "type": {
              "path": [
                "parachain_staking",
                "inflation",
                "InflationInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "collator",
                      "type": 515,
                      "typeName": "StakingInfo"
                    },
                    {
                      "name": "delegator",
                      "type": 515,
                      "typeName": "StakingInfo"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 515,
            "type": {
              "path": [
                "parachain_staking",
                "inflation",
                "StakingInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_rate",
                      "type": 58,
                      "typeName": "Perquintill"
                    },
                    {
                      "name": "reward_rate",
                      "type": 516,
                      "typeName": "RewardRate"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 516,
            "type": {
              "path": [
                "parachain_staking",
                "inflation",
                "RewardRate"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "annual",
                      "type": 58,
                      "typeName": "Perquintill"
                    },
                    {
                      "name": "per_block",
                      "type": 58,
                      "typeName": "Perquintill"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 517,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 6
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 518,
                      "typeName": "BTreeMap<K, V>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 518,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 519
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 519,
            "type": {
              "def": {
                "sequence": {
                  "type": 520
                }
              }
            }
          },
          {
            "id": 520,
            "type": {
              "def": {
                "tuple": [
                  4,
                  6
                ]
              }
            }
          },
          {
            "id": 521,
            "type": {
              "path": [
                "parachain_staking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DelegatorNotFound",
                      "index": 0,
                      "docs": [
                        "The account is not part of the delegators set."
                      ]
                    },
                    {
                      "name": "CandidateNotFound",
                      "index": 1,
                      "docs": [
                        "The account is not part of the collator candidates set."
                      ]
                    },
                    {
                      "name": "DelegatorExists",
                      "index": 2,
                      "docs": [
                        "The account is already part of the delegators set."
                      ]
                    },
                    {
                      "name": "CandidateExists",
                      "index": 3,
                      "docs": [
                        "The account is already part of the collator candidates set."
                      ]
                    },
                    {
                      "name": "ValStakeZero",
                      "index": 4,
                      "docs": [
                        "The account tried to stake more or less with amount zero."
                      ]
                    },
                    {
                      "name": "ValStakeBelowMin",
                      "index": 5,
                      "docs": [
                        "The account has not staked enough funds to be added to the collator",
                        "candidates set."
                      ]
                    },
                    {
                      "name": "ValStakeAboveMax",
                      "index": 6,
                      "docs": [
                        "The account has already staked the maximum amount of funds possible."
                      ]
                    },
                    {
                      "name": "DelegationBelowMin",
                      "index": 7,
                      "docs": [
                        "The account has not staked enough funds to delegate a collator",
                        "candidate."
                      ]
                    },
                    {
                      "name": "AlreadyLeaving",
                      "index": 8,
                      "docs": [
                        "The collator candidate has already trigger the process to leave the",
                        "set of collator candidates."
                      ]
                    },
                    {
                      "name": "NotLeaving",
                      "index": 9,
                      "docs": [
                        "The collator candidate wanted to execute the exit but has not",
                        "requested to leave before by calling `init_leave_candidates`."
                      ]
                    },
                    {
                      "name": "CannotLeaveYet",
                      "index": 10,
                      "docs": [
                        "The collator tried to leave before waiting at least for",
                        "`ExitQueueDelay` many rounds."
                      ]
                    },
                    {
                      "name": "CannotJoinBeforeUnlocking",
                      "index": 11,
                      "docs": [
                        "The account has a full list of unstaking requests and needs to",
                        "unlock at least one of these before being able to join (again).",
                        "NOTE: Can only happen if the account was a candidate or",
                        "delegator before and either got kicked or exited voluntarily."
                      ]
                    },
                    {
                      "name": "AlreadyDelegating",
                      "index": 12,
                      "docs": [
                        "The account is already delegating the collator candidate."
                      ]
                    },
                    {
                      "name": "NotYetDelegating",
                      "index": 13,
                      "docs": [
                        "The account has not delegated any collator candidate yet, hence it",
                        "is not in the set of delegators."
                      ]
                    },
                    {
                      "name": "DelegationsPerRoundExceeded",
                      "index": 14,
                      "docs": [
                        "The delegator has exceeded the number of delegations per round which",
                        "is equal to MaxDelegatorsPerCollator.",
                        "",
                        "This protects against attacks in which a delegator can re-delegate",
                        "from a collator who has already authored a block, to another one",
                        "which has not in this round."
                      ]
                    },
                    {
                      "name": "TooManyDelegators",
                      "index": 15,
                      "docs": [
                        "The collator candidate has already reached the maximum number of",
                        "delegators.",
                        "",
                        "This error is generated in case a new delegation request does not",
                        "stake enough funds to replace some other existing delegation."
                      ]
                    },
                    {
                      "name": "TooFewCollatorCandidates",
                      "index": 16,
                      "docs": [
                        "The set of collator candidates would fall below the required minimum",
                        "if the collator left."
                      ]
                    },
                    {
                      "name": "CannotStakeIfLeaving",
                      "index": 17,
                      "docs": [
                        "The collator candidate is in the process of leaving the set of",
                        "candidates and cannot perform any other actions in the meantime."
                      ]
                    },
                    {
                      "name": "CannotDelegateIfLeaving",
                      "index": 18,
                      "docs": [
                        "The collator candidate is in the process of leaving the set of",
                        "candidates and thus cannot be delegated to."
                      ]
                    },
                    {
                      "name": "MaxCollatorsPerDelegatorExceeded",
                      "index": 19,
                      "docs": [
                        "The delegator has already delegated the maximum number of candidates",
                        "allowed."
                      ]
                    },
                    {
                      "name": "AlreadyDelegatedCollator",
                      "index": 20,
                      "docs": [
                        "The delegator has already previously delegated the collator",
                        "candidate."
                      ]
                    },
                    {
                      "name": "DelegationNotFound",
                      "index": 21,
                      "docs": [
                        "The given delegation does not exist in the set of delegations."
                      ]
                    },
                    {
                      "name": "Underflow",
                      "index": 22,
                      "docs": [
                        "The collator delegate or the delegator is trying to un-stake more",
                        "funds that are currently staked."
                      ]
                    },
                    {
                      "name": "CannotSetAboveMax",
                      "index": 23,
                      "docs": [
                        "The number of selected candidates per staking round is",
                        "above the maximum value allowed."
                      ]
                    },
                    {
                      "name": "CannotSetBelowMin",
                      "index": 24,
                      "docs": [
                        "The number of selected candidates per staking round is",
                        "below the minimum value allowed."
                      ]
                    },
                    {
                      "name": "InvalidSchedule",
                      "index": 25,
                      "docs": [
                        "An invalid inflation configuration is trying to be set."
                      ]
                    },
                    {
                      "name": "NoMoreUnstaking",
                      "index": 26,
                      "docs": [
                        "The staking reward being unlocked does not exist.",
                        "Max unlocking requests reached."
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "index": 27,
                      "docs": [
                        "The reward rate cannot be adjusted yet as an entire year has not",
                        "passed."
                      ]
                    },
                    {
                      "name": "StakeNotFound",
                      "index": 28,
                      "docs": [
                        "Provided staked value is zero. Should never be thrown."
                      ]
                    },
                    {
                      "name": "UnstakingIsEmpty",
                      "index": 29,
                      "docs": [
                        "Cannot unlock when Unstaked is empty."
                      ]
                    },
                    {
                      "name": "RewardsNotFound",
                      "index": 30,
                      "docs": [
                        "Cannot claim rewards if empty."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 522,
            "type": {
              "def": {
                "tuple": [
                  496,
                  4
                ]
              }
            }
          },
          {
            "id": 523,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_set",
                "BoundedBTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 139
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 524,
                      "typeName": "BTreeSet<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 524,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 525
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 525,
            "type": {
              "def": {
                "sequence": {
                  "type": 139
                }
              }
            }
          },
          {
            "id": 526,
            "type": {
              "def": {
                "sequence": {
                  "type": 527
                }
              }
            }
          },
          {
            "id": 527,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundChannelDetails"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 139,
                      "typeName": "ParaId"
                    },
                    {
                      "name": "state",
                      "type": 528,
                      "typeName": "OutboundState"
                    },
                    {
                      "name": "signals_exist",
                      "type": 30,
                      "typeName": "bool"
                    },
                    {
                      "name": "first_index",
                      "type": 55,
                      "typeName": "u16"
                    },
                    {
                      "name": "last_index",
                      "type": 55,
                      "typeName": "u16"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 528,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundState"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "index": 0
                    },
                    {
                      "name": "Suspended",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 529,
            "type": {
              "def": {
                "tuple": [
                  139,
                  55
                ]
              }
            }
          },
          {
            "id": 530,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "QueueConfigData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "suspend_threshold",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "drop_threshold",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "resume_threshold",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 531,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BadQueueConfig",
                      "index": 0,
                      "docs": [
                        "Setting the queue config failed since one of its values was invalid."
                      ]
                    },
                    {
                      "name": "AlreadySuspended",
                      "index": 1,
                      "docs": [
                        "The execution is already suspended."
                      ]
                    },
                    {
                      "name": "AlreadyResumed",
                      "index": 2,
                      "docs": [
                        "The execution is already resumed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 532,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "QueryStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "fields": [
                        {
                          "name": "responder",
                          "type": 115,
                          "typeName": "VersionedMultiLocation"
                        },
                        {
                          "name": "maybe_match_querier",
                          "type": 188,
                          "typeName": "Option<VersionedMultiLocation>"
                        },
                        {
                          "name": "maybe_notify",
                          "type": 533,
                          "typeName": "Option<(u8, u8)>"
                        },
                        {
                          "name": "timeout",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "VersionNotifier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 115,
                          "typeName": "VersionedMultiLocation"
                        },
                        {
                          "name": "is_active",
                          "type": 30,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "name": "response",
                          "type": 535,
                          "typeName": "VersionedResponse"
                        },
                        {
                          "name": "at",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 533,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 534
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 534
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 534,
            "type": {
              "def": {
                "tuple": [
                  2,
                  2
                ]
              }
            }
          },
          {
            "id": 535,
            "type": {
              "path": [
                "xcm",
                "VersionedResponse"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 309,
                          "typeName": "v2::Response"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 84,
                          "typeName": "v3::Response"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 536,
            "type": {
              "def": {
                "tuple": [
                  4,
                  115
                ]
              }
            }
          },
          {
            "id": 537,
            "type": {
              "def": {
                "tuple": [
                  11,
                  9,
                  4
                ]
              }
            }
          },
          {
            "id": 538,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 539
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 540,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 539,
            "type": {
              "def": {
                "tuple": [
                  115,
                  4
                ]
              }
            }
          },
          {
            "id": 540,
            "type": {
              "def": {
                "sequence": {
                  "type": 539
                }
              }
            }
          },
          {
            "id": 541,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "VersionMigrationStage"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MigrateSupportedVersion",
                      "index": 0
                    },
                    {
                      "name": "MigrateVersionNotifiers",
                      "index": 1
                    },
                    {
                      "name": "NotifyCurrentTargets",
                      "fields": [
                        {
                          "type": 542,
                          "typeName": "Option<Vec<u8>>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "MigrateAndNotifyOldTargets",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 542,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 13
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 543,
            "type": {
              "def": {
                "tuple": [
                  4,
                  0,
                  544
                ]
              }
            }
          },
          {
            "id": 544,
            "type": {
              "path": [
                "xcm",
                "VersionedAssetId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 79,
                          "typeName": "v3::AssetId"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 545,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "RemoteLockedFungibleRecord"
              ],
              "params": [
                {
                  "name": "ConsumerIdentifier",
                  "type": 43
                },
                {
                  "name": "MaxConsumers",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "u128"
                    },
                    {
                      "name": "owner",
                      "type": 115,
                      "typeName": "VersionedMultiLocation"
                    },
                    {
                      "name": "locker",
                      "type": 115,
                      "typeName": "VersionedMultiLocation"
                    },
                    {
                      "name": "consumers",
                      "type": 546,
                      "typeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 546,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 547
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 548,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 547,
            "type": {
              "def": {
                "tuple": [
                  43,
                  6
                ]
              }
            }
          },
          {
            "id": 548,
            "type": {
              "def": {
                "sequence": {
                  "type": 547
                }
              }
            }
          },
          {
            "id": 549,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 550
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 551,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 550,
            "type": {
              "def": {
                "tuple": [
                  6,
                  115
                ]
              }
            }
          },
          {
            "id": 551,
            "type": {
              "def": {
                "sequence": {
                  "type": 550
                }
              }
            }
          },
          {
            "id": 552,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unreachable",
                      "index": 0,
                      "docs": [
                        "The desired destination was unreachable, generally because there is a no way of routing",
                        "to it."
                      ]
                    },
                    {
                      "name": "SendFailure",
                      "index": 1,
                      "docs": [
                        "There was some other issue (i.e. not to do with routing) in sending the message.",
                        "Perhaps a lack of space for buffering the message."
                      ]
                    },
                    {
                      "name": "Filtered",
                      "index": 2,
                      "docs": [
                        "The message execution fails the filter."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "index": 3,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "DestinationNotInvertible",
                      "index": 4,
                      "docs": [
                        "The destination `MultiLocation` provided cannot be inverted."
                      ]
                    },
                    {
                      "name": "Empty",
                      "index": 5,
                      "docs": [
                        "The assets to be sent are empty."
                      ]
                    },
                    {
                      "name": "CannotReanchor",
                      "index": 6,
                      "docs": [
                        "Could not re-anchor the assets to declare the fees for the destination chain."
                      ]
                    },
                    {
                      "name": "TooManyAssets",
                      "index": 7,
                      "docs": [
                        "Too many assets have been attempted for transfer."
                      ]
                    },
                    {
                      "name": "InvalidOrigin",
                      "index": 8,
                      "docs": [
                        "Origin is invalid for sending."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "index": 9,
                      "docs": [
                        "The version of the `Versioned` value used is not able to be interpreted."
                      ]
                    },
                    {
                      "name": "BadLocation",
                      "index": 10,
                      "docs": [
                        "The given location could not be used (e.g. because it cannot be expressed in the",
                        "desired version of XCM)."
                      ]
                    },
                    {
                      "name": "NoSubscription",
                      "index": 11,
                      "docs": [
                        "The referenced subscription could not be found."
                      ]
                    },
                    {
                      "name": "AlreadySubscribed",
                      "index": 12,
                      "docs": [
                        "The location is invalid since it already has a subscription from us."
                      ]
                    },
                    {
                      "name": "CannotCheckOutTeleport",
                      "index": 13,
                      "docs": [
                        "Could not check-out the assets for teleportation to the destination chain."
                      ]
                    },
                    {
                      "name": "LowBalance",
                      "index": 14,
                      "docs": [
                        "The owner does not own (all) of the asset that they wish to do the operation on."
                      ]
                    },
                    {
                      "name": "TooManyLocks",
                      "index": 15,
                      "docs": [
                        "The asset owner has too many locks on the asset."
                      ]
                    },
                    {
                      "name": "AccountNotSovereign",
                      "index": 16,
                      "docs": [
                        "The given account is not an identifiable sovereign account for any location."
                      ]
                    },
                    {
                      "name": "FeesNotMet",
                      "index": 17,
                      "docs": [
                        "The operation required fees to be paid which the initiator could not meet."
                      ]
                    },
                    {
                      "name": "LockNotFound",
                      "index": 18,
                      "docs": [
                        "A remote lock with the corresponding data could not be found."
                      ]
                    },
                    {
                      "name": "InUse",
                      "index": 19,
                      "docs": [
                        "The unlock operation cannot succeed because there are still consumers of the lock."
                      ]
                    },
                    {
                      "name": "InvalidAssetNotConcrete",
                      "index": 20,
                      "docs": [
                        "Invalid non-concrete asset."
                      ]
                    },
                    {
                      "name": "InvalidAssetUnknownReserve",
                      "index": 21,
                      "docs": [
                        "Invalid asset, reserve chain could not be determined for it."
                      ]
                    },
                    {
                      "name": "InvalidAssetUnsupportedReserve",
                      "index": 22,
                      "docs": [
                        "Invalid asset, do not support remote asset reserves with different fees reserves."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "index": 23,
                      "docs": [
                        "Too many assets with different reserve locations have been attempted for transfer."
                      ]
                    },
                    {
                      "name": "LocalExecutionIncomplete",
                      "index": 24,
                      "docs": [
                        "Local XCM execution incomplete."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 553,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "MigrationState"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotStarted",
                      "index": 0
                    },
                    {
                      "name": "StartedExport",
                      "fields": [
                        {
                          "name": "next_begin_used",
                          "type": 4,
                          "typeName": "PageCounter"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CompletedExport",
                      "index": 2
                    },
                    {
                      "name": "StartedOverweightExport",
                      "fields": [
                        {
                          "name": "next_overweight_index",
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "CompletedOverweightExport",
                      "index": 4
                    },
                    {
                      "name": "StartedCleanup",
                      "fields": [
                        {
                          "name": "cursor",
                          "type": 554,
                          "typeName": "Option<BoundedVec<u8, ConstU32<1024>>>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Completed",
                      "index": 6
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 554,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 555
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 555
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 555,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 556,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 328
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 557,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 557,
            "type": {
              "def": {
                "sequence": {
                  "type": 328
                }
              }
            }
          },
          {
            "id": 558,
            "type": {
              "path": [
                "pallet_vesting",
                "Releases"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "index": 0
                    },
                    {
                      "name": "V1",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 559,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotVesting",
                      "index": 0,
                      "docs": [
                        "The account given is not vesting."
                      ]
                    },
                    {
                      "name": "AtMaxVestingSchedules",
                      "index": 1,
                      "docs": [
                        "The account already has `MaxVestingSchedules` count of schedules and thus",
                        "cannot add another one. Consider merging existing schedules in order to add another."
                      ]
                    },
                    {
                      "name": "AmountLow",
                      "index": 2,
                      "docs": [
                        "Amount being transferred is too low to create a vesting schedule."
                      ]
                    },
                    {
                      "name": "ScheduleIndexOutOfBounds",
                      "index": 3,
                      "docs": [
                        "An index was out of bounds of the vesting schedules."
                      ]
                    },
                    {
                      "name": "InvalidScheduleParams",
                      "index": 4,
                      "docs": [
                        "Failed to create a new schedule because some parameter was invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the vesting pallet."
              ]
            }
          },
          {
            "id": 560,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManyCalls",
                      "index": 0,
                      "docs": [
                        "Too many calls batched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 561,
            "type": {
              "path": [
                "orml_currencies",
                "module",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AmountIntoBalanceFailed",
                      "index": 0,
                      "docs": [
                        "Unable to convert the Amount type into Balance."
                      ]
                    },
                    {
                      "name": "BalanceTooLow",
                      "index": 1,
                      "docs": [
                        "Balance is too low."
                      ]
                    },
                    {
                      "name": "DepositFailed",
                      "index": 2,
                      "docs": [
                        "Deposit result is not expected"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 562,
            "type": {
              "def": {
                "tuple": [
                  0,
                  121
                ]
              }
            }
          },
          {
            "id": 563,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 564
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 565,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 564,
            "type": {
              "path": [
                "orml_tokens",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 82,
                      "typeName": "LockIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 565,
            "type": {
              "def": {
                "sequence": {
                  "type": 564
                }
              }
            }
          },
          {
            "id": 566,
            "type": {
              "path": [
                "orml_tokens",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 567,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 568
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 569,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 568,
            "type": {
              "path": [
                "orml_tokens",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 82
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 82,
                      "typeName": "ReserveIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 569,
            "type": {
              "def": {
                "sequence": {
                  "type": 568
                }
              }
            }
          },
          {
            "id": 570,
            "type": {
              "path": [
                "orml_tokens",
                "module",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BalanceTooLow",
                      "index": 0,
                      "docs": [
                        "The balance is too low"
                      ]
                    },
                    {
                      "name": "AmountIntoBalanceFailed",
                      "index": 1,
                      "docs": [
                        "Cannot convert Amount into Balance type"
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "index": 2,
                      "docs": [
                        "Failed because liquidity restrictions due to locking"
                      ]
                    },
                    {
                      "name": "MaxLocksExceeded",
                      "index": 3,
                      "docs": [
                        "Failed because the maximum locks was exceeded"
                      ]
                    },
                    {
                      "name": "KeepAlive",
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account"
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "index": 5,
                      "docs": [
                        "Value too low to create account due to existential deposit"
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist"
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "index": 7
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 571,
            "type": {
              "path": [
                "orml_xtokens",
                "module",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetHasNoReserve",
                      "index": 0,
                      "docs": [
                        "Asset has no reserve location."
                      ]
                    },
                    {
                      "name": "NotCrossChainTransfer",
                      "index": 1,
                      "docs": [
                        "Not cross-chain transfer."
                      ]
                    },
                    {
                      "name": "InvalidDest",
                      "index": 2,
                      "docs": [
                        "Invalid transfer destination."
                      ]
                    },
                    {
                      "name": "NotCrossChainTransferableCurrency",
                      "index": 3,
                      "docs": [
                        "Currency is not cross-chain transferable."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "index": 4,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "XcmExecutionFailed",
                      "index": 5,
                      "docs": [
                        "XCM execution failed."
                      ]
                    },
                    {
                      "name": "CannotReanchor",
                      "index": 6,
                      "docs": [
                        "Could not re-anchor the assets to declare the fees for the",
                        "destination chain."
                      ]
                    },
                    {
                      "name": "InvalidAncestry",
                      "index": 7,
                      "docs": [
                        "Could not get ancestry of asset reserve location."
                      ]
                    },
                    {
                      "name": "InvalidAsset",
                      "index": 8,
                      "docs": [
                        "The MultiAsset is invalid."
                      ]
                    },
                    {
                      "name": "DestinationNotInvertible",
                      "index": 9,
                      "docs": [
                        "The destination `MultiLocation` provided cannot be inverted."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "index": 10,
                      "docs": [
                        "The version of the `Versioned` value used is not able to be",
                        "interpreted."
                      ]
                    },
                    {
                      "name": "DistinctReserveForAssetAndFee",
                      "index": 11,
                      "docs": [
                        "We tried sending distinct asset and fee but they have different",
                        "reserve chains."
                      ]
                    },
                    {
                      "name": "ZeroFee",
                      "index": 12,
                      "docs": [
                        "The fee is zero."
                      ]
                    },
                    {
                      "name": "ZeroAmount",
                      "index": 13,
                      "docs": [
                        "The transfering asset amount is zero."
                      ]
                    },
                    {
                      "name": "TooManyAssetsBeingSent",
                      "index": 14,
                      "docs": [
                        "The number of assets to be sent is over the maximum."
                      ]
                    },
                    {
                      "name": "AssetIndexNonExistent",
                      "index": 15,
                      "docs": [
                        "The specified index does not exist in a MultiAssets struct."
                      ]
                    },
                    {
                      "name": "FeeNotEnough",
                      "index": 16,
                      "docs": [
                        "Fee is not enough."
                      ]
                    },
                    {
                      "name": "NotSupportedMultiLocation",
                      "index": 17,
                      "docs": [
                        "Not supported MultiLocation"
                      ]
                    },
                    {
                      "name": "MinXcmFeeNotDefined",
                      "index": 18,
                      "docs": [
                        "MinXcmFee not registered for certain reserve location"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 572,
            "type": {
              "def": {
                "tuple": [
                  573,
                  577
                ]
              }
            }
          },
          {
            "id": 573,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Registration"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "MaxJudgements",
                  "type": null
                },
                {
                  "name": "IdentityInfo",
                  "type": 343
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "judgements",
                      "type": 574,
                      "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "info",
                      "type": 343,
                      "typeName": "IdentityInfo"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 574,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 575
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 576,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 575,
            "type": {
              "def": {
                "tuple": [
                  4,
                  378
                ]
              }
            }
          },
          {
            "id": 576,
            "type": {
              "def": {
                "sequence": {
                  "type": 575
                }
              }
            }
          },
          {
            "id": 577,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 126
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 126
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 578,
            "type": {
              "def": {
                "tuple": [
                  6,
                  579
                ]
              }
            }
          },
          {
            "id": 579,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 276,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 580,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 581
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 583,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 581,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 582
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 582
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 582,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "RegistrarInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "IdField",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "fields",
                      "type": 11,
                      "typeName": "IdField"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 583,
            "type": {
              "def": {
                "sequence": {
                  "type": 581
                }
              }
            }
          },
          {
            "id": 584,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "AuthorityProperties"
              ],
              "params": [
                {
                  "name": "Suffix",
                  "type": 585
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "suffix",
                      "type": 585,
                      "typeName": "Suffix"
                    },
                    {
                      "name": "allocation",
                      "type": 4,
                      "typeName": "Allocation"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 585,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 586,
            "type": {
              "def": {
                "tuple": [
                  0,
                  4
                ]
              }
            }
          },
          {
            "id": 587,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManySubAccounts",
                      "index": 0,
                      "docs": [
                        "Too many subs-accounts."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 1,
                      "docs": [
                        "Account isn't found."
                      ]
                    },
                    {
                      "name": "NotNamed",
                      "index": 2,
                      "docs": [
                        "Account isn't named."
                      ]
                    },
                    {
                      "name": "EmptyIndex",
                      "index": 3,
                      "docs": [
                        "Empty index."
                      ]
                    },
                    {
                      "name": "FeeChanged",
                      "index": 4,
                      "docs": [
                        "Fee is changed."
                      ]
                    },
                    {
                      "name": "NoIdentity",
                      "index": 5,
                      "docs": [
                        "No identity found."
                      ]
                    },
                    {
                      "name": "StickyJudgement",
                      "index": 6,
                      "docs": [
                        "Sticky judgement."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "index": 7,
                      "docs": [
                        "Judgement given."
                      ]
                    },
                    {
                      "name": "InvalidJudgement",
                      "index": 8,
                      "docs": [
                        "Invalid judgement."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "index": 9,
                      "docs": [
                        "The index is invalid."
                      ]
                    },
                    {
                      "name": "InvalidTarget",
                      "index": 10,
                      "docs": [
                        "The target is invalid."
                      ]
                    },
                    {
                      "name": "TooManyRegistrars",
                      "index": 11,
                      "docs": [
                        "Maximum amount of registrars reached. Cannot add any more."
                      ]
                    },
                    {
                      "name": "AlreadyClaimed",
                      "index": 12,
                      "docs": [
                        "Account ID is already named."
                      ]
                    },
                    {
                      "name": "NotSub",
                      "index": 13,
                      "docs": [
                        "Sender is not a sub-account."
                      ]
                    },
                    {
                      "name": "NotOwned",
                      "index": 14,
                      "docs": [
                        "Sub-account isn't owned by sender."
                      ]
                    },
                    {
                      "name": "JudgementForDifferentIdentity",
                      "index": 15,
                      "docs": [
                        "The provided judgement was for a different identity."
                      ]
                    },
                    {
                      "name": "JudgementPaymentFailed",
                      "index": 16,
                      "docs": [
                        "Error that occurs when there is an issue paying for judgement."
                      ]
                    },
                    {
                      "name": "InvalidSuffix",
                      "index": 17,
                      "docs": [
                        "The provided suffix is too long."
                      ]
                    },
                    {
                      "name": "NotUsernameAuthority",
                      "index": 18,
                      "docs": [
                        "The sender does not have permission to issue a username."
                      ]
                    },
                    {
                      "name": "NoAllocation",
                      "index": 19,
                      "docs": [
                        "The authority cannot allocate any more usernames."
                      ]
                    },
                    {
                      "name": "InvalidSignature",
                      "index": 20,
                      "docs": [
                        "The signature on a username was not valid."
                      ]
                    },
                    {
                      "name": "RequiresSignature",
                      "index": 21,
                      "docs": [
                        "Setting this username requires a signature, but none was provided."
                      ]
                    },
                    {
                      "name": "InvalidUsername",
                      "index": 22,
                      "docs": [
                        "The username does not meet the requirements."
                      ]
                    },
                    {
                      "name": "UsernameTaken",
                      "index": 23,
                      "docs": [
                        "The username is already taken."
                      ]
                    },
                    {
                      "name": "NoUsername",
                      "index": 24,
                      "docs": [
                        "The requested username does not exist."
                      ]
                    },
                    {
                      "name": "NotExpired",
                      "index": 25,
                      "docs": [
                        "The username cannot be forcefully removed because it can still be accepted."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 588,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 589,
            "type": {
              "path": [
                "pallet_contracts",
                "wasm",
                "CodeInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountIdOf<T>"
                    },
                    {
                      "name": "deposit",
                      "type": 70,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "refcount",
                      "type": 10,
                      "typeName": "u64"
                    },
                    {
                      "name": "determinism",
                      "type": 388,
                      "typeName": "Determinism"
                    },
                    {
                      "name": "code_len",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 590,
            "type": {
              "path": [
                "pallet_contracts",
                "storage",
                "ContractInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "trie_id",
                      "type": 431,
                      "typeName": "TrieId"
                    },
                    {
                      "name": "code_hash",
                      "type": 12,
                      "typeName": "CodeHash<T>"
                    },
                    {
                      "name": "storage_bytes",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "storage_items",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "storage_byte_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "storage_item_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "storage_base_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "delegate_dependencies",
                      "type": 591,
                      "typeName": "BoundedBTreeMap<CodeHash<T>, BalanceOf<T>, T::\nMaxDelegateDependencies>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 591,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 12
                },
                {
                  "name": "V",
                  "type": 6
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 592,
                      "typeName": "BTreeMap<K, V>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 592,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 12
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 593
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 593,
            "type": {
              "def": {
                "sequence": {
                  "type": 594
                }
              }
            }
          },
          {
            "id": 594,
            "type": {
              "def": {
                "tuple": [
                  12,
                  6
                ]
              }
            }
          },
          {
            "id": 595,
            "type": {
              "path": [
                "pallet_contracts",
                "storage",
                "DeletionQueueManager"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "insert_counter",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "delete_counter",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 596,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "Schedule"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "limits",
                      "type": 597,
                      "typeName": "Limits"
                    },
                    {
                      "name": "instruction_weights",
                      "type": 598,
                      "typeName": "InstructionWeights<T>"
                    },
                    {
                      "name": "host_fn_weights",
                      "type": 599,
                      "typeName": "HostFnWeights<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 597,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "Limits"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "event_topics",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "globals",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "locals",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "parameters",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "memory_pages",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "table_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "br_table_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "subject_len",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "payload_len",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "runtime_memory",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 598,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "InstructionWeights"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 599,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "HostFnWeights"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "caller",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "is_contract",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "code_hash",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "own_code_hash",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "caller_is_origin",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "caller_is_root",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "address",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "gas_left",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "balance",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "value_transferred",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "minimum_balance",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "block_number",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "now",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "weight_to_fee",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "input",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "input_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "r#return",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "return_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "terminate",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "random",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "deposit_event",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "deposit_event_per_topic",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "deposit_event_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "debug_message",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "debug_message_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "set_storage",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "set_storage_per_new_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "set_storage_per_old_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "set_code_hash",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "clear_storage",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "clear_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "contains_storage",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "contains_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "get_storage",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "get_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "take_storage",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "take_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "transfer",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "call",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "delegate_call",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "call_transfer_surcharge",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "call_per_cloned_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "instantiate",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "instantiate_transfer_surcharge",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "instantiate_per_input_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "instantiate_per_salt_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_sha2_256",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_sha2_256_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_keccak_256",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_keccak_256_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_blake2_256",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_blake2_256_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_blake2_128",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "hash_blake2_128_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "ecdsa_recover",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "ecdsa_to_eth_address",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "sr25519_verify",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "sr25519_verify_per_byte",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "reentrance_count",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "account_reentrance_count",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "instantiation_nonce",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "add_delegate_dependency",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "remove_delegate_dependency",
                      "type": 9,
                      "typeName": "Weight"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 600,
            "type": {
              "path": [
                "pallet_contracts",
                "Environment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account_id",
                      "type": 601,
                      "typeName": "EnvironmentType<AccountIdOf<T>>"
                    },
                    {
                      "name": "balance",
                      "type": 602,
                      "typeName": "EnvironmentType<BalanceOf<T>>"
                    },
                    {
                      "name": "hash",
                      "type": 603,
                      "typeName": "EnvironmentType<<T as frame_system::Config>::Hash>"
                    },
                    {
                      "name": "hasher",
                      "type": 604,
                      "typeName": "EnvironmentType<<T as frame_system::Config>::Hashing>"
                    },
                    {
                      "name": "timestamp",
                      "type": 605,
                      "typeName": "EnvironmentType<MomentOf<T>>"
                    },
                    {
                      "name": "block_number",
                      "type": 606,
                      "typeName": "EnvironmentType<BlockNumberFor<T>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 601,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 602,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 603,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 604,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 430
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 605,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 11
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 606,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 607,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSchedule",
                      "index": 0,
                      "docs": [
                        "Invalid schedule supplied, e.g. with zero weight of a basic operation."
                      ]
                    },
                    {
                      "name": "InvalidCallFlags",
                      "index": 1,
                      "docs": [
                        "Invalid combination of flags supplied to `seal_call` or `seal_delegate_call`."
                      ]
                    },
                    {
                      "name": "OutOfGas",
                      "index": 2,
                      "docs": [
                        "The executed contract exhausted its gas limit."
                      ]
                    },
                    {
                      "name": "OutputBufferTooSmall",
                      "index": 3,
                      "docs": [
                        "The output buffer supplied to a contract API call was too small."
                      ]
                    },
                    {
                      "name": "TransferFailed",
                      "index": 4,
                      "docs": [
                        "Performing the requested transfer failed. Probably because there isn't enough",
                        "free balance in the sender's account."
                      ]
                    },
                    {
                      "name": "MaxCallDepthReached",
                      "index": 5,
                      "docs": [
                        "Performing a call was denied because the calling depth reached the limit",
                        "of what is specified in the schedule."
                      ]
                    },
                    {
                      "name": "ContractNotFound",
                      "index": 6,
                      "docs": [
                        "No contract was found at the specified address."
                      ]
                    },
                    {
                      "name": "CodeTooLarge",
                      "index": 7,
                      "docs": [
                        "The code supplied to `instantiate_with_code` exceeds the limit specified in the",
                        "current schedule."
                      ]
                    },
                    {
                      "name": "CodeNotFound",
                      "index": 8,
                      "docs": [
                        "No code could be found at the supplied code hash."
                      ]
                    },
                    {
                      "name": "CodeInfoNotFound",
                      "index": 9,
                      "docs": [
                        "No code info could be found at the supplied code hash."
                      ]
                    },
                    {
                      "name": "OutOfBounds",
                      "index": 10,
                      "docs": [
                        "A buffer outside of sandbox memory was passed to a contract API function."
                      ]
                    },
                    {
                      "name": "DecodingFailed",
                      "index": 11,
                      "docs": [
                        "Input passed to a contract API function failed to decode as expected type."
                      ]
                    },
                    {
                      "name": "ContractTrapped",
                      "index": 12,
                      "docs": [
                        "Contract trapped during execution."
                      ]
                    },
                    {
                      "name": "ValueTooLarge",
                      "index": 13,
                      "docs": [
                        "The size defined in `T::MaxValueSize` was exceeded."
                      ]
                    },
                    {
                      "name": "TerminatedWhileReentrant",
                      "index": 14,
                      "docs": [
                        "Termination of a contract is not allowed while the contract is already",
                        "on the call stack. Can be triggered by `seal_terminate`."
                      ]
                    },
                    {
                      "name": "InputForwarded",
                      "index": 15,
                      "docs": [
                        "`seal_call` forwarded this contracts input. It therefore is no longer available."
                      ]
                    },
                    {
                      "name": "RandomSubjectTooLong",
                      "index": 16,
                      "docs": [
                        "The subject passed to `seal_random` exceeds the limit."
                      ]
                    },
                    {
                      "name": "TooManyTopics",
                      "index": 17,
                      "docs": [
                        "The amount of topics passed to `seal_deposit_events` exceeds the limit."
                      ]
                    },
                    {
                      "name": "NoChainExtension",
                      "index": 18,
                      "docs": [
                        "The chain does not provide a chain extension. Calling the chain extension results",
                        "in this error. Note that this usually  shouldn't happen as deploying such contracts",
                        "is rejected."
                      ]
                    },
                    {
                      "name": "XCMDecodeFailed",
                      "index": 19,
                      "docs": [
                        "Failed to decode the XCM program."
                      ]
                    },
                    {
                      "name": "DuplicateContract",
                      "index": 20,
                      "docs": [
                        "A contract with the same AccountId already exists."
                      ]
                    },
                    {
                      "name": "TerminatedInConstructor",
                      "index": 21,
                      "docs": [
                        "A contract self destructed in its constructor.",
                        "",
                        "This can be triggered by a call to `seal_terminate`."
                      ]
                    },
                    {
                      "name": "ReentranceDenied",
                      "index": 22,
                      "docs": [
                        "A call tried to invoke a contract that is flagged as non-reentrant.",
                        "The only other cause is that a call from a contract into the runtime tried to call back",
                        "into `pallet-contracts`. This would make the whole pallet reentrant with regard to",
                        "contract code execution which is not supported."
                      ]
                    },
                    {
                      "name": "StorageDepositNotEnoughFunds",
                      "index": 23,
                      "docs": [
                        "Origin doesn't have enough balance to pay the required storage deposits."
                      ]
                    },
                    {
                      "name": "StorageDepositLimitExhausted",
                      "index": 24,
                      "docs": [
                        "More storage was created than allowed by the storage deposit limit."
                      ]
                    },
                    {
                      "name": "CodeInUse",
                      "index": 25,
                      "docs": [
                        "Code removal was denied because the code is still in use by at least one contract."
                      ]
                    },
                    {
                      "name": "ContractReverted",
                      "index": 26,
                      "docs": [
                        "The contract ran to completion but decided to revert its storage changes.",
                        "Please note that this error is only returned from extrinsics. When called directly",
                        "or via RPC an `Ok` will be returned. In this case the caller needs to inspect the flags",
                        "to determine whether a reversion has taken place."
                      ]
                    },
                    {
                      "name": "CodeRejected",
                      "index": 27,
                      "docs": [
                        "The contract's code was found to be invalid during validation.",
                        "",
                        "The most likely cause of this is that an API was used which is not supported by the",
                        "node. This happens if an older node is used with a new version of ink!. Try updating",
                        "your node to the newest available version.",
                        "",
                        "A more detailed error can be found on the node console if debug messages are enabled",
                        "by supplying `-lruntime::contracts=debug`."
                      ]
                    },
                    {
                      "name": "Indeterministic",
                      "index": 28,
                      "docs": [
                        "An indetermistic code was used in a context where this is not permitted."
                      ]
                    },
                    {
                      "name": "MigrationInProgress",
                      "index": 29,
                      "docs": [
                        "A pending migration needs to complete before the extrinsic can be called."
                      ]
                    },
                    {
                      "name": "NoMigrationPerformed",
                      "index": 30,
                      "docs": [
                        "Migrate dispatch call was attempted but no migration was performed."
                      ]
                    },
                    {
                      "name": "MaxDelegateDependenciesReached",
                      "index": 31,
                      "docs": [
                        "The contract has reached its maximum number of delegate dependencies."
                      ]
                    },
                    {
                      "name": "DelegateDependencyNotFound",
                      "index": 32,
                      "docs": [
                        "The dependency was not found in the contract's delegate dependencies."
                      ]
                    },
                    {
                      "name": "DelegateDependencyAlreadyExists",
                      "index": 33,
                      "docs": [
                        "The contract already depends on the given delegate dependency."
                      ]
                    },
                    {
                      "name": "CannotAddSelfAsDelegateDependency",
                      "index": 34,
                      "docs": [
                        "Can not add a delegate dependency to the code hash of the contract itself."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 608,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 194,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 609,
            "type": {
              "path": [
                "dia_oracle",
                "dia",
                "AssetId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "blockchain",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "symbol",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 610,
            "type": {
              "path": [
                "dia_oracle",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoCoinInfoAvailable",
                      "index": 0,
                      "docs": [
                        "Error is returned if no information is available about given coin"
                      ]
                    },
                    {
                      "name": "ThisAccountIdIsNotAuthorized",
                      "index": 1,
                      "docs": [
                        "AccountId is not authorized"
                      ]
                    },
                    {
                      "name": "NoBatchingApiEndPoint",
                      "index": 2,
                      "docs": [
                        "Batching Api Endpoint not set."
                      ]
                    },
                    {
                      "name": "DeserializeStrError",
                      "index": 3,
                      "docs": [
                        "Failed Deserializing to str"
                      ]
                    },
                    {
                      "name": "DeserializeError",
                      "index": 4,
                      "docs": [
                        "Failed Deserializing"
                      ]
                    },
                    {
                      "name": "HttpRequestSendFailed",
                      "index": 5,
                      "docs": [
                        "Sending Http request to Batching Server Failed"
                      ]
                    },
                    {
                      "name": "HttpRequestFailed",
                      "index": 6,
                      "docs": [
                        "Http request to Batching Server Failed"
                      ]
                    },
                    {
                      "name": "FailedSignedTransaction",
                      "index": 7,
                      "docs": [
                        "Failed to send signed Transaction"
                      ]
                    },
                    {
                      "name": "UserUnableToDeauthorizeThemself",
                      "index": 8,
                      "docs": [
                        "User cannot deauthorized themself"
                      ]
                    },
                    {
                      "name": "BadOrigin",
                      "index": 9,
                      "docs": [
                        "BadOrigin"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 611,
            "type": {
              "def": {
                "tuple": [
                  136,
                  0
                ]
              }
            }
          },
          {
            "id": 612,
            "type": {
              "def": {
                "tuple": [
                  136,
                  136
                ]
              }
            }
          },
          {
            "id": 613,
            "type": {
              "path": [
                "primitive_types",
                "U256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 614,
                      "typeName": "[u64; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 614,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 11
                }
              }
            }
          },
          {
            "id": 615,
            "type": {
              "def": {
                "tuple": [
                  286,
                  2
                ]
              }
            }
          },
          {
            "id": 616,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 136
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 136
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 617,
            "type": {
              "path": [
                "zenlink_protocol",
                "primitives",
                "PairStatus"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Account",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Trading",
                      "fields": [
                        {
                          "type": 618,
                          "typeName": "PairMetadata<Balance, Account>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Bootstrap",
                      "fields": [
                        {
                          "type": 619,
                          "typeName": "BootstrapParameter<Balance, BlockNumber, Account>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Disable",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 618,
            "type": {
              "path": [
                "zenlink_protocol",
                "primitives",
                "PairMetadata"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Account",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pair_account",
                      "type": 0,
                      "typeName": "Account"
                    },
                    {
                      "name": "total_supply",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 619,
            "type": {
              "path": [
                "zenlink_protocol",
                "primitives",
                "BootstrapParameter"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Account",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_supply",
                      "type": 620,
                      "typeName": "(Balance, Balance)"
                    },
                    {
                      "name": "capacity_supply",
                      "type": 620,
                      "typeName": "(Balance, Balance)"
                    },
                    {
                      "name": "accumulated_supply",
                      "type": 620,
                      "typeName": "(Balance, Balance)"
                    },
                    {
                      "name": "end_block_number",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "pair_account",
                      "type": 0,
                      "typeName": "Account"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 620,
            "type": {
              "def": {
                "tuple": [
                  6,
                  6
                ]
              }
            }
          },
          {
            "id": 621,
            "type": {
              "def": {
                "tuple": [
                  612,
                  0
                ]
              }
            }
          },
          {
            "id": 622,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 136
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 140
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 623,
            "type": {
              "path": [
                "zenlink_protocol",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequireProtocolAdmin",
                      "index": 0,
                      "docs": [
                        "Require the admin who can reset the admin and receiver of the protocol fee."
                      ]
                    },
                    {
                      "name": "RequireProtocolAdminCandidate",
                      "index": 1,
                      "docs": [
                        "Require the admin candidate who can become new admin after confirm."
                      ]
                    },
                    {
                      "name": "InvalidFeePoint",
                      "index": 2,
                      "docs": [
                        "Invalid fee_point"
                      ]
                    },
                    {
                      "name": "UnsupportedAssetType",
                      "index": 3,
                      "docs": [
                        "Unsupported AssetId by this ZenlinkProtocol Version."
                      ]
                    },
                    {
                      "name": "InsufficientAssetBalance",
                      "index": 4,
                      "docs": [
                        "Account balance must be greater than or equal to the transfer amount."
                      ]
                    },
                    {
                      "name": "NativeBalanceTooLow",
                      "index": 5,
                      "docs": [
                        "Account native currency balance must be greater than ExistentialDeposit."
                      ]
                    },
                    {
                      "name": "DeniedCreatePair",
                      "index": 6,
                      "docs": [
                        "Trading pair can't be created."
                      ]
                    },
                    {
                      "name": "PairAlreadyExists",
                      "index": 7,
                      "docs": [
                        "Trading pair already exists."
                      ]
                    },
                    {
                      "name": "PairNotExists",
                      "index": 8,
                      "docs": [
                        "Trading pair does not exist."
                      ]
                    },
                    {
                      "name": "AssetNotExists",
                      "index": 9,
                      "docs": [
                        "Asset does not exist."
                      ]
                    },
                    {
                      "name": "InsufficientLiquidity",
                      "index": 10,
                      "docs": [
                        "Liquidity is not enough."
                      ]
                    },
                    {
                      "name": "InsufficientPairReserve",
                      "index": 11,
                      "docs": [
                        "Trading pair does have enough foreign."
                      ]
                    },
                    {
                      "name": "InsufficientTargetAmount",
                      "index": 12,
                      "docs": [
                        "Get target amount is less than exception."
                      ]
                    },
                    {
                      "name": "ExcessiveSoldAmount",
                      "index": 13,
                      "docs": [
                        "Sold amount is more than exception."
                      ]
                    },
                    {
                      "name": "InvalidPath",
                      "index": 14,
                      "docs": [
                        "Can't find pair though trading path."
                      ]
                    },
                    {
                      "name": "IncorrectAssetAmountRange",
                      "index": 15,
                      "docs": [
                        "Incorrect foreign amount range."
                      ]
                    },
                    {
                      "name": "Overflow",
                      "index": 16,
                      "docs": [
                        "Overflow."
                      ]
                    },
                    {
                      "name": "Deadline",
                      "index": 17,
                      "docs": [
                        "Transaction block number is larger than the end block number."
                      ]
                    },
                    {
                      "name": "AccountIdBadLocation",
                      "index": 18,
                      "docs": [
                        "Location given was invalid or unsupported."
                      ]
                    },
                    {
                      "name": "ExecutionFailed",
                      "index": 19,
                      "docs": [
                        "XCM execution failed."
                      ]
                    },
                    {
                      "name": "DeniedTransferToSelf",
                      "index": 20,
                      "docs": [
                        "Transfer to self by XCM message."
                      ]
                    },
                    {
                      "name": "TargetChainNotRegistered",
                      "index": 21,
                      "docs": [
                        "Not in ZenlinkRegistedParaChains."
                      ]
                    },
                    {
                      "name": "InvariantCheckFailed",
                      "index": 22,
                      "docs": [
                        "Can't pass the K value check"
                      ]
                    },
                    {
                      "name": "PairCreateForbidden",
                      "index": 23,
                      "docs": [
                        "Created pair can't create now"
                      ]
                    },
                    {
                      "name": "NotInBootstrap",
                      "index": 24,
                      "docs": [
                        "Pair is not in bootstrap"
                      ]
                    },
                    {
                      "name": "InvalidContributionAmount",
                      "index": 25,
                      "docs": [
                        "Amount of contribution is invalid."
                      ]
                    },
                    {
                      "name": "UnqualifiedBootstrap",
                      "index": 26,
                      "docs": [
                        "Amount of contribution is invalid."
                      ]
                    },
                    {
                      "name": "ZeroContribute",
                      "index": 27,
                      "docs": [
                        "Zero contribute in bootstrap"
                      ]
                    },
                    {
                      "name": "DenyRefund",
                      "index": 28,
                      "docs": [
                        "Bootstrap deny refund"
                      ]
                    },
                    {
                      "name": "DisableBootstrap",
                      "index": 29,
                      "docs": [
                        "Bootstrap is disable"
                      ]
                    },
                    {
                      "name": "NotQualifiedAccount",
                      "index": 30,
                      "docs": [
                        "Not eligible to contribute"
                      ]
                    },
                    {
                      "name": "NoRewardTokens",
                      "index": 31,
                      "docs": [
                        "Reward of bootstrap is not set."
                      ]
                    },
                    {
                      "name": "ChargeRewardParamsError",
                      "index": 32,
                      "docs": [
                        "Charge bootstrap extrinsic args has error,"
                      ]
                    },
                    {
                      "name": "ExistRewardsInBootstrap",
                      "index": 33,
                      "docs": [
                        "Exist some reward in bootstrap,"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 624,
            "type": {
              "path": [
                "currency",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetConversionError",
                      "index": 0
                    },
                    {
                      "name": "BalanceConversionError",
                      "index": 1
                    },
                    {
                      "name": "CompatibleRoundingFailed",
                      "index": 2
                    },
                    {
                      "name": "IncompatibleAmount",
                      "index": 3
                    },
                    {
                      "name": "InvalidCurrency",
                      "index": 4
                    },
                    {
                      "name": "TryIntoIntError",
                      "index": 5
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 625,
            "type": {
              "path": [
                "fee",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TryIntoIntError",
                      "index": 0,
                      "docs": [
                        "Unable to convert value."
                      ]
                    },
                    {
                      "name": "AboveMaxExpectedValue",
                      "index": 1,
                      "docs": [
                        "Value exceeds the expected upper bound for storage fields in this pallet."
                      ]
                    },
                    {
                      "name": "Overflow",
                      "index": 2
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 626,
            "type": {
              "path": [
                "spacewalk_primitives",
                "issue",
                "IssueRequest"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "CurrencyId",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "vault",
                      "type": 143,
                      "typeName": "VaultId<AccountId, CurrencyId>"
                    },
                    {
                      "name": "opentime",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "period",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "griefing_collateral",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "asset",
                      "type": 121,
                      "typeName": "CurrencyId"
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "requester",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "stellar_address",
                      "type": 1,
                      "typeName": "StellarPublicKeyRaw"
                    },
                    {
                      "name": "status",
                      "type": 627,
                      "typeName": "IssueRequestStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 627,
            "type": {
              "path": [
                "spacewalk_primitives",
                "issue",
                "IssueRequestStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "index": 0
                    },
                    {
                      "name": "Completed",
                      "index": 1
                    },
                    {
                      "name": "Cancelled",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 628,
            "type": {
              "path": [
                "issue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IssueIdNotFound",
                      "index": 0,
                      "docs": [
                        "Issue request not found."
                      ]
                    },
                    {
                      "name": "TimeNotExpired",
                      "index": 1,
                      "docs": [
                        "Issue request has not expired."
                      ]
                    },
                    {
                      "name": "IssueCompleted",
                      "index": 2,
                      "docs": [
                        "Issue request already completed."
                      ]
                    },
                    {
                      "name": "IssueCancelled",
                      "index": 3,
                      "docs": [
                        "Issue request already cancelled."
                      ]
                    },
                    {
                      "name": "VaultNotAcceptingNewIssues",
                      "index": 4,
                      "docs": [
                        "Vault is not active."
                      ]
                    },
                    {
                      "name": "InvalidExecutor",
                      "index": 5,
                      "docs": [
                        "Not expected origin."
                      ]
                    },
                    {
                      "name": "AmountBelowMinimumTransferAmount",
                      "index": 6,
                      "docs": [
                        "Issue amount is too small."
                      ]
                    },
                    {
                      "name": "ExceedLimitVolumeForIssueRequest",
                      "index": 7,
                      "docs": [
                        "Exceeds the volume limit for an issue request."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 629,
            "type": {
              "path": [
                "nomination",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VaultAlreadyOptedInToNomination",
                      "index": 0,
                      "docs": [
                        "Vault has already enabled nomination."
                      ]
                    },
                    {
                      "name": "VaultNotOptedInToNomination",
                      "index": 1,
                      "docs": [
                        "Vault has not enabled nomination."
                      ]
                    },
                    {
                      "name": "VaultNotFound",
                      "index": 2,
                      "docs": [
                        "Vault not found."
                      ]
                    },
                    {
                      "name": "CannotWithdrawCollateral",
                      "index": 3,
                      "docs": [
                        "Account cannot withdraw."
                      ]
                    },
                    {
                      "name": "VaultNominationDisabled",
                      "index": 4,
                      "docs": [
                        "Nomination is not enabled."
                      ]
                    },
                    {
                      "name": "DepositViolatesMaxNominationRatio",
                      "index": 5,
                      "docs": [
                        "Nomination would overburden Vault."
                      ]
                    },
                    {
                      "name": "CollateralizationTooLow",
                      "index": 6,
                      "docs": [
                        "Vault cannot withdraw."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 630,
            "type": {
              "path": [
                "oracle",
                "types",
                "Version"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 631,
            "type": {
              "path": [
                "oracle",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidOracleSource",
                      "index": 0,
                      "docs": [
                        "Not authorized to set exchange rate"
                      ]
                    },
                    {
                      "name": "MissingExchangeRate",
                      "index": 1,
                      "docs": [
                        "Exchange rate not specified or has expired"
                      ]
                    },
                    {
                      "name": "TryIntoIntError",
                      "index": 2,
                      "docs": [
                        "Unable to convert value"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 632,
            "type": {
              "path": [
                "spacewalk_primitives",
                "redeem",
                "RedeemRequest"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "CurrencyId",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "vault",
                      "type": 143,
                      "typeName": "VaultId<AccountId, CurrencyId>"
                    },
                    {
                      "name": "opentime",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "period",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "transfer_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "asset",
                      "type": 121,
                      "typeName": "CurrencyId"
                    },
                    {
                      "name": "premium",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "redeemer",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "stellar_address",
                      "type": 1,
                      "typeName": "StellarPublicKeyRaw"
                    },
                    {
                      "name": "status",
                      "type": 154,
                      "typeName": "RedeemRequestStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 633,
            "type": {
              "def": {
                "tuple": [
                  6,
                  121
                ]
              }
            }
          },
          {
            "id": 634,
            "type": {
              "path": [
                "redeem",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AmountExceedsUserBalance",
                      "index": 0,
                      "docs": [
                        "Account has insufficient balance."
                      ]
                    },
                    {
                      "name": "UnauthorizedRedeemer",
                      "index": 1,
                      "docs": [
                        "Unexpected redeem account."
                      ]
                    },
                    {
                      "name": "UnauthorizedVault",
                      "index": 2,
                      "docs": [
                        "Unexpected vault account."
                      ]
                    },
                    {
                      "name": "TimeNotExpired",
                      "index": 3,
                      "docs": [
                        "Redeem request has not expired."
                      ]
                    },
                    {
                      "name": "RedeemCancelled",
                      "index": 4,
                      "docs": [
                        "Redeem request already cancelled."
                      ]
                    },
                    {
                      "name": "RedeemCompleted",
                      "index": 5,
                      "docs": [
                        "Redeem request already completed."
                      ]
                    },
                    {
                      "name": "RedeemIdNotFound",
                      "index": 6,
                      "docs": [
                        "Redeem request not found."
                      ]
                    },
                    {
                      "name": "TryIntoIntError",
                      "index": 7,
                      "docs": [
                        "Unable to convert value."
                      ]
                    },
                    {
                      "name": "AmountBelowMinimumTransferAmount",
                      "index": 8,
                      "docs": [
                        "Redeem amount is too small."
                      ]
                    },
                    {
                      "name": "ExceedLimitVolumeForRedeemRequest",
                      "index": 9,
                      "docs": [
                        "Exceeds the volume limit for a redeem request."
                      ]
                    },
                    {
                      "name": "InvalidPaymentAmount",
                      "index": 10,
                      "docs": [
                        "Invalid payment amount"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 635,
            "type": {
              "path": [
                "spacewalk_primitives",
                "replace",
                "ReplaceRequest"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "CurrencyId",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "old_vault",
                      "type": 143,
                      "typeName": "VaultId<AccountId, CurrencyId>"
                    },
                    {
                      "name": "new_vault",
                      "type": 143,
                      "typeName": "VaultId<AccountId, CurrencyId>"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "asset",
                      "type": 121,
                      "typeName": "CurrencyId"
                    },
                    {
                      "name": "griefing_collateral",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "collateral",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "accept_time",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "period",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "stellar_address",
                      "type": 1,
                      "typeName": "StellarPublicKeyRaw"
                    },
                    {
                      "name": "status",
                      "type": 636,
                      "typeName": "ReplaceRequestStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 636,
            "type": {
              "path": [
                "spacewalk_primitives",
                "replace",
                "ReplaceRequestStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "index": 0
                    },
                    {
                      "name": "Completed",
                      "index": 1
                    },
                    {
                      "name": "Cancelled",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 637,
            "type": {
              "path": [
                "replace",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ReplaceAmountZero",
                      "index": 0,
                      "docs": [
                        "Replace requires non-zero increase."
                      ]
                    },
                    {
                      "name": "AmountBelowDustAmount",
                      "index": 1,
                      "docs": [
                        "Replace amount is too small."
                      ]
                    },
                    {
                      "name": "NoPendingRequest",
                      "index": 2,
                      "docs": [
                        "No replace request found."
                      ]
                    },
                    {
                      "name": "UnauthorizedVault",
                      "index": 3,
                      "docs": [
                        "Unexpected vault account."
                      ]
                    },
                    {
                      "name": "ReplaceSelfNotAllowed",
                      "index": 4,
                      "docs": [
                        "Cannot replace self."
                      ]
                    },
                    {
                      "name": "VaultHasEnabledNomination",
                      "index": 5,
                      "docs": [
                        "Cannot replace with nominated collateral."
                      ]
                    },
                    {
                      "name": "ReplacePeriodNotExpired",
                      "index": 6,
                      "docs": [
                        "Replace request has not expired."
                      ]
                    },
                    {
                      "name": "ReplaceCompleted",
                      "index": 7,
                      "docs": [
                        "Replace request already completed."
                      ]
                    },
                    {
                      "name": "ReplaceCancelled",
                      "index": 8,
                      "docs": [
                        "Replace request already cancelled."
                      ]
                    },
                    {
                      "name": "ReplaceIdNotFound",
                      "index": 9,
                      "docs": [
                        "Replace request not found."
                      ]
                    },
                    {
                      "name": "InvalidWrappedCurrency",
                      "index": 10,
                      "docs": [
                        "Vault cannot replace different currency."
                      ]
                    },
                    {
                      "name": "InvalidPaymentAmount",
                      "index": 11,
                      "docs": [
                        "Invalid payment amount"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 638,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 159
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 158
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 639,
            "type": {
              "path": [
                "security",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParachainNotRunning",
                      "index": 0,
                      "docs": [
                        "Parachain is not running."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 640,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 404
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 403,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 641,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 401
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 400,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 642,
            "type": {
              "path": [
                "stellar_relay",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Base64DecodeError",
                      "index": 0
                    },
                    {
                      "name": "BoundedVecCreationFailed",
                      "index": 1
                    },
                    {
                      "name": "DuplicateOrganizationId",
                      "index": 2
                    },
                    {
                      "name": "DuplicateValidatorPublicKey",
                      "index": 3
                    },
                    {
                      "name": "EmptyEnvelopeSet",
                      "index": 4
                    },
                    {
                      "name": "EnvelopeSlotIndexMismatch",
                      "index": 5
                    },
                    {
                      "name": "ExternalizedNHMismatch",
                      "index": 6
                    },
                    {
                      "name": "ExternalizedValueMismatch",
                      "index": 7
                    },
                    {
                      "name": "FailedToComputeNonGenericTxSetContentHash",
                      "index": 8
                    },
                    {
                      "name": "InvalidEnvelopeSignature",
                      "index": 9
                    },
                    {
                      "name": "InvalidQuorumSetNotEnoughOrganizations",
                      "index": 10
                    },
                    {
                      "name": "InvalidQuorumSetNotEnoughValidators",
                      "index": 11
                    },
                    {
                      "name": "InvalidScpPledge",
                      "index": 12
                    },
                    {
                      "name": "InvalidTransactionSetPrefix",
                      "index": 13
                    },
                    {
                      "name": "InvalidXDR",
                      "index": 14
                    },
                    {
                      "name": "MissingExternalizedMessage",
                      "index": 15
                    },
                    {
                      "name": "NoOrganizationsRegistered",
                      "index": 16
                    },
                    {
                      "name": "NoValidatorsRegistered",
                      "index": 17
                    },
                    {
                      "name": "OrganizationLimitExceeded",
                      "index": 18
                    },
                    {
                      "name": "SlotIndexIsNone",
                      "index": 19
                    },
                    {
                      "name": "TransactionMemoDoesNotMatch",
                      "index": 20
                    },
                    {
                      "name": "TransactionNotInTransactionSet",
                      "index": 21
                    },
                    {
                      "name": "TransactionSetHashCreationFailed",
                      "index": 22
                    },
                    {
                      "name": "TransactionSetHashMismatch",
                      "index": 23
                    },
                    {
                      "name": "ValidatorLimitExceeded",
                      "index": 24
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 643,
            "type": {
              "path": [
                "vault_registry",
                "types",
                "SystemVault"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "CurrencyId",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "to_be_issued_tokens",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "issued_tokens",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "to_be_redeemed_tokens",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "collateral",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "currency_pair",
                      "type": 144,
                      "typeName": "VaultCurrencyPair<CurrencyId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 644,
            "type": {
              "path": [
                "vault_registry",
                "types",
                "Vault"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "CurrencyId",
                  "type": 121
                },
                {
                  "name": "UnsignedFixedPoint",
                  "type": 151
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 143,
                      "typeName": "VaultId<AccountId, CurrencyId>"
                    },
                    {
                      "name": "status",
                      "type": 162,
                      "typeName": "VaultStatus"
                    },
                    {
                      "name": "banned_until",
                      "type": 225,
                      "typeName": "Option<BlockNumber>"
                    },
                    {
                      "name": "secure_collateral_threshold",
                      "type": 406,
                      "typeName": "Option<UnsignedFixedPoint>"
                    },
                    {
                      "name": "to_be_issued_tokens",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "issued_tokens",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "to_be_redeemed_tokens",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "to_be_replaced_tokens",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "replace_collateral",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "active_replace_collateral",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "liquidated_collateral",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 645,
            "type": {
              "path": [
                "vault_registry",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientCollateral",
                      "index": 0,
                      "docs": [
                        "Not enough free collateral available."
                      ]
                    },
                    {
                      "name": "ExceedingVaultLimit",
                      "index": 1,
                      "docs": [
                        "The amount of tokens to be issued is higher than the issuable amount by the vault"
                      ]
                    },
                    {
                      "name": "InsufficientTokensCommitted",
                      "index": 2,
                      "docs": [
                        "The requested amount of tokens exceeds the amount available to this vault."
                      ]
                    },
                    {
                      "name": "VaultBanned",
                      "index": 3,
                      "docs": [
                        "Action not allowed on banned vault."
                      ]
                    },
                    {
                      "name": "InsufficientVaultCollateralAmount",
                      "index": 4,
                      "docs": [
                        "The provided collateral was insufficient - it must be above ``MinimumCollateralVault``."
                      ]
                    },
                    {
                      "name": "VaultAlreadyRegistered",
                      "index": 5,
                      "docs": [
                        "Returned if a vault tries to register while already being registered"
                      ]
                    },
                    {
                      "name": "VaultNotFound",
                      "index": 6,
                      "docs": [
                        "The specified vault does not exist."
                      ]
                    },
                    {
                      "name": "VaultNotBelowLiquidationThreshold",
                      "index": 7,
                      "docs": [
                        "Attempted to liquidate a vault that is not undercollateralized."
                      ]
                    },
                    {
                      "name": "InvalidPublicKey",
                      "index": 8,
                      "docs": [
                        "Deposit address could not be generated with the given public key."
                      ]
                    },
                    {
                      "name": "MaxNominationRatioViolation",
                      "index": 9,
                      "docs": [
                        "The Max Nomination Ratio would be exceeded."
                      ]
                    },
                    {
                      "name": "CurrencyCeilingExceeded",
                      "index": 10,
                      "docs": [
                        "The collateral ceiling would be exceeded for the vault's currency."
                      ]
                    },
                    {
                      "name": "VaultLiquidated",
                      "index": 11,
                      "docs": [
                        "Vault is no longer usable as it was liquidated due to undercollateralization."
                      ]
                    },
                    {
                      "name": "VaultNotRecoverable",
                      "index": 12,
                      "docs": [
                        "Vault must be liquidated."
                      ]
                    },
                    {
                      "name": "NoStellarPublicKey",
                      "index": 13,
                      "docs": [
                        "No Stellar public key is registered for the vault."
                      ]
                    },
                    {
                      "name": "PublicKeyAlreadyRegistered",
                      "index": 14,
                      "docs": [
                        "A Stellar public key was already registered for this account."
                      ]
                    },
                    {
                      "name": "NoTokensIssued",
                      "index": 15,
                      "docs": [
                        "Collateralization is infinite if no tokens are issued"
                      ]
                    },
                    {
                      "name": "NoVaultWithSufficientCollateral",
                      "index": 16
                    },
                    {
                      "name": "NoVaultWithSufficientTokens",
                      "index": 17
                    },
                    {
                      "name": "NoVaultUnderThePremiumRedeemThreshold",
                      "index": 18
                    },
                    {
                      "name": "InvalidCurrency",
                      "index": 19,
                      "docs": [
                        "Failed attempt to modify vault's collateral because it was in the wrong currency"
                      ]
                    },
                    {
                      "name": "GlobalThresholdNotSet",
                      "index": 20,
                      "docs": [
                        "Threshold was not found for the given currency"
                      ]
                    },
                    {
                      "name": "LiquidationCollateralThresholdNotSet",
                      "index": 21,
                      "docs": [
                        "Threshold was not found for the given currency"
                      ]
                    },
                    {
                      "name": "PremiumRedeemThresholdNotSet",
                      "index": 22,
                      "docs": [
                        "Threshold was not found for the given currency"
                      ]
                    },
                    {
                      "name": "SecureCollateralThresholdNotSet",
                      "index": 23,
                      "docs": [
                        "Threshold was not found for the given currency"
                      ]
                    },
                    {
                      "name": "CeilingNotSet",
                      "index": 24,
                      "docs": [
                        "Ceiling was not found for the given currency"
                      ]
                    },
                    {
                      "name": "ThresholdNotAboveGlobalThreshold",
                      "index": 25,
                      "docs": [
                        "Vault attempted to set secure threshold below the global secure threshold"
                      ]
                    },
                    {
                      "name": "TryIntoIntError",
                      "index": 26,
                      "docs": [
                        "Unable to convert value"
                      ]
                    },
                    {
                      "name": "VaultNotAcceptingIssueRequests",
                      "index": 27,
                      "docs": [
                        "Vault is not accepting new issue requests."
                      ]
                    },
                    {
                      "name": "MinimumCollateralNotSet",
                      "index": 28
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 646,
            "type": {
              "def": {
                "tuple": [
                  121,
                  121
                ]
              }
            }
          },
          {
            "id": 647,
            "type": {
              "def": {
                "tuple": [
                  121,
                  143
                ]
              }
            }
          },
          {
            "id": 648,
            "type": {
              "def": {
                "tuple": [
                  121,
                  647
                ]
              }
            }
          },
          {
            "id": 649,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_set",
                "BoundedBTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 121
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 650,
                      "typeName": "BTreeSet<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 650,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 172
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 651,
            "type": {
              "path": [
                "pooled_rewards",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TryIntoIntError",
                      "index": 0,
                      "docs": [
                        "Unable to convert value."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "index": 1,
                      "docs": [
                        "Balance not sufficient to withdraw stake."
                      ]
                    },
                    {
                      "name": "ZeroTotalStake",
                      "index": 2,
                      "docs": [
                        "Cannot distribute rewards without stake."
                      ]
                    },
                    {
                      "name": "MaxRewardCurrencies",
                      "index": 3,
                      "docs": [
                        "Maximum rewards currencies reached."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 652,
            "type": {
              "def": {
                "tuple": [
                  4,
                  143
                ]
              }
            }
          },
          {
            "id": 653,
            "type": {
              "def": {
                "tuple": [
                  121,
                  652
                ]
              }
            }
          },
          {
            "id": 654,
            "type": {
              "def": {
                "tuple": [
                  4,
                  655
                ]
              }
            }
          },
          {
            "id": 655,
            "type": {
              "def": {
                "tuple": [
                  143,
                  0
                ]
              }
            }
          },
          {
            "id": 656,
            "type": {
              "def": {
                "tuple": [
                  121,
                  657
                ]
              }
            }
          },
          {
            "id": 657,
            "type": {
              "def": {
                "tuple": [
                  4,
                  143,
                  0
                ]
              }
            }
          },
          {
            "id": 658,
            "type": {
              "path": [
                "staking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TryIntoIntError",
                      "index": 0,
                      "docs": [
                        "Unable to convert value."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "index": 1,
                      "docs": [
                        "Balance not sufficient to withdraw stake."
                      ]
                    },
                    {
                      "name": "SlashZeroTotalStake",
                      "index": 2,
                      "docs": [
                        "Cannot slash zero total stake."
                      ]
                    },
                    {
                      "name": "MaxRewardCurrencies",
                      "index": 3,
                      "docs": [
                        "Max rewards currencies threshold"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 659,
            "type": {
              "path": [
                "clients_info",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ThisAccountIdIsNotAuthorized",
                      "index": 0
                    },
                    {
                      "name": "UserUnableToDeauthorizeThemself",
                      "index": 1
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 660,
            "type": {
              "path": [
                "reward_distribution",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "index": 0,
                      "docs": [
                        "Overflow"
                      ]
                    },
                    {
                      "name": "Underflow",
                      "index": 1,
                      "docs": [
                        "Underflow"
                      ]
                    },
                    {
                      "name": "NoRewardsForAccount",
                      "index": 2,
                      "docs": [
                        "Origin attempt to withdraw with 0 rewards"
                      ]
                    },
                    {
                      "name": "NotEnoughRewardsRegistered",
                      "index": 3,
                      "docs": [
                        "Amount to be minted is more than total rewarded"
                      ]
                    },
                    {
                      "name": "InconsistentRewardCurrencies",
                      "index": 4,
                      "docs": [
                        "If distribution logic reaches an inconsistency with the amount of currencies in the",
                        "system"
                      ]
                    },
                    {
                      "name": "CollectAmountTooSmall",
                      "index": 5,
                      "docs": [
                        "If the amount to collect is less than existential deposit"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 661,
            "type": {
              "def": {
                "tuple": [
                  121,
                  0,
                  0
                ]
              }
            }
          },
          {
            "id": 662,
            "type": {
              "path": [
                "orml_currencies_allowance_extension",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unapproved",
                      "index": 0
                    },
                    {
                      "name": "CurrencyNotLive",
                      "index": 1
                    },
                    {
                      "name": "ExceedsNumberOfAllowedCurrencies",
                      "index": 2
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 663,
            "type": {
              "path": [
                "treasury_buyout_extension",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StorageClearingFailure",
                      "index": 0,
                      "docs": [
                        "Storage clearing of `AllowedCurrencies` failed"
                      ]
                    },
                    {
                      "name": "NativeTokenNotAllowed",
                      "index": 1,
                      "docs": [
                        "Attempt to add native token to allowed assets"
                      ]
                    },
                    {
                      "name": "ExceedsNumberOfAllowedCurrencies",
                      "index": 2,
                      "docs": [
                        "Exceeds number of allowed currencies for buyout"
                      ]
                    },
                    {
                      "name": "WrongAssetToBuyout",
                      "index": 3,
                      "docs": [
                        "Attempt to exchange native token to native token"
                      ]
                    },
                    {
                      "name": "BuyoutLimitExceeded",
                      "index": 4,
                      "docs": [
                        "Buyout limit exceeded for the current period"
                      ]
                    },
                    {
                      "name": "NoPrice",
                      "index": 5,
                      "docs": [
                        "One of transacted currencies is missing price information"
                      ]
                    },
                    {
                      "name": "InsufficientTreasuryBalance",
                      "index": 6,
                      "docs": [
                        "The treasury balance is too low for an operation"
                      ]
                    },
                    {
                      "name": "InsufficientAccountBalance",
                      "index": 7,
                      "docs": [
                        "The account balance is too low for an operation"
                      ]
                    },
                    {
                      "name": "LessThanMinBuyoutAmount",
                      "index": 8,
                      "docs": [
                        "Less than minimum amoount allowed for buyout"
                      ]
                    },
                    {
                      "name": "BuyoutWithTreasuryAccount",
                      "index": 9,
                      "docs": [
                        "Attempt to use treasury account for buyout"
                      ]
                    },
                    {
                      "name": "ExchangeFailure",
                      "index": 10,
                      "docs": [
                        "Exchange failed"
                      ]
                    },
                    {
                      "name": "DecimalsConversionError",
                      "index": 11,
                      "docs": [
                        "Decimals conversion error"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 664,
            "type": {
              "path": [
                "bifrost_farming",
                "rewards",
                "PoolInfo"
              ],
              "params": [
                {
                  "name": "BalanceOf",
                  "type": 6
                },
                {
                  "name": "CurrencyIdOf",
                  "type": 121
                },
                {
                  "name": "AccountIdOf",
                  "type": 0
                },
                {
                  "name": "BlockNumberFor",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "tokens_proportion",
                      "type": 665,
                      "typeName": "BTreeMap<CurrencyIdOf, Perbill>"
                    },
                    {
                      "name": "basic_token",
                      "type": 416,
                      "typeName": "(CurrencyIdOf, Perbill)"
                    },
                    {
                      "name": "total_shares",
                      "type": 6,
                      "typeName": "BalanceOf"
                    },
                    {
                      "name": "basic_rewards",
                      "type": 666,
                      "typeName": "BTreeMap<CurrencyIdOf, BalanceOf>"
                    },
                    {
                      "name": "rewards",
                      "type": 667,
                      "typeName": "BTreeMap<CurrencyIdOf, (BalanceOf, BalanceOf)>"
                    },
                    {
                      "name": "state",
                      "type": 670,
                      "typeName": "PoolState"
                    },
                    {
                      "name": "keeper",
                      "type": 0,
                      "typeName": "AccountIdOf"
                    },
                    {
                      "name": "reward_issuer",
                      "type": 0,
                      "typeName": "AccountIdOf"
                    },
                    {
                      "name": "gauge",
                      "type": 225,
                      "typeName": "Option<PoolId>"
                    },
                    {
                      "name": "block_startup",
                      "type": 225,
                      "typeName": "Option<BlockNumberFor>"
                    },
                    {
                      "name": "min_deposit_to_start",
                      "type": 6,
                      "typeName": "BalanceOf"
                    },
                    {
                      "name": "after_block_to_start",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "withdraw_limit_time",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "claim_limit_time",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "withdraw_limit_count",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 665,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 121
                },
                {
                  "name": "V",
                  "type": 417
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 415
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 666,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 121
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 175
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 667,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 121
                },
                {
                  "name": "V",
                  "type": 620
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 668
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 668,
            "type": {
              "def": {
                "sequence": {
                  "type": 669
                }
              }
            }
          },
          {
            "id": 669,
            "type": {
              "def": {
                "tuple": [
                  121,
                  620
                ]
              }
            }
          },
          {
            "id": 670,
            "type": {
              "path": [
                "bifrost_farming",
                "rewards",
                "PoolState"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnCharged",
                      "index": 0
                    },
                    {
                      "name": "Charged",
                      "index": 1
                    },
                    {
                      "name": "Ongoing",
                      "index": 2
                    },
                    {
                      "name": "Dead",
                      "index": 3
                    },
                    {
                      "name": "Retired",
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 671,
            "type": {
              "path": [
                "bifrost_farming",
                "gauge",
                "GaugePoolInfo"
              ],
              "params": [
                {
                  "name": "BalanceOf",
                  "type": 6
                },
                {
                  "name": "CurrencyIdOf",
                  "type": 121
                },
                {
                  "name": "AccountIdOf",
                  "type": 0
                },
                {
                  "name": "BlockNumberFor",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pid",
                      "type": 4,
                      "typeName": "PoolId"
                    },
                    {
                      "name": "token",
                      "type": 121,
                      "typeName": "CurrencyIdOf"
                    },
                    {
                      "name": "keeper",
                      "type": 0,
                      "typeName": "AccountIdOf"
                    },
                    {
                      "name": "reward_issuer",
                      "type": 0,
                      "typeName": "AccountIdOf"
                    },
                    {
                      "name": "rewards",
                      "type": 672,
                      "typeName": "BTreeMap<CurrencyIdOf, (BalanceOf, BalanceOf, BalanceOf)>"
                    },
                    {
                      "name": "gauge_basic_rewards",
                      "type": 666,
                      "typeName": "BTreeMap<CurrencyIdOf, BalanceOf>"
                    },
                    {
                      "name": "max_block",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "gauge_amount",
                      "type": 6,
                      "typeName": "BalanceOf"
                    },
                    {
                      "name": "total_time_factor",
                      "type": 6,
                      "typeName": "u128"
                    },
                    {
                      "name": "gauge_state",
                      "type": 676,
                      "typeName": "GaugeState"
                    },
                    {
                      "name": "gauge_last_block",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 672,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 121
                },
                {
                  "name": "V",
                  "type": 673
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 674
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 673,
            "type": {
              "def": {
                "tuple": [
                  6,
                  6,
                  6
                ]
              }
            }
          },
          {
            "id": 674,
            "type": {
              "def": {
                "sequence": {
                  "type": 675
                }
              }
            }
          },
          {
            "id": 675,
            "type": {
              "def": {
                "tuple": [
                  121,
                  673
                ]
              }
            }
          },
          {
            "id": 676,
            "type": {
              "path": [
                "bifrost_farming",
                "gauge",
                "GaugeState"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unbond",
                      "index": 0
                    },
                    {
                      "name": "Bonded",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 677,
            "type": {
              "def": {
                "tuple": [
                  4,
                  0
                ]
              }
            }
          },
          {
            "id": 678,
            "type": {
              "path": [
                "bifrost_farming",
                "gauge",
                "GaugeInfo"
              ],
              "params": [
                {
                  "name": "BalanceOf",
                  "type": 6
                },
                {
                  "name": "BlockNumberFor",
                  "type": 4
                },
                {
                  "name": "AccountIdOf",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountIdOf"
                    },
                    {
                      "name": "gauge_amount",
                      "type": 6,
                      "typeName": "BalanceOf"
                    },
                    {
                      "name": "total_time_factor",
                      "type": 6,
                      "typeName": "u128"
                    },
                    {
                      "name": "latest_time_factor",
                      "type": 6,
                      "typeName": "u128"
                    },
                    {
                      "name": "claimed_time_factor",
                      "type": 6,
                      "typeName": "u128"
                    },
                    {
                      "name": "gauge_start_block",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "gauge_stop_block",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "gauge_last_block",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "last_claim_block",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 679,
            "type": {
              "path": [
                "bifrost_farming",
                "rewards",
                "ShareInfo"
              ],
              "params": [
                {
                  "name": "BalanceOf",
                  "type": 6
                },
                {
                  "name": "CurrencyIdOf",
                  "type": 121
                },
                {
                  "name": "BlockNumberFor",
                  "type": 4
                },
                {
                  "name": "AccountIdOf",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountIdOf"
                    },
                    {
                      "name": "share",
                      "type": 6,
                      "typeName": "BalanceOf"
                    },
                    {
                      "name": "withdrawn_rewards",
                      "type": 666,
                      "typeName": "BTreeMap<CurrencyIdOf, BalanceOf>"
                    },
                    {
                      "name": "claim_last_block",
                      "type": 4,
                      "typeName": "BlockNumberFor"
                    },
                    {
                      "name": "withdraw_list",
                      "type": 519,
                      "typeName": "Vec<(BlockNumberFor, BalanceOf)>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 680,
            "type": {
              "path": [
                "bifrost_farming",
                "boost",
                "BoostPoolInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total_votes",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "start_round",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "end_round",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "round_length",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 681,
            "type": {
              "path": [
                "bifrost_farming",
                "boost",
                "UserBoostInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "vote_amount",
                      "type": 6,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "vote_list",
                      "type": 682,
                      "typeName": "BoundedVec<(PoolId, Percent), T::WhitelistMaximumLimit>"
                    },
                    {
                      "name": "last_vote",
                      "type": 4,
                      "typeName": "BlockNumberFor<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 682,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 180
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 179,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 683,
            "type": {
              "def": {
                "tuple": [
                  4,
                  121
                ]
              }
            }
          },
          {
            "id": 684,
            "type": {
              "path": [
                "bifrost_farming",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotNullable",
                      "index": 0
                    },
                    {
                      "name": "PoolDoesNotExist",
                      "index": 1
                    },
                    {
                      "name": "GaugePoolNotExist",
                      "index": 2
                    },
                    {
                      "name": "GaugeInfoNotExist",
                      "index": 3
                    },
                    {
                      "name": "InvalidPoolState",
                      "index": 4
                    },
                    {
                      "name": "LastGaugeNotClaim",
                      "index": 5
                    },
                    {
                      "name": "CanNotClaim",
                      "index": 6,
                      "docs": [
                        "claim_limit_time exceeded"
                      ]
                    },
                    {
                      "name": "GaugeMaxBlockOverflow",
                      "index": 7,
                      "docs": [
                        "gauge pool max_block exceeded"
                      ]
                    },
                    {
                      "name": "WithdrawLimitCountExceeded",
                      "index": 8,
                      "docs": [
                        "withdraw_limit_time exceeded"
                      ]
                    },
                    {
                      "name": "ShareInfoNotExists",
                      "index": 9
                    },
                    {
                      "name": "CanNotDeposit",
                      "index": 10
                    },
                    {
                      "name": "WhitelistEmpty",
                      "index": 11
                    },
                    {
                      "name": "RoundNotOver",
                      "index": 12
                    },
                    {
                      "name": "RoundLengthNotSet",
                      "index": 13
                    },
                    {
                      "name": "WhitelistLimitExceeded",
                      "index": 14
                    },
                    {
                      "name": "NobodyVoting",
                      "index": 15
                    },
                    {
                      "name": "NotInWhitelist",
                      "index": 16
                    },
                    {
                      "name": "PercentOverflow",
                      "index": 17
                    },
                    {
                      "name": "PoolNotCleared",
                      "index": 18
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 685,
            "type": {
              "path": [
                "orml_asset_registry",
                "module",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetNotFound",
                      "index": 0,
                      "docs": [
                        "Asset was not found."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "index": 1,
                      "docs": [
                        "The version of the `VersionedMultiLocation` value used is not able",
                        "to be interpreted."
                      ]
                    },
                    {
                      "name": "InvalidAssetId",
                      "index": 2,
                      "docs": [
                        "The asset id is invalid."
                      ]
                    },
                    {
                      "name": "ConflictingLocation",
                      "index": 3,
                      "docs": [
                        "Another asset was already register with this location."
                      ]
                    },
                    {
                      "name": "ConflictingAssetId",
                      "index": 4,
                      "docs": [
                        "Another asset was already register with this asset id."
                      ]
                    },
                    {
                      "name": "InvalidAssetString",
                      "index": 5,
                      "docs": [
                        "Name or symbol is too long."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 686,
            "type": {
              "path": [
                "pallet_message_queue",
                "BookState"
              ],
              "params": [
                {
                  "name": "MessageOrigin",
                  "type": 191
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "begin",
                      "type": 4,
                      "typeName": "PageIndex"
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "PageIndex"
                    },
                    {
                      "name": "count",
                      "type": 4,
                      "typeName": "PageIndex"
                    },
                    {
                      "name": "ready_neighbours",
                      "type": 687,
                      "typeName": "Option<Neighbours<MessageOrigin>>"
                    },
                    {
                      "name": "message_count",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "size",
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 687,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 688
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 688
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 688,
            "type": {
              "path": [
                "pallet_message_queue",
                "Neighbours"
              ],
              "params": [
                {
                  "name": "MessageOrigin",
                  "type": 191
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "prev",
                      "type": 191,
                      "typeName": "MessageOrigin"
                    },
                    {
                      "name": "next",
                      "type": 191,
                      "typeName": "MessageOrigin"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 689,
            "type": {
              "def": {
                "tuple": [
                  191,
                  4
                ]
              }
            }
          },
          {
            "id": 690,
            "type": {
              "path": [
                "pallet_message_queue",
                "Page"
              ],
              "params": [
                {
                  "name": "Size",
                  "type": 4
                },
                {
                  "name": "HeapSize",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "remaining",
                      "type": 4,
                      "typeName": "Size"
                    },
                    {
                      "name": "remaining_size",
                      "type": 4,
                      "typeName": "Size"
                    },
                    {
                      "name": "first_index",
                      "type": 4,
                      "typeName": "Size"
                    },
                    {
                      "name": "first",
                      "type": 4,
                      "typeName": "Size"
                    },
                    {
                      "name": "last",
                      "type": 4,
                      "typeName": "Size"
                    },
                    {
                      "name": "heap",
                      "type": 691,
                      "typeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 691,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 692,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotReapable",
                      "index": 0,
                      "docs": [
                        "Page is not reapable because it has items remaining to be processed and is not old",
                        "enough."
                      ]
                    },
                    {
                      "name": "NoPage",
                      "index": 1,
                      "docs": [
                        "Page to be reaped does not exist."
                      ]
                    },
                    {
                      "name": "NoMessage",
                      "index": 2,
                      "docs": [
                        "The referenced message could not be found."
                      ]
                    },
                    {
                      "name": "AlreadyProcessed",
                      "index": 3,
                      "docs": [
                        "The message was already processed and cannot be processed again."
                      ]
                    },
                    {
                      "name": "Queued",
                      "index": 4,
                      "docs": [
                        "The message is queued for future execution."
                      ]
                    },
                    {
                      "name": "InsufficientWeight",
                      "index": 5,
                      "docs": [
                        "There is temporarily not enough weight to continue servicing messages."
                      ]
                    },
                    {
                      "name": "TemporarilyUnprocessable",
                      "index": 6,
                      "docs": [
                        "This message is temporarily unprocessable.",
                        "",
                        "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
                        "retrying."
                      ]
                    },
                    {
                      "name": "QueuePaused",
                      "index": 7,
                      "docs": [
                        "The queue is paused and no message can be executed from it.",
                        "",
                        "This can change at any time and may resolve in the future by re-trying."
                      ]
                    },
                    {
                      "name": "RecursiveDisallowed",
                      "index": 8,
                      "docs": [
                        "Another call is in progress and needs to finish before this call can happen."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 693,
            "type": {
              "def": {
                "tuple": [
                  694,
                  695,
                  696,
                  697,
                  698,
                  700,
                  701,
                  702,
                  703,
                  704
                ]
              }
            }
          },
          {
            "id": 694,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 695,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 696,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 697,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 698,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 699,
                      "typeName": "Era"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 699,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "index": 0
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 45
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 47
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 48
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 49
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 52
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 57
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 60
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 61
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 74
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 75
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 76
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 77
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 78
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 79
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 81
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 83
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 84
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 85
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 86
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 87
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 88
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 89
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 92
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 93
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 94
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 95
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 96
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 97
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 98
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 99
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 101
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 102
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 103
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 104
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 105
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 106
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 107
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 108
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 109
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 110
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 111
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 112
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 113
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 114
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 115
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 116
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 117
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 118
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 119
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 120
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 121
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 122
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 123
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 124
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 125
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 126
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 127
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 128
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 129
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 130
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 131
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 132
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 133
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 134
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 135
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 136
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 137
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 138
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 139
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 140
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 141
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 142
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 143
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 144
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 145
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 146
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 147
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 148
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 149
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 150
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 151
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 152
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 153
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 154
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 155
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 156
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 157
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 158
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 159
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 160
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 161
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 162
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 163
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 164
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 165
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 166
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 167
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 168
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 169
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 170
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 171
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 172
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 173
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 174
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 175
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 176
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 177
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 178
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 179
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 180
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 181
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 182
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 183
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 184
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 185
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 186
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 187
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 188
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 189
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 190
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 191
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 192
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 193
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 194
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 195
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 196
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 197
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 198
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 199
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 200
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 201
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 202
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 203
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 204
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 205
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 206
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 207
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 208
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 209
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 210
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 211
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 212
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 213
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 214
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 215
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 216
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 217
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 218
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 219
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 220
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 221
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 222
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 223
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 224
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 225
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 226
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 227
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 228
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 229
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 230
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 231
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 232
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 233
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 234
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 235
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 236
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 237
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 238
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 239
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 240
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 241
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 242
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 243
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 244
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 245
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 246
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 247
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 248
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 249
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 250
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 251
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 252
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 253
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 254
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 255
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 700,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 66,
                      "typeName": "T::Nonce"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 701,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 702,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 70,
                      "typeName": "BalanceOf<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 703,
            "type": {
              "path": [
                "treasury_buyout_extension",
                "CheckBuyout"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 129
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 704,
            "type": {
              "path": [
                "frame_metadata_hash_extension",
                "CheckMetadataHash"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "mode",
                      "type": 705,
                      "typeName": "Mode"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 705,
            "type": {
              "path": [
                "frame_metadata_hash_extension",
                "Mode"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Disabled",
                      "index": 0
                    },
                    {
                      "name": "Enabled",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 706,
            "type": {
              "path": [
                "sp_consensus_slots",
                "SlotDuration"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 707,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "block",
                "Block"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 708
                },
                {
                  "name": "Extrinsic",
                  "type": 709
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 708,
                      "typeName": "Header"
                    },
                    {
                      "name": "extrinsics",
                      "type": 710,
                      "typeName": "Vec<Extrinsic>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 708,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "number",
                      "type": 66,
                      "typeName": "Number"
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 12,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "digest",
                      "type": 14,
                      "typeName": "Digest"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 709,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 274
                },
                {
                  "name": "Call",
                  "type": 282
                },
                {
                  "name": "Signature",
                  "type": 380
                },
                {
                  "name": "Extra",
                  "type": 693
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 710,
            "type": {
              "def": {
                "sequence": {
                  "type": 709
                }
              }
            }
          },
          {
            "id": 711,
            "type": {
              "path": [
                "sp_core",
                "OpaqueMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 712,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 711
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 711
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 713,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 42
                },
                {
                  "name": "E",
                  "type": 714
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 42
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 714
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 714,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionValidityError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Invalid",
                      "fields": [
                        {
                          "type": 715,
                          "typeName": "InvalidTransaction"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Unknown",
                      "fields": [
                        {
                          "type": 716,
                          "typeName": "UnknownTransaction"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 715,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "InvalidTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "index": 0
                    },
                    {
                      "name": "Payment",
                      "index": 1
                    },
                    {
                      "name": "Future",
                      "index": 2
                    },
                    {
                      "name": "Stale",
                      "index": 3
                    },
                    {
                      "name": "BadProof",
                      "index": 4
                    },
                    {
                      "name": "AncientBirthBlock",
                      "index": 5
                    },
                    {
                      "name": "ExhaustsResources",
                      "index": 6
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "BadMandatory",
                      "index": 8
                    },
                    {
                      "name": "MandatoryValidation",
                      "index": 9
                    },
                    {
                      "name": "BadSigner",
                      "index": 10
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 716,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "UnknownTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CannotLookup",
                      "index": 0
                    },
                    {
                      "name": "NoUnsignedValidator",
                      "index": 1
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 717,
            "type": {
              "path": [
                "sp_inherents",
                "InherentData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "data",
                      "type": 718,
                      "typeName": "BTreeMap<InherentIdentifier, Vec<u8>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 718,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 82
                },
                {
                  "name": "V",
                  "type": 13
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 719
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 719,
            "type": {
              "def": {
                "sequence": {
                  "type": 720
                }
              }
            }
          },
          {
            "id": 720,
            "type": {
              "def": {
                "tuple": [
                  82,
                  13
                ]
              }
            }
          },
          {
            "id": 721,
            "type": {
              "path": [
                "sp_inherents",
                "CheckInherentsResult"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "okay",
                      "type": 30,
                      "typeName": "bool"
                    },
                    {
                      "name": "fatal_error",
                      "type": 30,
                      "typeName": "bool"
                    },
                    {
                      "name": "errors",
                      "type": 717,
                      "typeName": "InherentData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 722,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionSource"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InBlock",
                      "index": 0
                    },
                    {
                      "name": "Local",
                      "index": 1
                    },
                    {
                      "name": "External",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 723,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 724
                },
                {
                  "name": "E",
                  "type": 714
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 724
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 714
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 724,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "ValidTransaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "priority",
                      "type": 11,
                      "typeName": "TransactionPriority"
                    },
                    {
                      "name": "requires",
                      "type": 201,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "provides",
                      "type": 201,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "longevity",
                      "type": 11,
                      "typeName": "TransactionLongevity"
                    },
                    {
                      "name": "propagate",
                      "type": 30,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 725,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 726
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 726
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 726,
            "type": {
              "def": {
                "sequence": {
                  "type": 727
                }
              }
            }
          },
          {
            "id": 727,
            "type": {
              "def": {
                "tuple": [
                  13,
                  500
                ]
              }
            }
          },
          {
            "id": 728,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "RuntimeDispatchInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Weight",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 23,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "partial_fee",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 729,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "FeeDetails"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "inclusion_fee",
                      "type": 730,
                      "typeName": "Option<InclusionFee<Balance>>"
                    },
                    {
                      "name": "tip",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 730,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 731
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 731
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 731,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "InclusionFee"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "len_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "adjusted_weight_fee",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 732,
            "type": {
              "path": [
                "cumulus_primitives_core",
                "CollationInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "upward_messages",
                      "type": 201,
                      "typeName": "Vec<UpwardMessage>"
                    },
                    {
                      "name": "horizontal_messages",
                      "type": 243,
                      "typeName": "Vec<OutboundHrmpMessage>"
                    },
                    {
                      "name": "new_validation_code",
                      "type": 733,
                      "typeName": "Option<relay_chain::ValidationCode>"
                    },
                    {
                      "name": "processed_downward_messages",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "hrmp_watermark",
                      "type": 4,
                      "typeName": "relay_chain::BlockNumber"
                    },
                    {
                      "name": "head_data",
                      "type": 227,
                      "typeName": "HeadData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 733,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 734
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 734
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 734,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "ValidationCode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 735,
            "type": {
              "path": [
                "module_oracle_rpc_runtime_api",
                "BalanceWrapper"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 736,
            "type": {
              "path": [
                "module_pallet_staking_rpc_runtime_api",
                "StakingRates"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "collator_staking_rate",
                      "type": 58,
                      "typeName": "Perquintill"
                    },
                    {
                      "name": "collator_reward_rate",
                      "type": 58,
                      "typeName": "Perquintill"
                    },
                    {
                      "name": "delegator_staking_rate",
                      "type": 58,
                      "typeName": "Perquintill"
                    },
                    {
                      "name": "delegator_reward_rate",
                      "type": 58,
                      "typeName": "Perquintill"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 737,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 134
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 134
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 738,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 739
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 739
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 739,
            "type": {
              "path": [
                "dia_oracle",
                "dia",
                "PriceInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 740,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 741
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 741
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 741,
            "type": {
              "path": [
                "zenlink_protocol",
                "rpc",
                "PairInfo"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AssetBalance",
                  "type": 6
                },
                {
                  "name": "AssetId",
                  "type": 136
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset_0",
                      "type": 136,
                      "typeName": "AssetId"
                    },
                    {
                      "name": "asset_1",
                      "type": 136,
                      "typeName": "AssetId"
                    },
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "total_liquidity",
                      "type": 6,
                      "typeName": "AssetBalance"
                    },
                    {
                      "name": "holding_liquidity",
                      "type": 6,
                      "typeName": "AssetBalance"
                    },
                    {
                      "name": "reserve_0",
                      "type": 6,
                      "typeName": "AssetBalance"
                    },
                    {
                      "name": "reserve_1",
                      "type": 6,
                      "typeName": "AssetBalance"
                    },
                    {
                      "name": "lp_asset_id",
                      "type": 136,
                      "typeName": "AssetId"
                    },
                    {
                      "name": "status",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 742,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 620
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 620
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 743,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 735
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 735
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 744,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 745
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 745
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 745,
            "type": {
              "def": {
                "sequence": {
                  "type": 143
                }
              }
            }
          },
          {
            "id": 746,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 747
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 747
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 747,
            "type": {
              "def": {
                "sequence": {
                  "type": 748
                }
              }
            }
          },
          {
            "id": 748,
            "type": {
              "def": {
                "tuple": [
                  143,
                  735
                ]
              }
            }
          },
          {
            "id": 749,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 151
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 151
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 750,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "ContractResult"
              ],
              "params": [
                {
                  "name": "R",
                  "type": 751
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "EventRecord",
                  "type": 19
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_consumed",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "gas_required",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "storage_deposit",
                      "type": 754,
                      "typeName": "StorageDeposit<Balance>"
                    },
                    {
                      "name": "debug_message",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "result",
                      "type": 751,
                      "typeName": "R"
                    },
                    {
                      "name": "events",
                      "type": 755,
                      "typeName": "Option<Vec<EventRecord>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 751,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 752
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 752
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 752,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "ExecReturnValue"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "flags",
                      "type": 753,
                      "typeName": "ReturnFlags"
                    },
                    {
                      "name": "data",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 753,
            "type": {
              "path": [
                "pallet_contracts_uapi",
                "flags",
                "ReturnFlags"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bits",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 754,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "StorageDeposit"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Refund",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Charge",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 755,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 756
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 756
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 756,
            "type": {
              "def": {
                "sequence": {
                  "type": 19
                }
              }
            }
          },
          {
            "id": 757,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "Code"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Upload",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Existing",
                      "fields": [
                        {
                          "type": 12,
                          "typeName": "Hash"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 758,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "ContractResult"
              ],
              "params": [
                {
                  "name": "R",
                  "type": 759
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "EventRecord",
                  "type": 19
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_consumed",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "gas_required",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "storage_deposit",
                      "type": 754,
                      "typeName": "StorageDeposit<Balance>"
                    },
                    {
                      "name": "debug_message",
                      "type": 13,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "result",
                      "type": 759,
                      "typeName": "R"
                    },
                    {
                      "name": "events",
                      "type": 755,
                      "typeName": "Option<Vec<EventRecord>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 759,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 760
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 760
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 760,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "InstantiateReturnValue"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "result",
                      "type": 752,
                      "typeName": "ExecReturnValue"
                    },
                    {
                      "name": "account_id",
                      "type": 0,
                      "typeName": "AccountId"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 761,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 762
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 762
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 762,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "CodeUploadReturnValue"
              ],
              "params": [
                {
                  "name": "CodeHash",
                  "type": 12
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": 12,
                      "typeName": "CodeHash"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 763,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 542
                },
                {
                  "name": "E",
                  "type": 764
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 542
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 764
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 764,
            "type": {
              "path": [
                "pallet_contracts",
                "primitives",
                "ContractAccessError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DoesntExist",
                      "index": 0
                    },
                    {
                      "name": "KeyDecodingFailed",
                      "index": 1
                    },
                    {
                      "name": "MigrationInProgress",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 765,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 43
                },
                {
                  "name": "E",
                  "type": 197
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 43
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 197
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 766,
            "type": {
              "path": [
                "amplitude_runtime",
                "RuntimeError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 213,
                          "typeName": "frame_system::Error<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "type": 254,
                          "typeName": "cumulus_pallet_parachain_system::Error<Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 277,
                          "typeName": "pallet_balances::Error<Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Democracy",
                      "fields": [
                        {
                          "type": 446,
                          "typeName": "pallet_democracy::Error<Runtime>"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "type": 449,
                          "typeName": "pallet_collective::Error<Runtime, pallet_collective::Instance1>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "type": 451,
                          "typeName": "pallet_collective::Error<Runtime, pallet_collective::Instance2>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "type": 456,
                          "typeName": "pallet_scheduler::Error<Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "type": 466,
                          "typeName": "pallet_preimage::Error<Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 470,
                          "typeName": "pallet_multisig::Error<Runtime>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "type": 477,
                          "typeName": "pallet_treasury::Error<Runtime>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Bounties",
                      "fields": [
                        {
                          "type": 481,
                          "typeName": "pallet_bounties::Error<Runtime>"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "ChildBounties",
                      "fields": [
                        {
                          "type": 484,
                          "typeName": "pallet_child_bounties::Error<Runtime>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "type": 493,
                          "typeName": "pallet_proxy::Error<Runtime>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 501,
                          "typeName": "pallet_session::Error<Runtime>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "ParachainStaking",
                      "fields": [
                        {
                          "type": 521,
                          "typeName": "parachain_staking::Error<Runtime>"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "type": 531,
                          "typeName": "cumulus_pallet_xcmp_queue::Error<Runtime>"
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 552,
                          "typeName": "pallet_xcm::Error<Runtime>"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "type": 559,
                          "typeName": "pallet_vesting::Error<Runtime>"
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 560,
                          "typeName": "pallet_utility::Error<Runtime>"
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Currencies",
                      "fields": [
                        {
                          "type": 561,
                          "typeName": "orml_currencies::Error<Runtime>"
                        }
                      ],
                      "index": 52
                    },
                    {
                      "name": "Tokens",
                      "fields": [
                        {
                          "type": 570,
                          "typeName": "orml_tokens::Error<Runtime>"
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "XTokens",
                      "fields": [
                        {
                          "type": 571,
                          "typeName": "orml_xtokens::Error<Runtime>"
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "type": 587,
                          "typeName": "pallet_identity::Error<Runtime>"
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Contracts",
                      "fields": [
                        {
                          "type": 607,
                          "typeName": "pallet_contracts::Error<Runtime>"
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "DiaOracleModule",
                      "fields": [
                        {
                          "type": 610,
                          "typeName": "dia_oracle::Error<Runtime>"
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "ZenlinkProtocol",
                      "fields": [
                        {
                          "type": 623,
                          "typeName": "zenlink_protocol::Error<Runtime>"
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Currency",
                      "fields": [
                        {
                          "type": 624,
                          "typeName": "currency::Error<Runtime>"
                        }
                      ],
                      "index": 60
                    },
                    {
                      "name": "Fee",
                      "fields": [
                        {
                          "type": 625,
                          "typeName": "fee::Error<Runtime>"
                        }
                      ],
                      "index": 61
                    },
                    {
                      "name": "Issue",
                      "fields": [
                        {
                          "type": 628,
                          "typeName": "issue::Error<Runtime>"
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Nomination",
                      "fields": [
                        {
                          "type": 629,
                          "typeName": "nomination::Error<Runtime>"
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Oracle",
                      "fields": [
                        {
                          "type": 631,
                          "typeName": "oracle::Error<Runtime>"
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Redeem",
                      "fields": [
                        {
                          "type": 634,
                          "typeName": "redeem::Error<Runtime>"
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Replace",
                      "fields": [
                        {
                          "type": 637,
                          "typeName": "replace::Error<Runtime>"
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Security",
                      "fields": [
                        {
                          "type": 639,
                          "typeName": "security::Error<Runtime>"
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "StellarRelay",
                      "fields": [
                        {
                          "type": 642,
                          "typeName": "stellar_relay::Error<Runtime>"
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "VaultRegistry",
                      "fields": [
                        {
                          "type": 645,
                          "typeName": "vault_registry::Error<Runtime>"
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "PooledVaultRewards",
                      "fields": [
                        {
                          "type": 651,
                          "typeName": "pooled_rewards::Error<Runtime>"
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "VaultStaking",
                      "fields": [
                        {
                          "type": 658,
                          "typeName": "staking::Error<Runtime>"
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "ClientsInfo",
                      "fields": [
                        {
                          "type": 659,
                          "typeName": "clients_info::Error<Runtime>"
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "RewardDistribution",
                      "fields": [
                        {
                          "type": 660,
                          "typeName": "reward_distribution::Error<Runtime>"
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "TokenAllowance",
                      "fields": [
                        {
                          "type": 662,
                          "typeName": "orml_currencies_allowance_extension::Error<Runtime>"
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "TreasuryBuyoutExtension",
                      "fields": [
                        {
                          "type": 663,
                          "typeName": "treasury_buyout_extension::Error<Runtime>"
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Farming",
                      "fields": [
                        {
                          "type": 684,
                          "typeName": "farming::Error<Runtime>"
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "AssetRegistry",
                      "fields": [
                        {
                          "type": 685,
                          "typeName": "orml_asset_registry::Error<Runtime>"
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "MessageQueue",
                      "fields": [
                        {
                          "type": 692,
                          "typeName": "pallet_message_queue::Error<Runtime>"
                        }
                      ],
                      "index": 222
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "entries": [
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "ty": {
                  "Plain": 8
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 13
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "ty": {
                  "Plain": 12
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "ty": {
                  "Plain": 14
                },
                "default": [
                  0
                ],
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "ty": {
                  "Plain": 18
                },
                "default": [
                  0
                ],
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 195
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 196
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "ty": {
                  "Plain": 193
                },
                "default": [
                  0
                ],
                "docs": [
                  " The execution phase of the block."
                ]
              },
              {
                "name": "AuthorizedUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 198
                },
                "default": [
                  0
                ],
                "docs": [
                  " `Some` if a code upgrade has been authorized."
                ]
              }
            ]
          },
          "calls": {
            "ty": 199
          },
          "event": {
            "ty": 21
          },
          "constants": [
            {
              "name": "BlockWeights",
              "ty": 202,
              "value": [
                7,
                0,
                242,
                5,
                42,
                1,
                0,
                7,
                0,
                136,
                82,
                106,
                116,
                2,
                0,
                64,
                1,
                2,
                101,
                205,
                29,
                0,
                1,
                7,
                192,
                210,
                44,
                118,
                81,
                2,
                0,
                224,
                0,
                1,
                7,
                0,
                230,
                189,
                79,
                87,
                2,
                0,
                240,
                0,
                1,
                0,
                0,
                2,
                101,
                205,
                29,
                0,
                1,
                7,
                192,
                116,
                193,
                144,
                110,
                2,
                0,
                48,
                1,
                1,
                7,
                0,
                136,
                82,
                106,
                116,
                2,
                0,
                64,
                1,
                1,
                7,
                0,
                162,
                148,
                26,
                29,
                2,
                0,
                80,
                0,
                2,
                101,
                205,
                29,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "ty": 206,
              "value": [
                0,
                0,
                60,
                0,
                0,
                0,
                80,
                0,
                0,
                0,
                80,
                0
              ],
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "ty": 4,
              "value": [
                0,
                16,
                0,
                0
              ],
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "ty": 208,
              "value": [
                64,
                120,
                125,
                1,
                0,
                0,
                0,
                0,
                0,
                225,
                245,
                5,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "ty": 209,
              "value": [
                36,
                97,
                109,
                112,
                108,
                105,
                116,
                117,
                100,
                101,
                36,
                97,
                109,
                112,
                108,
                105,
                116,
                117,
                100,
                101,
                1,
                0,
                0,
                0,
                19,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                84,
                221,
                113,
                141,
                92,
                197,
                50,
                98,
                212,
                1,
                0,
                0,
                0,
                223,
                106,
                203,
                104,
                153,
                7,
                96,
                155,
                4,
                0,
                0,
                0,
                55,
                227,
                151,
                252,
                124,
                145,
                245,
                228,
                2,
                0,
                0,
                0,
                64,
                254,
                58,
                212,
                1,
                248,
                149,
                154,
                6,
                0,
                0,
                0,
                210,
                188,
                152,
                151,
                238,
                208,
                143,
                21,
                3,
                0,
                0,
                0,
                247,
                139,
                39,
                139,
                229,
                63,
                69,
                76,
                2,
                0,
                0,
                0,
                171,
                60,
                5,
                114,
                41,
                31,
                235,
                139,
                1,
                0,
                0,
                0,
                188,
                157,
                137,
                144,
                79,
                91,
                146,
                63,
                1,
                0,
                0,
                0,
                55,
                200,
                187,
                19,
                80,
                169,
                162,
                168,
                4,
                0,
                0,
                0,
                234,
                147,
                227,
                241,
                111,
                61,
                105,
                98,
                2,
                0,
                0,
                0,
                251,
                116,
                240,
                226,
                30,
                234,
                19,
                26,
                1,
                0,
                0,
                0,
                83,
                105,
                157,
                114,
                16,
                152,
                222,
                211,
                1,
                0,
                0,
                0,
                96,
                174,
                212,
                60,
                181,
                36,
                86,
                241,
                1,
                0,
                0,
                0,
                13,
                148,
                184,
                12,
                23,
                134,
                48,
                240,
                1,
                0,
                0,
                0,
                202,
                243,
                155,
                151,
                154,
                104,
                128,
                189,
                1,
                0,
                0,
                0,
                22,
                218,
                150,
                211,
                108,
                109,
                91,
                183,
                1,
                0,
                0,
                0,
                105,
                226,
                225,
                170,
                66,
                31,
                79,
                176,
                1,
                0,
                0,
                0,
                43,
                229,
                203,
                2,
                176,
                165,
                110,
                115,
                1,
                0,
                0,
                0,
                104,
                182,
                107,
                161,
                34,
                201,
                63,
                167,
                2,
                0,
                0,
                0,
                110,
                249,
                83,
                0,
                75,
                163,
                14,
                89,
                1,
                0,
                0,
                0,
                251,
                197,
                119,
                185,
                215,
                71,
                239,
                214,
                1,
                0,
                0,
                0,
                13,
                0,
                0,
                0,
                1
              ],
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "ty": 55,
              "value": [
                57,
                0
              ],
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "error": {
            "ty": 213
          },
          "index": 0,
          "docs": []
        },
        {
          "name": "ParachainSystem",
          "storage": {
            "prefix": "ParachainSystem",
            "entries": [
              {
                "name": "UnincludedSegment",
                "modifier": "Default",
                "ty": {
                  "Plain": 214
                },
                "default": [
                  0
                ],
                "docs": [
                  " Latest included block descendants the runtime accepted. In other words, these are",
                  " ancestors of the currently executing block which have not been included in the observed",
                  " relay-chain state.",
                  "",
                  " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                  " in the pallet."
                ]
              },
              {
                "name": "AggregatedUnincludedSegment",
                "modifier": "Optional",
                "ty": {
                  "Plain": 224
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                  " latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                  " respect to relay chain constraints."
                ]
              },
              {
                "name": "PendingValidationCode",
                "modifier": "Default",
                "ty": {
                  "Plain": 13
                },
                "default": [
                  0
                ],
                "docs": [
                  " In case of a scheduled upgrade, this storage field contains the validation code to be",
                  " applied.",
                  "",
                  " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                  " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                  " with the new validation code. This concludes the upgrade process."
                ]
              },
              {
                "name": "NewValidationCode",
                "modifier": "Optional",
                "ty": {
                  "Plain": 13
                },
                "default": [
                  0
                ],
                "docs": [
                  " Validation code that is set by the parachain and is to be communicated to collator and",
                  " consequently the relay-chain.",
                  "",
                  " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                  " the value."
                ]
              },
              {
                "name": "ValidationData",
                "modifier": "Optional",
                "ty": {
                  "Plain": 226
                },
                "default": [
                  0
                ],
                "docs": [
                  " The [`PersistedValidationData`] set for this block.",
                  " This value is expected to be set only once per block and it's never stored",
                  " in the trie."
                ]
              },
              {
                "name": "DidSetValidationCode",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " Were the validation data set to notify the relay chain?"
                ]
              },
              {
                "name": "LastRelayChainBlockNumber",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The relay chain block number associated with the last parachain block.",
                  "",
                  " This is updated in `on_finalize`."
                ]
              },
              {
                "name": "UpgradeRestrictionSignal",
                "modifier": "Default",
                "ty": {
                  "Plain": 228
                },
                "default": [
                  0
                ],
                "docs": [
                  " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                  " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                  " candidate will be invalid.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "UpgradeGoAhead",
                "modifier": "Default",
                "ty": {
                  "Plain": 222
                },
                "default": [
                  0
                ],
                "docs": [
                  " Optional upgrade go-ahead signal from the relay-chain.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "RelayStateProof",
                "modifier": "Optional",
                "ty": {
                  "Plain": 230
                },
                "default": [
                  0
                ],
                "docs": [
                  " The state proof for the last relay parent block.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "RelevantMessagingState",
                "modifier": "Optional",
                "ty": {
                  "Plain": 232
                },
                "default": [
                  0
                ],
                "docs": [
                  " The snapshot of some state related to messaging relevant to the current parachain as per",
                  " the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "HostConfiguration",
                "modifier": "Optional",
                "ty": {
                  "Plain": 237
                },
                "default": [
                  0
                ],
                "docs": [
                  " The parachain host configuration that was obtained from the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "LastDmqMqcHead",
                "modifier": "Default",
                "ty": {
                  "Plain": 239
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The last downward message queue chain head we have observed.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "LastHrmpMqcHeads",
                "modifier": "Default",
                "ty": {
                  "Plain": 240
                },
                "default": [
                  0
                ],
                "docs": [
                  " The message queue chain heads we have observed per each channel incoming channel.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "ProcessedDownwardMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of downward messages processed in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpWatermark",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " HRMP watermark that was set in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpOutboundMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 243
                },
                "default": [
                  0
                ],
                "docs": [
                  " HRMP messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "UpwardMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 201
                },
                "default": [
                  0
                ],
                "docs": [
                  " Upward messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "PendingUpwardMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 201
                },
                "default": [
                  0
                ],
                "docs": [
                  " Upward messages that are still pending and not yet send to the relay chain."
                ]
              },
              {
                "name": "UpwardDeliveryFeeFactor",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The factor to multiply the base delivery fee by for UMP."
                ]
              },
              {
                "name": "AnnouncedHrmpMessagesPerCandidate",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                  " announcing the weight of `on_initialize` and `on_finalize`."
                ]
              },
              {
                "name": "ReservedXcmpWeightOverride",
                "modifier": "Optional",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0
                ],
                "docs": [
                  " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "ReservedDmpWeightOverride",
                "modifier": "Optional",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0
                ],
                "docs": [
                  " The weight we reserve at the beginning of the block for processing DMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "CustomValidationHeadData",
                "modifier": "Optional",
                "ty": {
                  "Plain": 13
                },
                "default": [
                  0
                ],
                "docs": [
                  " A custom head data that should be returned as result of `validate_block`.",
                  "",
                  " See `Pallet::set_custom_validation_head_data` for more information."
                ]
              }
            ]
          },
          "calls": {
            "ty": 245
          },
          "event": {
            "ty": 31
          },
          "constants": [],
          "error": {
            "ty": 254
          },
          "index": 1,
          "docs": []
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "entries": [
              {
                "name": "Now",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether the timestamp has been updated in this block.",
                  "",
                  " This value is updated to `true` upon successful submission of a timestamp by a node.",
                  " It is then checked at the end of each block execution in the `on_finalize` hook."
                ]
              }
            ]
          },
          "calls": {
            "ty": 255
          },
          "event": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "ty": 11,
              "value": [
                112,
                23,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum period between blocks.",
                "",
                " Be aware that this is different to the *expected* period that the block production",
                " apparatus provides. Your chosen consensus system will generally work with this to",
                " determine a sensible block time. For example, in the Aura pallet it will be double this",
                " period on default settings."
              ]
            }
          ],
          "error": null,
          "index": 2,
          "docs": []
        },
        {
          "name": "ParachainInfo",
          "storage": {
            "prefix": "ParachainInfo",
            "entries": [
              {
                "name": "ParachainId",
                "modifier": "Default",
                "ty": {
                  "Plain": 139
                },
                "default": [
                  100,
                  0,
                  0,
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 256
          },
          "event": null,
          "constants": [],
          "error": null,
          "index": 3,
          "docs": []
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "entries": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units issued in the system."
                ]
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units of outstanding deactivated balance in the system."
                ]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 257
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 261
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Named reserves on some account balances."
                ]
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 264
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Holds on account balances."
                ]
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 270
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Freeze locks on account balances."
                ]
              }
            ]
          },
          "calls": {
            "ty": 273
          },
          "event": {
            "ty": 33
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "ty": 6,
              "value": [
                0,
                202,
                154,
                59,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ]
            },
            {
              "name": "MaxLocks",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            },
            {
              "name": "MaxHolds",
              "ty": 4,
              "value": [
                2,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of holds that can exist on an account at any time."
              ]
            },
            {
              "name": "MaxFreezes",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of individual freeze locks that can exist on an account at any time."
              ]
            }
          ],
          "error": {
            "ty": 277
          },
          "index": 10,
          "docs": []
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "entries": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 278
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": null,
          "event": {
            "ty": 35
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "ty": 2,
              "value": [
                5
              ],
              "docs": [
                " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "error": null,
          "index": 11,
          "docs": []
        },
        {
          "name": "Democracy",
          "storage": {
            "prefix": "Democracy",
            "entries": [
              {
                "name": "PublicPropCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of (public) proposals that have been made so far."
                ]
              },
              {
                "name": "PublicProps",
                "modifier": "Default",
                "ty": {
                  "Plain": 279
                },
                "default": [
                  0
                ],
                "docs": [
                  " The public proposals. Unsorted. The second item is the proposal."
                ]
              },
              {
                "name": "DepositOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 433
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Those who have locked a deposit.",
                  "",
                  " TWOX-NOTE: Safe, as increasing integer keys are safe."
                ]
              },
              {
                "name": "ReferendumCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The next free referendum index, aka the number of referenda started so far."
                ]
              },
              {
                "name": "LowestUnbaked",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The lowest referendum index representing an unbaked referendum. Equal to",
                  " `ReferendumCount` if there isn't a unbaked referendum."
                ]
              },
              {
                "name": "ReferendumInfoOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 435
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Information concerning any given referendum.",
                  "",
                  " TWOX-NOTE: SAFE as indexes are not under an attacker’s control."
                ]
              },
              {
                "name": "VotingOf",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 438
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " All votes for a particular voter. We store the balance for the number of votes that we",
                  " have recorded. The second item is the total amount of delegations, that will be added.",
                  "",
                  " TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway."
                ]
              },
              {
                "name": "LastTabledWasExternal",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if the last referendum tabled was submitted externally. False if it was a public",
                  " proposal."
                ]
              },
              {
                "name": "NextExternal",
                "modifier": "Optional",
                "ty": {
                  "Plain": 444
                },
                "default": [
                  0
                ],
                "docs": [
                  " The referendum to be tabled whenever it would be valid to table an external proposal.",
                  " This happens when a referendum needs to be tabled and one of two conditions are met:",
                  " - `LastTabledWasExternal` is `false`; or",
                  " - `PublicProps` is empty."
                ]
              },
              {
                "name": "Blacklist",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 445
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A record of who vetoed what. Maps proposal hash to a possible existent block number",
                  " (until when it may not be resubmitted) and who vetoed it."
                ]
              },
              {
                "name": "Cancellations",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 30
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Record of all proposals that have been subject to emergency cancellation."
                ]
              },
              {
                "name": "MetadataOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 40,
                    "value": 12
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " General information concerning any proposal or referendum.",
                  " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                  " dump or IPFS hash of a JSON file.",
                  "",
                  " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                  " large preimages."
                ]
              }
            ]
          },
          "calls": {
            "ty": 283
          },
          "event": {
            "ty": 36
          },
          "constants": [
            {
              "name": "EnactmentPeriod",
              "ty": 4,
              "value": [
                64,
                56,
                0,
                0
              ],
              "docs": [
                " The period between a proposal being approved and enacted.",
                "",
                " It should generally be a little more than the unstake period to ensure that",
                " voting stakers have an opportunity to remove themselves from the system in the case",
                " where they are on the losing side of a vote."
              ]
            },
            {
              "name": "LaunchPeriod",
              "ty": 4,
              "value": [
                160,
                140,
                0,
                0
              ],
              "docs": [
                " How often (in blocks) new public referenda are launched."
              ]
            },
            {
              "name": "VotingPeriod",
              "ty": 4,
              "value": [
                160,
                140,
                0,
                0
              ],
              "docs": [
                " How often (in blocks) to check for new votes."
              ]
            },
            {
              "name": "VoteLockingPeriod",
              "ty": 4,
              "value": [
                64,
                56,
                0,
                0
              ],
              "docs": [
                " The minimum period of vote locking.",
                "",
                " It should be no shorter than enactment period to ensure that in the case of an approval,",
                " those successful voters are locked into the consequences that their votes entail."
              ]
            },
            {
              "name": "MinimumDeposit",
              "ty": 6,
              "value": [
                0,
                16,
                165,
                212,
                232,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum amount to be used as a deposit for a public referendum proposal."
              ]
            },
            {
              "name": "InstantAllowed",
              "ty": 30,
              "value": [
                1
              ],
              "docs": [
                " Indicator for whether an emergency origin is even allowed to happen. Some chains may",
                " want to set this permanently to `false`, others may want to condition it on things such",
                " as an upgrade having happened recently."
              ]
            },
            {
              "name": "FastTrackVotingPeriod",
              "ty": 4,
              "value": [
                132,
                3,
                0,
                0
              ],
              "docs": [
                " Minimum voting period allowed for a fast-track referendum."
              ]
            },
            {
              "name": "CooloffPeriod",
              "ty": 4,
              "value": [
                224,
                196,
                0,
                0
              ],
              "docs": [
                " Period in blocks where an external proposal may not be re-submitted after being vetoed."
              ]
            },
            {
              "name": "MaxVotes",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of votes for an account.",
                "",
                " Also used to compute weight, an overly big value can",
                " lead to extrinsic with very big weight: see `delegate` for instance."
              ]
            },
            {
              "name": "MaxProposals",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of public proposals that can exist at any time."
              ]
            },
            {
              "name": "MaxDeposits",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of deposits a public proposal may have at any time."
              ]
            },
            {
              "name": "MaxBlacklisted",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of items which can be blacklisted."
              ]
            }
          ],
          "error": {
            "ty": 446
          },
          "index": 13,
          "docs": []
        },
        {
          "name": "Council",
          "storage": {
            "prefix": "Council",
            "entries": [
              {
                "name": "Proposals",
                "modifier": "Default",
                "ty": {
                  "Plain": 447
                },
                "default": [
                  0
                ],
                "docs": [
                  " The hashes of the active proposals."
                ]
              },
              {
                "name": "ProposalOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 282
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Actual proposal for a given hash, if it's current."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 448
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Proposals so far."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "ty": {
                  "Plain": 276
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current members of the collective. This is stored sorted (just by value)."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " The prime member that helps determine the default vote behavior in case of absentations."
                ]
              }
            ]
          },
          "calls": {
            "ty": 285
          },
          "event": {
            "ty": 41
          },
          "constants": [
            {
              "name": "MaxProposalWeight",
              "ty": 9,
              "value": [
                7,
                0,
                68,
                41,
                53,
                58,
                2,
                0,
                160,
                0
              ],
              "docs": [
                " The maximum weight of a dispatch call that can be proposed and executed."
              ]
            }
          ],
          "error": {
            "ty": 449
          },
          "index": 14,
          "docs": []
        },
        {
          "name": "TechnicalCommittee",
          "storage": {
            "prefix": "TechnicalCommittee",
            "entries": [
              {
                "name": "Proposals",
                "modifier": "Default",
                "ty": {
                  "Plain": 450
                },
                "default": [
                  0
                ],
                "docs": [
                  " The hashes of the active proposals."
                ]
              },
              {
                "name": "ProposalOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 282
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Actual proposal for a given hash, if it's current."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 448
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Proposals so far."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "ty": {
                  "Plain": 276
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current members of the collective. This is stored sorted (just by value)."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " The prime member that helps determine the default vote behavior in case of absentations."
                ]
              }
            ]
          },
          "calls": {
            "ty": 287
          },
          "event": {
            "ty": 44
          },
          "constants": [
            {
              "name": "MaxProposalWeight",
              "ty": 9,
              "value": [
                7,
                0,
                68,
                41,
                53,
                58,
                2,
                0,
                160,
                0
              ],
              "docs": [
                " The maximum weight of a dispatch call that can be proposed and executed."
              ]
            }
          ],
          "error": {
            "ty": 451
          },
          "index": 15,
          "docs": []
        },
        {
          "name": "Scheduler",
          "storage": {
            "prefix": "Scheduler",
            "entries": [
              {
                "name": "IncompleteSince",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "Agenda",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 452
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Items to be executed, indexed by the block number that they should be executed on."
                ]
              },
              {
                "name": "Lookup",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 1,
                    "value": 46
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup from a name to the block number and index of the task.",
                  "",
                  " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                  " identities."
                ]
              }
            ]
          },
          "calls": {
            "ty": 288
          },
          "event": {
            "ty": 45
          },
          "constants": [
            {
              "name": "MaximumWeight",
              "ty": 9,
              "value": [
                7,
                0,
                160,
                219,
                33,
                93,
                2,
                0,
                0,
                1
              ],
              "docs": [
                " The maximum weight that may be scheduled per block for any dispatchables."
              ]
            },
            {
              "name": "MaxScheduledPerBlock",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of scheduled calls in the queue for a single block.",
                "",
                " NOTE:",
                " + Dependent pallets' benchmarks might require a higher limit for the setting. Set a",
                " higher limit under `runtime-benchmarks` feature."
              ]
            }
          ],
          "error": {
            "ty": 456
          },
          "index": 16,
          "docs": []
        },
        {
          "name": "Preimage",
          "storage": {
            "prefix": "Preimage",
            "entries": [
              {
                "name": "StatusFor",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 457
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The request status of a given hash."
                ]
              },
              {
                "name": "RequestStatusFor",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 460
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The request status of a given hash."
                ]
              },
              {
                "name": "PreimageFor",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 464,
                    "value": 465
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 290
          },
          "event": {
            "ty": 47
          },
          "constants": [],
          "error": {
            "ty": 466
          },
          "index": 17,
          "docs": []
        },
        {
          "name": "Multisig",
          "storage": {
            "prefix": "Multisig",
            "entries": [
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 467,
                    "value": 468
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The set of open multisig operations."
                ]
              }
            ]
          },
          "calls": {
            "ty": 291
          },
          "event": {
            "ty": 48
          },
          "constants": [
            {
              "name": "DepositBase",
              "ty": 6,
              "value": [
                0,
                184,
                100,
                217,
                69,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating a multisig execution or to",
                " store a dispatch call for later.",
                "",
                " This is held for an additional storage item whose value size is",
                " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                " `32 + sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "DepositFactor",
              "ty": 6,
              "value": [
                0,
                116,
                59,
                164,
                11,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per unit threshold when creating a multisig execution.",
                "",
                " This is held for adding 32 bytes more into a pre-existing storage value."
              ]
            },
            {
              "name": "MaxSignatories",
              "ty": 4,
              "value": [
                20,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of signatories allowed in the multisig."
              ]
            }
          ],
          "error": {
            "ty": 470
          },
          "index": 18,
          "docs": []
        },
        {
          "name": "Treasury",
          "storage": {
            "prefix": "Treasury",
            "entries": [
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of proposals that have been made."
                ]
              },
              {
                "name": "Proposals",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 471
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Proposals that have been made."
                ]
              },
              {
                "name": "Deactivated",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount which has been reported as inactive to Currency."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Default",
                "ty": {
                  "Plain": 472
                },
                "default": [
                  0
                ],
                "docs": [
                  " Proposal indices that have been approved but not yet awarded."
                ]
              },
              {
                "name": "SpendCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The count of spends that have been made."
                ]
              },
              {
                "name": "Spends",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 473
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Spends that have been approved and being processed."
                ]
              }
            ]
          },
          "calls": {
            "ty": 293
          },
          "event": {
            "ty": 50
          },
          "constants": [
            {
              "name": "ProposalBond",
              "ty": 475,
              "value": [
                80,
                195,
                0,
                0
              ],
              "docs": [
                " Fraction of a proposal's value that should be bonded in order to place the proposal.",
                " An accepted proposal gets these back. A rejected proposal does not."
              ]
            },
            {
              "name": "ProposalBondMinimum",
              "ty": 6,
              "value": [
                0,
                160,
                114,
                78,
                24,
                9,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "ProposalBondMaximum",
              "ty": 145,
              "value": [
                0
              ],
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "SpendPeriod",
              "ty": 4,
              "value": [
                224,
                196,
                0,
                0
              ],
              "docs": [
                " Period between successive spends."
              ]
            },
            {
              "name": "Burn",
              "ty": 475,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Percentage of spare funds (if any) that are burnt per spend period."
              ]
            },
            {
              "name": "PalletId",
              "ty": 476,
              "value": [
                112,
                121,
                47,
                116,
                114,
                115,
                114,
                121
              ],
              "docs": [
                " The treasury's pallet id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "MaxApprovals",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of approvals that can wait in the spending queue.",
                "",
                " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
              ]
            },
            {
              "name": "PayoutPeriod",
              "ty": 4,
              "value": [
                192,
                75,
                3,
                0
              ],
              "docs": [
                " The period during which an approved treasury spend has to be claimed."
              ]
            }
          ],
          "error": {
            "ty": 477
          },
          "index": 19,
          "docs": []
        },
        {
          "name": "Bounties",
          "storage": {
            "prefix": "Bounties",
            "entries": [
              {
                "name": "BountyCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of bounty proposals that have been made."
                ]
              },
              {
                "name": "Bounties",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 478
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Bounties that have been made."
                ]
              },
              {
                "name": "BountyDescriptions",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 480
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The description of each bounty."
                ]
              },
              {
                "name": "BountyApprovals",
                "modifier": "Default",
                "ty": {
                  "Plain": 472
                },
                "default": [
                  0
                ],
                "docs": [
                  " Bounty indices that have been approved but not yet funded."
                ]
              }
            ]
          },
          "calls": {
            "ty": 294
          },
          "event": {
            "ty": 51
          },
          "constants": [
            {
              "name": "BountyDepositBase",
              "ty": 6,
              "value": [
                0,
                16,
                165,
                212,
                232,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount held on deposit for placing a bounty proposal."
              ]
            },
            {
              "name": "BountyDepositPayoutDelay",
              "ty": 4,
              "value": [
                128,
                112,
                0,
                0
              ],
              "docs": [
                " The delay period for which a bounty beneficiary need to wait before claim the payout."
              ]
            },
            {
              "name": "BountyUpdatePeriod",
              "ty": 4,
              "value": [
                128,
                50,
                2,
                0
              ],
              "docs": [
                " Bounty duration in blocks."
              ]
            },
            {
              "name": "CuratorDepositMultiplier",
              "ty": 475,
              "value": [
                32,
                161,
                7,
                0
              ],
              "docs": [
                " The curator deposit is calculated as a percentage of the curator fee.",
                "",
                " This deposit has optional upper and lower bounds with `CuratorDepositMax` and",
                " `CuratorDepositMin`."
              ]
            },
            {
              "name": "CuratorDepositMax",
              "ty": 145,
              "value": [
                1,
                0,
                64,
                122,
                16,
                243,
                90,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "CuratorDepositMin",
              "ty": 145,
              "value": [
                1,
                0,
                16,
                165,
                212,
                232,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "BountyValueMinimum",
              "ty": 6,
              "value": [
                0,
                80,
                57,
                39,
                140,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum value for a bounty."
              ]
            },
            {
              "name": "DataDepositPerByte",
              "ty": 6,
              "value": [
                0,
                172,
                35,
                252,
                6,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount held on deposit per byte within the tip report reason or bounty description."
              ]
            },
            {
              "name": "MaximumReasonLength",
              "ty": 4,
              "value": [
                136,
                19,
                0,
                0
              ],
              "docs": [
                " Maximum acceptable reason length.",
                "",
                " Benchmarks depend on this value, be sure to update weights file when changing this value"
              ]
            }
          ],
          "error": {
            "ty": 481
          },
          "index": 20,
          "docs": []
        },
        {
          "name": "ChildBounties",
          "storage": {
            "prefix": "ChildBounties",
            "entries": [
              {
                "name": "ChildBountyCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of total child bounties."
                ]
              },
              {
                "name": "ParentChildBounties",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of child bounties per parent bounty.",
                  " Map of parent bounty index to number of child bounties."
                ]
              },
              {
                "name": "ChildBounties",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 46,
                    "value": 482
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Child bounties that have been added."
                ]
              },
              {
                "name": "ChildBountyDescriptions",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 480
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The description of each child-bounty."
                ]
              },
              {
                "name": "ChildrenCuratorFees",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The cumulative child-bounty curator fee for each parent bounty."
                ]
              }
            ]
          },
          "calls": {
            "ty": 295
          },
          "event": {
            "ty": 52
          },
          "constants": [
            {
              "name": "MaxActiveChildBountyCount",
              "ty": 4,
              "value": [
                10,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum number of child bounties that can be added to a parent bounty."
              ]
            },
            {
              "name": "ChildBountyValueMinimum",
              "ty": 6,
              "value": [
                0,
                16,
                165,
                212,
                232,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum value for a child-bounty."
              ]
            }
          ],
          "error": {
            "ty": 484
          },
          "index": 21,
          "docs": []
        },
        {
          "name": "Proxy",
          "storage": {
            "prefix": "Proxy",
            "entries": [
              {
                "name": "Proxies",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 485
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The set of account proxies. Maps the account which has delegated to the accounts",
                  " which are being delegated to, together with the amount held on deposit."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 489
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The announcements made by the proxy (key)."
                ]
              }
            ]
          },
          "calls": {
            "ty": 296
          },
          "event": {
            "ty": 53
          },
          "constants": [
            {
              "name": "ProxyDepositBase",
              "ty": 6,
              "value": [
                0,
                66,
                217,
                74,
                23,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating a proxy.",
                "",
                " This is held for an additional storage item whose value size is",
                " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "ProxyDepositFactor",
              "ty": 6,
              "value": [
                64,
                179,
                213,
                9,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per proxy added.",
                "",
                " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                " into account `32 + proxy_type.encode().len()` bytes of data."
              ]
            },
            {
              "name": "MaxProxies",
              "ty": 4,
              "value": [
                32,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of proxies allowed for a single account."
              ]
            },
            {
              "name": "MaxPending",
              "ty": 4,
              "value": [
                32,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of time-delayed announcements that are allowed to be pending."
              ]
            },
            {
              "name": "AnnouncementDepositBase",
              "ty": 6,
              "value": [
                0,
                66,
                217,
                74,
                23,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating an announcement.",
                "",
                " This is held when a new storage item holding a `Balance` is created (typically 16",
                " bytes)."
              ]
            },
            {
              "name": "AnnouncementDepositFactor",
              "ty": 6,
              "value": [
                128,
                102,
                171,
                19,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per announcement made.",
                "",
                " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                " into a pre-existing storage value."
              ]
            }
          ],
          "error": {
            "ty": 493
          },
          "index": 22,
          "docs": []
        },
        {
          "name": "Aura",
          "storage": {
            "prefix": "Aura",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 494
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current authority set."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "ty": {
                  "Plain": 496
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current slot of this block.",
                  "",
                  " This will be set in `on_initialize`."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 33,
          "docs": []
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "entries": [
              {
                "name": "Validators",
                "modifier": "Default",
                "ty": {
                  "Plain": 276
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "ty": {
                  "Plain": 497
                },
                "default": [
                  0
                ],
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "ty": {
                  "Plain": 422
                },
                "default": [
                  0
                ],
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 299
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 499,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "ty": 298
          },
          "event": {
            "ty": 56
          },
          "constants": [],
          "error": {
            "ty": 501
          },
          "index": 32,
          "docs": []
        },
        {
          "name": "ParachainStaking",
          "storage": {
            "prefix": "ParachainStaking",
            "entries": [
              {
                "name": "MaxSelectedCandidates",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The maximum number of collator candidates selected at each round."
                ]
              },
              {
                "name": "Round",
                "modifier": "Default",
                "ty": {
                  "Plain": 502
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  20,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current round number and next round scheduled transition."
                ]
              },
              {
                "name": "LastDelegation",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 503
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Delegation information for the latest session in which a delegator",
                  " delegated.",
                  "",
                  " It maps from an account to the number of delegations in the last",
                  " session in which they (re-)delegated."
                ]
              },
              {
                "name": "DelegatorState",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 504
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Delegation staking information.",
                  "",
                  " It maps from an account to its delegation details."
                ]
              },
              {
                "name": "CandidatePool",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 505
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The staking information for a candidate.",
                  "",
                  " It maps from an account to its information.",
                  " Moreover, it counts the number of candidates."
                ]
              },
              {
                "name": "CounterForCandidatePool",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "TotalCollatorStake",
                "modifier": "Default",
                "ty": {
                  "Plain": 511
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Total funds locked to back the currently selected collators.",
                  " The sum of all collator and their delegator stakes.",
                  "",
                  " Note: There are more funds locked by this pallet, since the backing for",
                  " non collating candidates is not included in [TotalCollatorStake]."
                ]
              },
              {
                "name": "TopCandidates",
                "modifier": "Default",
                "ty": {
                  "Plain": 512
                },
                "default": [
                  0
                ],
                "docs": [
                  " The collator candidates with the highest amount of stake.",
                  "",
                  " Each time the stake of a collator is increased, it is checked whether",
                  " this pushes another candidate out of the list. When the stake is",
                  " reduced however, it is not checked if another candidate has more stake,",
                  " since this would require iterating over the entire [CandidatePool].",
                  "",
                  " There must always be more candidates than [MaxSelectedCandidates] so",
                  " that a collator can drop out of the collator set by reducing their",
                  " stake."
                ]
              },
              {
                "name": "InflationConfig",
                "modifier": "Default",
                "ty": {
                  "Plain": 514
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Inflation configuration."
                ]
              },
              {
                "name": "Unstaking",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 517
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The funds waiting to be unstaked.",
                  "",
                  " It maps from accounts to all the funds addressed to them in the future",
                  " blocks."
                ]
              },
              {
                "name": "MaxCollatorCandidateStake",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The maximum amount a collator candidate can stake."
                ]
              },
              {
                "name": "LastRewardReduction",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The year in which the last automatic reduction of the reward rates",
                  " occurred.",
                  "",
                  " It starts at zero at genesis and increments by one every BLOCKS_PER_YEAR",
                  " many blocks."
                ]
              },
              {
                "name": "RewardCount",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The counter of accumulated rewards for an account.",
                  "",
                  " For collators, it reflects the number of authored blocks since the last",
                  " reward raise. Thus, everytime a collator authors a block, the",
                  " counter is increased. It is reset, when the collator increments their",
                  " rewards.",
                  "",
                  " For delegators, it is used to determine the difference between the",
                  " delegator and corresponding collator when incrementing the delegator's",
                  " rewards. In this case, the counter is never incremented but reset to the",
                  " collator one when the delegator reward increment happens."
                ]
              },
              {
                "name": "Rewards",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The accumulated rewards for collator candidates and delegators.",
                  "",
                  " It maps from accounts to their total rewards since the last payout."
                ]
              },
              {
                "name": "ForceNewRound",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 302
          },
          "event": {
            "ty": 57
          },
          "constants": [
            {
              "name": "MinBlocksPerRound",
              "ty": 4,
              "value": [
                44,
                1,
                0,
                0
              ],
              "docs": [
                " Minimum number of blocks validation rounds can last."
              ]
            },
            {
              "name": "DefaultBlocksPerRound",
              "ty": 4,
              "value": [
                88,
                2,
                0,
                0
              ],
              "docs": [
                " Default number of blocks validation rounds last, as set in the",
                " genesis configuration."
              ]
            },
            {
              "name": "StakeDuration",
              "ty": 4,
              "value": [
                224,
                196,
                0,
                0
              ],
              "docs": [
                " Number of blocks for which unstaked balance will still be locked",
                " before it can be unlocked by actively calling the extrinsic",
                " `unlock_unstaked`."
              ]
            },
            {
              "name": "ExitQueueDelay",
              "ty": 4,
              "value": [
                2,
                0,
                0,
                0
              ],
              "docs": [
                " Number of rounds a collator has to stay active after submitting a",
                " request to leave the set of collator candidates."
              ]
            },
            {
              "name": "MinCollators",
              "ty": 4,
              "value": [
                8,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum number of collators selected from the set of candidates at",
                " every validation round."
              ]
            },
            {
              "name": "MinRequiredCollators",
              "ty": 4,
              "value": [
                4,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum number of collators which cannot leave the network if there",
                " are no others."
              ]
            },
            {
              "name": "MaxDelegationsPerRound",
              "ty": 4,
              "value": [
                1,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum number of delegations which can be made within the same",
                " round.",
                "",
                " NOTE: To prevent re-delegation-reward attacks, we should keep this",
                " to be one."
              ]
            },
            {
              "name": "MaxDelegatorsPerCollator",
              "ty": 4,
              "value": [
                40,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum number of delegators a single collator can have."
              ]
            },
            {
              "name": "MaxTopCandidates",
              "ty": 4,
              "value": [
                40,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum size of the top candidates set."
              ]
            },
            {
              "name": "MinCollatorStake",
              "ty": 6,
              "value": [
                0,
                128,
                224,
                55,
                121,
                195,
                17,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum stake required for any account to be elected as validator",
                " for a round."
              ]
            },
            {
              "name": "MinCollatorCandidateStake",
              "ty": 6,
              "value": [
                0,
                128,
                224,
                55,
                121,
                195,
                17,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum stake required for any account to be added to the set of",
                " candidates."
              ]
            },
            {
              "name": "MinDelegatorStake",
              "ty": 6,
              "value": [
                0,
                160,
                114,
                78,
                24,
                9,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum stake required for any account to become a delegator."
              ]
            },
            {
              "name": "CollatorRewardRateDecay",
              "ty": 58,
              "value": [
                0,
                196,
                52,
                63,
                67,
                119,
                0,
                13
              ],
              "docs": [
                " The annual decay rate of the collator rewards"
              ]
            },
            {
              "name": "MaxUnstakeRequests",
              "ty": 4,
              "value": [
                10,
                0,
                0,
                0
              ],
              "docs": [
                " Max number of concurrent active unstaking requests before",
                " unlocking.",
                "",
                " NOTE: To protect against irremovability of a candidate or delegator,",
                " we only allow for MaxUnstakeRequests - 1 many manual unstake",
                " requests. The last one serves as a placeholder for the cases of",
                " calling either `kick_delegator`, force_remove_candidate` or",
                " `execute_leave_candidates`. Otherwise, a user could max out their",
                " unstake requests and prevent themselves from being kicked from the",
                " set of candidates/delegators until they unlock their funds."
              ]
            },
            {
              "name": "NetworkRewardStart",
              "ty": 4,
              "value": [
                255,
                255,
                255,
                255
              ],
              "docs": [
                " The starting block number for the network rewards. Once the current",
                " block number exceeds this start, the beneficiary will receive the",
                " configured reward in each block."
              ]
            },
            {
              "name": "NetworkRewardRate",
              "ty": 58,
              "value": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The rate in percent for the network rewards which are based on the",
                " maximum number of collators and the maximum amount a collator can",
                " stake."
              ]
            }
          ],
          "error": {
            "ty": 521
          },
          "index": 35,
          "docs": []
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "entries": [
              {
                "name": "Author",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " Author of current block."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 30,
          "docs": []
        },
        {
          "name": "AuraExt",
          "storage": {
            "prefix": "AuraExt",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 494
                },
                "default": [
                  0
                ],
                "docs": [
                  " Serves as cache for the authorities.",
                  "",
                  " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                  " but we require the old authorities to verify the seal when validating a PoV. This will",
                  " always be updated to the latest AuRa authorities in `on_finalize`."
                ]
              },
              {
                "name": "SlotInfo",
                "modifier": "Optional",
                "ty": {
                  "Plain": 522
                },
                "default": [
                  0
                ],
                "docs": [
                  " Current slot paired with a number of authored blocks.",
                  "",
                  " Updated on each block initialization."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 34,
          "docs": []
        },
        {
          "name": "XcmpQueue",
          "storage": {
            "prefix": "XcmpQueue",
            "entries": [
              {
                "name": "InboundXcmpSuspended",
                "modifier": "Default",
                "ty": {
                  "Plain": 523
                },
                "default": [
                  0
                ],
                "docs": [
                  " The suspended inbound XCMP channels. All others are not suspended.",
                  "",
                  " This is a `StorageValue` instead of a `StorageMap` since we expect multiple reads per block",
                  " to different keys with a one byte payload. The access to `BoundedBTreeSet` will be cached",
                  " within the block and therefore only included once in the proof size.",
                  "",
                  " NOTE: The PoV benchmarking cannot know this and will over-estimate, but the actual proof",
                  " will be smaller."
                ]
              },
              {
                "name": "OutboundXcmpStatus",
                "modifier": "Default",
                "ty": {
                  "Plain": 526
                },
                "default": [
                  0
                ],
                "docs": [
                  " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                  " and last outbound message. If the two indices are equal, then it indicates an empty",
                  " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                  " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                  " case of the need to send a high-priority signal message this block.",
                  " The bool is true if there is a signal message waiting to be sent."
                ]
              },
              {
                "name": "OutboundXcmpMessages",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Twox64Concat"
                    ],
                    "key": 529,
                    "value": 13
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The messages outbound in a given XCMP channel."
                ]
              },
              {
                "name": "SignalMessages",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 139,
                    "value": 13
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Any signal messages waiting to be sent."
                ]
              },
              {
                "name": "QueueConfig",
                "modifier": "Default",
                "ty": {
                  "Plain": 530
                },
                "default": [
                  32,
                  0,
                  0,
                  0,
                  48,
                  0,
                  0,
                  0,
                  8,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The configuration which controls the dynamics of the outbound queue."
                ]
              },
              {
                "name": "QueueSuspended",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
                ]
              },
              {
                "name": "DeliveryFeeFactor",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 139,
                    "value": 151
                  }
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The factor to multiply the base delivery fee by."
                ]
              }
            ]
          },
          "calls": {
            "ty": 303
          },
          "event": {
            "ty": 59
          },
          "constants": [
            {
              "name": "MaxInboundSuspended",
              "ty": 4,
              "value": [
                232,
                3,
                0,
                0
              ],
              "docs": [
                " The maximum number of inbound XCMP channels that can be suspended simultaneously.",
                "",
                " Any further channel suspensions will fail and messages may get dropped without further",
                " notice. Choosing a high value (1000) is okay; the trade-off that is described in",
                " [`InboundXcmpSuspended`] still applies at that scale."
              ]
            }
          ],
          "error": {
            "ty": 531
          },
          "index": 40,
          "docs": []
        },
        {
          "name": "PolkadotXcm",
          "storage": {
            "prefix": "PolkadotXcm",
            "entries": [
              {
                "name": "QueryCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The latest available query index."
                ]
              },
              {
                "name": "Queries",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 11,
                    "value": 532
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The ongoing queries."
                ]
              },
              {
                "name": "AssetTraps",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The existing asset traps.",
                  "",
                  " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                  " times this pair has been trapped (usually just 1 if it exists at all)."
                ]
              },
              {
                "name": "SafeXcmVersion",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                  " then the destinations whose XCM version is unknown are considered unreachable."
                ]
              },
              {
                "name": "SupportedVersion",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 536,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The Latest versions that we know various locations support."
                ]
              },
              {
                "name": "VersionNotifiers",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 536,
                    "value": 11
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " All locations that we have requested version notifications from."
                ]
              },
              {
                "name": "VersionNotifyTargets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 536,
                    "value": 537
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The target locations that are subscribed to our version changes, as well as the most recent",
                  " of our versions we informed them of."
                ]
              },
              {
                "name": "VersionDiscoveryQueue",
                "modifier": "Default",
                "ty": {
                  "Plain": 538
                },
                "default": [
                  0
                ],
                "docs": [
                  " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                  " the `u32` counter is the number of times that a send to the destination has been attempted,",
                  " which is used as a prioritization."
                ]
              },
              {
                "name": "CurrentMigration",
                "modifier": "Optional",
                "ty": {
                  "Plain": 541
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current migration's stage, if any."
                ]
              },
              {
                "name": "RemoteLockedFungibles",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 543,
                    "value": 545
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Fungible assets which we know are locked on a remote chain."
                ]
              },
              {
                "name": "LockedFungibles",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 549
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Fungible assets which we know are locked on this chain."
                ]
              },
              {
                "name": "XcmExecutionSuspended",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " Global suspension state of the XCM executor."
                ]
              }
            ]
          },
          "calls": {
            "ty": 304
          },
          "event": {
            "ty": 60
          },
          "constants": [],
          "error": {
            "ty": 552
          },
          "index": 41,
          "docs": []
        },
        {
          "name": "CumulusXcm",
          "storage": null,
          "calls": {
            "ty": 325
          },
          "event": {
            "ty": 116
          },
          "constants": [],
          "error": null,
          "index": 42,
          "docs": []
        },
        {
          "name": "DmpQueue",
          "storage": {
            "prefix": "DmpQueue",
            "entries": [
              {
                "name": "MigrationStatus",
                "modifier": "Default",
                "ty": {
                  "Plain": 553
                },
                "default": [
                  0
                ],
                "docs": [
                  " The migration state of this pallet."
                ]
              }
            ]
          },
          "calls": {
            "ty": 326
          },
          "event": {
            "ty": 117
          },
          "constants": [],
          "error": null,
          "index": 43,
          "docs": []
        },
        {
          "name": "Vesting",
          "storage": {
            "prefix": "Vesting",
            "entries": [
              {
                "name": "Vesting",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 556
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Information regarding the vesting of a given account."
                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 558
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage version of the pallet.",
                  "",
                  " New networks start with latest version, as determined by the genesis build."
                ]
              }
            ]
          },
          "calls": {
            "ty": 327
          },
          "event": {
            "ty": 118
          },
          "constants": [
            {
              "name": "MinVestedTransfer",
              "ty": 6,
              "value": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum amount transferred to call `vested_transfer`."
              ]
            },
            {
              "name": "MaxVestingSchedules",
              "ty": 4,
              "value": [
                10,
                0,
                0,
                0
              ],
              "docs": []
            }
          ],
          "error": {
            "ty": 559
          },
          "index": 50,
          "docs": []
        },
        {
          "name": "Utility",
          "storage": null,
          "calls": {
            "ty": 329
          },
          "event": {
            "ty": 119
          },
          "constants": [
            {
              "name": "batched_calls_limit",
              "ty": 4,
              "value": [
                170,
                42,
                0,
                0
              ],
              "docs": [
                " The limit on the number of batched calls."
              ]
            }
          ],
          "error": {
            "ty": 560
          },
          "index": 51,
          "docs": []
        },
        {
          "name": "Currencies",
          "storage": null,
          "calls": {
            "ty": 338
          },
          "event": null,
          "constants": [
            {
              "name": "GetNativeCurrencyId",
              "ty": 121,
              "value": [
                0
              ],
              "docs": []
            }
          ],
          "error": {
            "ty": 561
          },
          "index": 52,
          "docs": []
        },
        {
          "name": "Tokens",
          "storage": {
            "prefix": "Tokens",
            "entries": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 121,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total issuance of a token type."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Twox64Concat"
                    ],
                    "key": 562,
                    "value": 563
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Any liquidity locks of a token type under an account.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Accounts",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Twox64Concat"
                    ],
                    "key": 562,
                    "value": 566
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The balance of a token type under an account.",
                  "",
                  " NOTE: If the total is ever zero, decrease account ref account.",
                  "",
                  " NOTE: This is only used in the case that this module is used to store",
                  " balances."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Twox64Concat"
                    ],
                    "key": 562,
                    "value": 567
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Named reserves on some account balances."
                ]
              }
            ]
          },
          "calls": {
            "ty": 339
          },
          "event": {
            "ty": 120
          },
          "constants": [
            {
              "name": "MaxLocks",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": []
            },
            {
              "name": "MaxReserves",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            }
          ],
          "error": {
            "ty": 570
          },
          "index": 53,
          "docs": []
        },
        {
          "name": "XTokens",
          "storage": null,
          "calls": {
            "ty": 340
          },
          "event": {
            "ty": 124
          },
          "constants": [
            {
              "name": "SelfLocation",
              "ty": 63,
              "value": [
                0,
                0
              ],
              "docs": [
                " Self chain location."
              ]
            },
            {
              "name": "BaseXcmWeight",
              "ty": 9,
              "value": [
                2,
                70,
                195,
                35,
                0
              ],
              "docs": [
                " Base XCM weight.",
                "",
                " The actually weight for an XCM message is `T::BaseXcmWeight +",
                " T::Weigher::weight(&msg)`."
              ]
            }
          ],
          "error": {
            "ty": 571
          },
          "index": 54,
          "docs": []
        },
        {
          "name": "Identity",
          "storage": {
            "prefix": "Identity",
            "entries": [
              {
                "name": "IdentityOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 572
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Information that is pertinent to identify the entity behind an account. First item is the",
                  " registration, second is the account's primary username.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "SuperOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 377
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The super-identity of an alternative \"sub\" identity together with its name, within that",
                  " context. If the account is not some other account's sub-identity, then just `None`."
                ]
              },
              {
                "name": "SubsOf",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 578
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Alternative \"sub\" identities of this account.",
                  "",
                  " The first item is the deposit, the second is a vector of the accounts.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "Registrars",
                "modifier": "Default",
                "ty": {
                  "Plain": 580
                },
                "default": [
                  0
                ],
                "docs": [
                  " The set of registrars. Not expected to get very big as can only be added through a",
                  " special origin (likely a council motion).",
                  "",
                  " The index into this can be cast to `RegistrarIndex` to get a valid value."
                ]
              },
              {
                "name": "UsernameAuthorities",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 584
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map of the accounts who are authorized to grant usernames."
                ]
              },
              {
                "name": "AccountOfUsername",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 126,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Reverse lookup from `username` to the `AccountId` that has registered it. The value should",
                  " be a key in the `IdentityOf` map, but it may not if the user has cleared their identity.",
                  "",
                  " Multiple usernames may map to the same `AccountId`, but `IdentityOf` will only map to one",
                  " primary username."
                ]
              },
              {
                "name": "PendingUsernames",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 126,
                    "value": 586
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Usernames that an authority has granted, but that the account controller has not confirmed",
                  " that they want it. Used primarily in cases where the `AccountId` cannot provide a signature",
                  " because they are a pure proxy, multisig, etc. In order to confirm it, they should call",
                  " [`Call::accept_username`].",
                  "",
                  " First tuple item is the account and second is the acceptance deadline."
                ]
              }
            ]
          },
          "calls": {
            "ty": 342
          },
          "event": {
            "ty": 125
          },
          "constants": [
            {
              "name": "BasicDeposit",
              "ty": 6,
              "value": [
                0,
                160,
                114,
                78,
                24,
                9,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount held on deposit for a registered identity."
              ]
            },
            {
              "name": "ByteDeposit",
              "ty": 6,
              "value": [
                0,
                202,
                154,
                59,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount held on deposit per encoded byte for a registered identity."
              ]
            },
            {
              "name": "SubAccountDeposit",
              "ty": 6,
              "value": [
                0,
                32,
                74,
                169,
                209,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount held on deposit for a registered subaccount. This should account for the fact",
                " that one storage item's value will increase by the size of an account ID, and there will",
                " be another trie item whose value is the size of an account ID plus 32 bytes."
              ]
            },
            {
              "name": "MaxSubAccounts",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of sub-accounts allowed per identified account."
              ]
            },
            {
              "name": "MaxRegistrars",
              "ty": 4,
              "value": [
                20,
                0,
                0,
                0
              ],
              "docs": [
                " Maxmimum number of registrars allowed in the system. Needed to bound the complexity",
                " of, e.g., updating judgements."
              ]
            },
            {
              "name": "PendingUsernameExpiration",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The number of blocks within which a username grant must be accepted."
              ]
            },
            {
              "name": "MaxSuffixLength",
              "ty": 4,
              "value": [
                8,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum length of a suffix."
              ]
            },
            {
              "name": "MaxUsernameLength",
              "ty": 4,
              "value": [
                32,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum length of a username, including its suffix and any system-added delimiters."
              ]
            }
          ],
          "error": {
            "ty": 587
          },
          "index": 55,
          "docs": []
        },
        {
          "name": "Contracts",
          "storage": {
            "prefix": "Contracts",
            "entries": [
              {
                "name": "PristineCode",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 588
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from a contract's code hash to its code."
                ]
              },
              {
                "name": "CodeInfoOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 589
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from a contract's code hash to its code info."
                ]
              },
              {
                "name": "Nonce",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " This is a **monotonic** counter incremented on contract instantiation.",
                  "",
                  " This is used in order to generate unique trie ids for contracts.",
                  " The trie id of a new contract is calculated from hash(account_id, nonce).",
                  " The nonce is required because otherwise the following sequence would lead to",
                  " a possible collision of storage:",
                  "",
                  " 1. Create a new contract.",
                  " 2. Terminate the contract.",
                  " 3. Immediately recreate the contract with the same account_id.",
                  "",
                  " This is bad because the contents of a trie are deleted lazily and there might be",
                  " storage of the old instantiation still in it when the new contract is created. Please",
                  " note that we can't replace the counter by the block number because the sequence above",
                  " can happen in the same block. We also can't keep the account counter in memory only",
                  " because storage is the only way to communicate across different extrinsics in the",
                  " same block.",
                  "",
                  " # Note",
                  "",
                  " Do not use it to determine the number of contracts. It won't be decremented if",
                  " a contract is destroyed."
                ]
              },
              {
                "name": "ContractInfoOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 590
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The code associated with a given account.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "DeletionQueue",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 431
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Evicted contracts that await child trie deletion.",
                  "",
                  " Child trie deletion is a heavy operation depending on the amount of storage items",
                  " stored in said trie. Therefore this operation is performed lazily in `on_idle`."
                ]
              },
              {
                "name": "DeletionQueueCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 595
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A pair of monotonic counters used to track the latest contract marked for deletion",
                  " and the latest deleted contract in queue."
                ]
              },
              {
                "name": "MigrationInProgress",
                "modifier": "Optional",
                "ty": {
                  "Plain": 555
                },
                "default": [
                  0
                ],
                "docs": [
                  " A migration can span across multiple blocks. This storage defines a cursor to track the",
                  " progress of the migration, enabling us to resume from the last completed position."
                ]
              }
            ]
          },
          "calls": {
            "ty": 386
          },
          "event": {
            "ty": 127
          },
          "constants": [
            {
              "name": "Schedule",
              "ty": 596,
              "value": [
                4,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                4,
                0,
                0,
                128,
                0,
                0,
                0,
                16,
                0,
                0,
                0,
                0,
                16,
                0,
                0,
                0,
                1,
                0,
                0,
                32,
                0,
                0,
                0,
                0,
                64,
                0,
                0,
                0,
                0,
                0,
                8,
                39,
                19,
                0,
                0,
                182,
                181,
                20,
                0,
                24,
                242,
                34,
                221,
                6,
                241,
                41,
                186,
                248,
                21,
                7,
                1,
                42,
                118,
                43,
                26,
                0,
                24,
                54,
                44,
                11,
                0,
                12,
                210,
                23,
                10,
                0,
                12,
                74,
                251,
                20,
                0,
                24,
                90,
                173,
                22,
                0,
                24,
                182,
                22,
                101,
                0,
                24,
                162,
                51,
                21,
                0,
                24,
                202,
                148,
                20,
                0,
                24,
                146,
                48,
                20,
                0,
                24,
                18,
                159,
                20,
                0,
                24,
                30,
                76,
                88,
                0,
                56,
                122,
                65,
                17,
                0,
                24,
                113,
                16,
                0,
                0,
                180,
                29,
                6,
                0,
                3,
                36,
                112,
                147,
                77,
                73,
                82,
                178,
                146,
                125,
                0,
                40,
                82,
                120,
                232,
                0,
                40,
                254,
                54,
                174,
                30,
                49,
                39,
                109,
                11,
                0,
                98,
                185,
                14,
                0,
                28,
                57,
                17,
                0,
                166,
                135,
                129,
                31,
                149,
                4,
                141,
                8,
                0,
                185,
                8,
                4,
                246,
                226,
                38,
                72,
                73,
                48,
                138,
                48,
                116,
                31,
                133,
                4,
                16,
                4,
                30,
                129,
                72,
                7,
                133,
                4,
                77,
                1,
                4,
                210,
                53,
                82,
                7,
                165,
                4,
                201,
                15,
                4,
                134,
                66,
                114,
                31,
                165,
                4,
                13,
                10,
                4,
                238,
                76,
                249,
                38,
                97,
                39,
                38,
                31,
                200,
                118,
                133,
                42,
                238,
                125,
                80,
                101,
                53,
                41,
                14,
                78,
                210,
                144,
                173,
                81,
                93,
                17,
                0,
                110,
                125,
                141,
                247,
                173,
                42,
                2,
                101,
                205,
                29,
                213,
                39,
                173,
                30,
                0,
                49,
                32,
                0,
                114,
                115,
                24,
                0,
                32,
                185,
                17,
                0,
                238,
                248,
                48,
                0,
                32,
                73,
                53,
                0,
                38,
                83,
                29,
                0,
                32,
                153,
                19,
                0,
                202,
                215,
                30,
                0,
                32,
                145,
                19,
                0,
                22,
                234,
                249,
                10,
                53,
                1,
                110,
                94,
                217,
                2,
                168,
                18,
                192,
                97,
                13,
                193,
                1,
                45,
                96,
                4,
                190,
                6,
                11,
                0,
                12,
                198,
                106,
                19,
                0,
                160,
                42,
                84,
                9,
                0,
                12,
                18,
                9,
                102,
                31,
                185,
                40,
                14,
                51,
                53,
                31,
                33,
                40
              ],
              "docs": [
                " Cost schedule and limits."
              ]
            },
            {
              "name": "DepositPerByte",
              "ty": 6,
              "value": [
                64,
                75,
                76,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of balance a caller has to pay for each byte of storage.",
                "",
                " # Note",
                "",
                " Changing this value for an existing chain might need a storage migration."
              ]
            },
            {
              "name": "DefaultDepositLimit",
              "ty": 6,
              "value": [
                0,
                0,
                160,
                143,
                230,
                97,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Fallback value to limit the storage deposit if it's not being set by the caller."
              ]
            },
            {
              "name": "DepositPerItem",
              "ty": 6,
              "value": [
                0,
                232,
                118,
                72,
                23,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of balance a caller has to pay for each storage item.",
                "",
                " # Note",
                "",
                " Changing this value for an existing chain might need a storage migration."
              ]
            },
            {
              "name": "CodeHashLockupDepositPercent",
              "ty": 417,
              "value": [
                0,
                163,
                225,
                17
              ],
              "docs": [
                " The percentage of the storage deposit that should be held for using a code hash.",
                " Instantiating a contract, or calling [`chain_extension::Ext::add_delegate_dependency`]",
                " protects the code from being removed. In order to prevent abuse these actions are",
                " protected with a percentage of the code deposit."
              ]
            },
            {
              "name": "MaxCodeLen",
              "ty": 4,
              "value": [
                0,
                236,
                1,
                0
              ],
              "docs": [
                " The maximum length of a contract code in bytes.",
                "",
                " The value should be chosen carefully taking into the account the overall memory limit",
                " your runtime has, as well as the [maximum allowed callstack",
                " depth](#associatedtype.CallStack). Look into the `integrity_test()` for some insights."
              ]
            },
            {
              "name": "MaxStorageKeyLen",
              "ty": 4,
              "value": [
                128,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum allowable length in bytes for storage keys."
              ]
            },
            {
              "name": "MaxDelegateDependencies",
              "ty": 4,
              "value": [
                32,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of delegate_dependencies that a contract can lock with",
                " [`chain_extension::Ext::add_delegate_dependency`]."
              ]
            },
            {
              "name": "UnsafeUnstableInterface",
              "ty": 30,
              "value": [
                1
              ],
              "docs": [
                " Make contract callable functions marked as `#[unstable]` available.",
                "",
                " Contracts that use `#[unstable]` functions won't be able to be uploaded unless",
                " this is set to `true`. This is only meant for testnets and dev nodes in order to",
                " experiment with new features.",
                "",
                " # Warning",
                "",
                " Do **not** set to `true` on productions chains."
              ]
            },
            {
              "name": "MaxDebugBufferLen",
              "ty": 4,
              "value": [
                0,
                0,
                32,
                0
              ],
              "docs": [
                " The maximum length of the debug buffer in bytes."
              ]
            },
            {
              "name": "Environment",
              "ty": 600,
              "value": [],
              "docs": [
                " Type that bundles together all the runtime configurable interface types.",
                "",
                " This is not a real config. We just mention the type here as constant so that",
                " its type appears in the metadata. Only valid value is `()`."
              ]
            }
          ],
          "error": {
            "ty": 607
          },
          "index": 56,
          "docs": []
        },
        {
          "name": "RandomnessCollectiveFlip",
          "storage": {
            "prefix": "RandomnessCollectiveFlip",
            "entries": [
              {
                "name": "RandomMaterial",
                "modifier": "Default",
                "ty": {
                  "Plain": 608
                },
                "default": [
                  0
                ],
                "docs": [
                  " Series of block headers from the last 81 blocks that acts as random seed material. This",
                  " is arranged as a ring buffer with `block_number % 81` being the index into the `Vec` of",
                  " the oldest hash."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 57,
          "docs": []
        },
        {
          "name": "DiaOracleModule",
          "storage": {
            "prefix": "DiaOracleModule",
            "entries": [
              {
                "name": "AuthorizedAccounts",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 43
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of all authorized accounts"
                ]
              },
              {
                "name": "SupportedCurrencies",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 609,
                    "value": 43
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of all supported currencies"
                ]
              },
              {
                "name": "BatchingApi",
                "modifier": "Optional",
                "ty": {
                  "Plain": 13
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "CoinInfosMap",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 609,
                    "value": 134
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Map of all the coins names to their respective info and price"
                ]
              }
            ]
          },
          "calls": {
            "ty": 389
          },
          "event": {
            "ty": 130
          },
          "constants": [],
          "error": {
            "ty": 610
          },
          "index": 58,
          "docs": []
        },
        {
          "name": "ZenlinkProtocol",
          "storage": {
            "prefix": "ZenlinkProtocol",
            "entries": [
              {
                "name": "ForeignLedger",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 611,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Foreign foreign storage",
                  " The number of units of assets held by any given account."
                ]
              },
              {
                "name": "ForeignMeta",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 136,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " TWOX-NOTE: `AssetId` is trusted, so this is safe."
                ]
              },
              {
                "name": "ForeignList",
                "modifier": "Default",
                "ty": {
                  "Plain": 137
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "KLast",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 612,
                    "value": 613
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Refer: https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2Pair.sol#L88",
                  " Last unliquidated protocol fee;"
                ]
              },
              {
                "name": "FeeMeta",
                "modifier": "Default",
                "ty": {
                  "Plain": 615
                },
                "default": [
                  0,
                  0
                ],
                "docs": [
                  " (Option<fee_receiver>, fee_point)"
                ]
              },
              {
                "name": "FeeReceiver",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 136,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " AssetId => fee_receiver"
                ]
              },
              {
                "name": "LiquidityPairs",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 612,
                    "value": 616
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "PairStatuses",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 612,
                    "value": 617
                  }
                },
                "default": [
                  2
                ],
                "docs": [
                  " (T::AssetId, T::AssetId) -> PairStatus"
                ]
              },
              {
                "name": "BootstrapPersonalSupply",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 621,
                    "value": 620
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "BootstrapEndStatus",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 612,
                    "value": 617
                  }
                },
                "default": [
                  2
                ],
                "docs": [
                  " End status of bootstrap",
                  "",
                  " BootstrapEndStatus: map bootstrap pair => pairStatus"
                ]
              },
              {
                "name": "BootstrapRewards",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 612,
                    "value": 622
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "BootstrapLimits",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 612,
                    "value": 622
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 390
          },
          "event": {
            "ty": 135
          },
          "constants": [
            {
              "name": "PalletId",
              "ty": 476,
              "value": [
                47,
                122,
                101,
                110,
                108,
                105,
                110,
                107
              ],
              "docs": [
                " This pallet id."
              ]
            }
          ],
          "error": {
            "ty": 623
          },
          "index": 59,
          "docs": []
        },
        {
          "name": "Currency",
          "storage": null,
          "calls": null,
          "event": null,
          "constants": [
            {
              "name": "GetRelayChainCurrencyId",
              "ty": 121,
              "value": [
                1,
                0
              ],
              "docs": [
                " Relay chain currency e.g. DOT/KSM"
              ]
            }
          ],
          "error": {
            "ty": 624
          },
          "index": 60,
          "docs": []
        },
        {
          "name": "Fee",
          "storage": {
            "prefix": "Fee",
            "entries": [
              {
                "name": "IssueFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " # Issue",
                  " Fee share that users need to pay to issue tokens."
                ]
              },
              {
                "name": "IssueGriefingCollateral",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Default griefing collateral (e.g. DOT/KSM) as a percentage of the locked",
                  " collateral of a Vault a user has to lock to issue tokens."
                ]
              },
              {
                "name": "RedeemFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " # Redeem",
                  " Fee share that users need to pay to redeem tokens."
                ]
              },
              {
                "name": "PremiumRedeemFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " # Vault Registry",
                  " If users execute a redeem with a Vault flagged for premium redeem,",
                  " they can earn a collateral premium, slashed from the Vault."
                ]
              },
              {
                "name": "PunishmentFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Fee that a Vault has to pay if it fails to execute redeem or replace requests",
                  " (for redeem, on top of the slashed value of the request). The fee is",
                  " paid in collateral based on the token amount at the current exchange rate."
                ]
              },
              {
                "name": "ReplaceGriefingCollateral",
                "modifier": "Default",
                "ty": {
                  "Plain": 151
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " # Replace",
                  " Default griefing collateral (e.g. DOT/KSM) as a percentage of the to-be-locked collateral",
                  " of the new Vault. This collateral will be slashed and allocated to the replacing Vault",
                  " if the to-be-replaced Vault does not transfer the Stellar assets on time."
                ]
              }
            ]
          },
          "calls": {
            "ty": 392
          },
          "event": null,
          "constants": [
            {
              "name": "FeePalletId",
              "ty": 476,
              "value": [
                109,
                111,
                100,
                47,
                102,
                101,
                101,
                115
              ],
              "docs": [
                " The fee module id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "MaxExpectedValue",
              "ty": 151,
              "value": [
                0,
                0,
                100,
                167,
                179,
                182,
                224,
                13,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum expected value to set the storage fields to."
              ]
            }
          ],
          "error": {
            "ty": 625
          },
          "index": 61,
          "docs": []
        },
        {
          "name": "Issue",
          "storage": {
            "prefix": "Issue",
            "entries": [
              {
                "name": "IssueRequests",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 626
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Users create issue requests to issue tokens. This mapping provides access",
                  " from a unique hash `IssueId` to an `IssueRequest` struct."
                ]
              },
              {
                "name": "IssuePeriod",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The time difference in number of blocks between an issue request is created",
                  " and required completion time by a user. The issue period has an upper limit",
                  " to prevent griefing of vault collateral."
                ]
              },
              {
                "name": "IssueMinimumTransferAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The minimum amount of wrapped assets that is required for issue requests"
                ]
              },
              {
                "name": "LimitVolumeAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 145
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "LimitVolumeCurrencyId",
                "modifier": "Default",
                "ty": {
                  "Plain": 121
                },
                "default": [
                  0
                ],
                "docs": [
                  " CurrencyID that represents the currency in which the volume limit is measured, eg DOT, USDC",
                  " or PEN"
                ]
              },
              {
                "name": "CurrentVolumeAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "IntervalLength",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Represent interval define regular 24 hour intervals (every 24 * 3600 / 12 blocks)"
                ]
              },
              {
                "name": "LastIntervalIndex",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Represent current interval current_block_number / IntervalLength"
                ]
              }
            ]
          },
          "calls": {
            "ty": 393
          },
          "event": {
            "ty": 142
          },
          "constants": [],
          "error": {
            "ty": 628
          },
          "index": 62,
          "docs": []
        },
        {
          "name": "Nomination",
          "storage": {
            "prefix": "Nomination",
            "entries": [
              {
                "name": "NominationEnabled",
                "modifier": "Default",
                "ty": {
                  "Plain": 30
                },
                "default": [
                  0
                ],
                "docs": [
                  " Flag indicating whether this feature is enabled"
                ]
              },
              {
                "name": "Vaults",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 143,
                    "value": 30
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Map of Vaults who have enabled nomination"
                ]
              }
            ]
          },
          "calls": {
            "ty": 394
          },
          "event": {
            "ty": 146
          },
          "constants": [],
          "error": {
            "ty": 629
          },
          "index": 63,
          "docs": []
        },
        {
          "name": "Oracle",
          "storage": {
            "prefix": "Oracle",
            "entries": [
              {
                "name": "MaxDelay",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Maximum delay (milliseconds) for a reported value to be used"
                ]
              },
              {
                "name": "OracleKeys",
                "modifier": "Default",
                "ty": {
                  "Plain": 152
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 630
                },
                "default": [
                  0
                ],
                "docs": [
                  " Build storage at V1 (requires default 0)."
                ]
              }
            ]
          },
          "calls": {
            "ty": 395
          },
          "event": {
            "ty": 147
          },
          "constants": [],
          "error": {
            "ty": 631
          },
          "index": 64,
          "docs": []
        },
        {
          "name": "Redeem",
          "storage": {
            "prefix": "Redeem",
            "entries": [
              {
                "name": "RedeemPeriod",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The time difference in number of blocks between a redeem request is created and required",
                  " completion time by a vault. The redeem period has an upper limit to ensure the user gets",
                  " their Stellar assets in time and to potentially punish a vault for inactivity or stealing",
                  " Stellar assets."
                ]
              },
              {
                "name": "RedeemRequests",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 632
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Users create redeem requests to receive stellar assets in return for their previously issued",
                  " tokens. This mapping provides access from a unique hash redeemId to a Redeem struct."
                ]
              },
              {
                "name": "RedeemMinimumTransferAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The minimum amount of wrapped assets that is accepted for redeem requests"
                ]
              },
              {
                "name": "LimitVolumeAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 145
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "LimitVolumeCurrencyId",
                "modifier": "Default",
                "ty": {
                  "Plain": 121
                },
                "default": [
                  0
                ],
                "docs": [
                  " CurrencyID that represents the currency in which the volume limit is measured, eg DOT, USDC",
                  " or PEN"
                ]
              },
              {
                "name": "CurrentVolumeAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "IntervalLength",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Represent interval define regular 24 hour intervals (every 24 * 3600 / 12 blocks)"
                ]
              },
              {
                "name": "LastIntervalIndex",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Represent current interval current_block_number / IntervalLength"
                ]
              },
              {
                "name": "CancelledRedeemAmount",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 633
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 396
          },
          "event": {
            "ty": 153
          },
          "constants": [],
          "error": {
            "ty": 634
          },
          "index": 65,
          "docs": []
        },
        {
          "name": "Replace",
          "storage": {
            "prefix": "Replace",
            "entries": [
              {
                "name": "ReplaceRequests",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 635
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Vaults create replace requests to transfer locked collateral.",
                  " This mapping provides access from a unique hash to a `ReplaceRequest`."
                ]
              },
              {
                "name": "ReplacePeriod",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The time difference in number of blocks between when a replace request is created",
                  " and required completion time by a vault. The replace period has an upper limit",
                  " to prevent griefing of vault collateral."
                ]
              },
              {
                "name": "ReplaceMinimumTransferAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The minimum amount of wrapped assets that is accepted for replace requests"
                ]
              }
            ]
          },
          "calls": {
            "ty": 397
          },
          "event": {
            "ty": 155
          },
          "constants": [],
          "error": {
            "ty": 637
          },
          "index": 66,
          "docs": []
        },
        {
          "name": "Security",
          "storage": {
            "prefix": "Security",
            "entries": [
              {
                "name": "ParachainStatus",
                "modifier": "Default",
                "ty": {
                  "Plain": 157
                },
                "default": [
                  0
                ],
                "docs": [
                  " Integer/Enum defining the current state of the Spacewalk-Parachain."
                ]
              },
              {
                "name": "Errors",
                "modifier": "Default",
                "ty": {
                  "Plain": 638
                },
                "default": [
                  0
                ],
                "docs": [
                  " Set of ErrorCodes, indicating the reason for an \"Error\" ParachainStatus."
                ]
              },
              {
                "name": "Nonce",
                "modifier": "Default",
                "ty": {
                  "Plain": 613
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Integer increment-only counter, used to prevent collisions when generating identifiers",
                  " for e.g. issue, redeem or replace requests."
                ]
              },
              {
                "name": "ActiveBlockCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Like frame_system::block_number, but this one only increments if the parachain status is",
                  " RUNNING. This variable is used to keep track of durations, such as the issue/redeem/replace",
                  " expiry. If the parachain is not RUNNING, no payment proofs can be submitted, and it wouldn't",
                  " be fair to punish the user/vault. By using this variable we ensure that they have sufficient",
                  " time to submit their proof."
                ]
              }
            ]
          },
          "calls": {
            "ty": 398
          },
          "event": {
            "ty": 156
          },
          "constants": [],
          "error": {
            "ty": 639
          },
          "index": 67,
          "docs": []
        },
        {
          "name": "StellarRelay",
          "storage": {
            "prefix": "StellarRelay",
            "entries": [
              {
                "name": "Organizations",
                "modifier": "Default",
                "ty": {
                  "Plain": 640
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "Validators",
                "modifier": "Default",
                "ty": {
                  "Plain": 641
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "OldOrganizations",
                "modifier": "Default",
                "ty": {
                  "Plain": 640
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "OldValidators",
                "modifier": "Default",
                "ty": {
                  "Plain": 641
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "NewValidatorsEnactmentBlockHeight",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 399
          },
          "event": {
            "ty": 160
          },
          "constants": [
            {
              "name": "OrganizationLimit",
              "ty": 4,
              "value": [
                255,
                0,
                0,
                0
              ],
              "docs": []
            },
            {
              "name": "ValidatorLimit",
              "ty": 4,
              "value": [
                255,
                0,
                0,
                0
              ],
              "docs": []
            },
            {
              "name": "IsPublicNetwork",
              "ty": 30,
              "value": [
                1
              ],
              "docs": []
            }
          ],
          "error": {
            "ty": 642
          },
          "index": 68,
          "docs": []
        },
        {
          "name": "VaultRegistry",
          "storage": {
            "prefix": "VaultRegistry",
            "entries": [
              {
                "name": "MinimumCollateralVault",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 121,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The minimum collateral (e.g. DOT/KSM) a Vault needs to provide to register."
                ]
              },
              {
                "name": "PunishmentDelay",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " If a Vault fails to execute a correct redeem or replace, it is temporarily banned",
                  " from further issue, redeem or replace requests. This value configures the duration",
                  " of this ban (in number of blocks) ."
                ]
              },
              {
                "name": "SystemCollateralCeiling",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 144,
                    "value": 6
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Determines the over-collateralization rate for collateral locked by Vaults, necessary for",
                  " wrapped tokens. This threshold should be greater than the LiquidationCollateralThreshold."
                ]
              },
              {
                "name": "SecureCollateralThreshold",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 144,
                    "value": 151
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Determines the over-collateralization rate for collateral locked by Vaults, necessary for",
                  " wrapped tokens. This threshold should be greater than the LiquidationCollateralThreshold."
                ]
              },
              {
                "name": "PremiumRedeemThreshold",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 144,
                    "value": 151
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Determines the rate for the collateral rate of Vaults, at which users receive a premium,",
                  " allocated from the Vault's collateral, when performing a redeem with this Vault. This",
                  " threshold should be greater than the LiquidationCollateralThreshold."
                ]
              },
              {
                "name": "LiquidationCollateralThreshold",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 144,
                    "value": 151
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Determines the lower bound for the collateral rate in issued tokens. If a Vault’s",
                  " collateral rate drops below this, automatic liquidation (forced Redeem) is triggered."
                ]
              },
              {
                "name": "LiquidationVault",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 144,
                    "value": 643
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "Vaults",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 143,
                    "value": 644
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping of Vaults, using the respective Vault account identifier as key."
                ]
              },
              {
                "name": "VaultStellarPublicKey",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 1
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping of Vaults, using the respective Vault account identifier as key."
                ]
              },
              {
                "name": "TotalUserVaultCollateral",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 144,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Total collateral used for collateral tokens issued by active vaults, excluding the",
                  " liquidation vault"
                ]
              }
            ]
          },
          "calls": {
            "ty": 405
          },
          "event": {
            "ty": 161
          },
          "constants": [
            {
              "name": "PalletId",
              "ty": 476,
              "value": [
                109,
                111,
                100,
                47,
                118,
                114,
                101,
                103
              ],
              "docs": [
                " The vault module id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "GetGriefingCollateralCurrencyId",
              "ty": 121,
              "value": [
                0
              ],
              "docs": [
                " Currency used for griefing collateral, e.g. DOT."
              ]
            }
          ],
          "error": {
            "ty": 645
          },
          "index": 69,
          "docs": []
        },
        {
          "name": "PooledVaultRewards",
          "storage": {
            "prefix": "PooledVaultRewards",
            "entries": [
              {
                "name": "TotalStake",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 121,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total stake deposited to this reward pool."
                ]
              },
              {
                "name": "TotalRewards",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 121,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total unclaimed rewards distributed to this reward pool.",
                  " NOTE: this is currently only used for integration tests."
                ]
              },
              {
                "name": "RewardPerToken",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 646,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Used to compute the rewards for a participant's stake."
                ]
              },
              {
                "name": "Stake",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 647,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The stake of a participant in this reward pool."
                ]
              },
              {
                "name": "RewardTally",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 648,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Accounts for previous changes in stake size."
                ]
              },
              {
                "name": "RewardCurrencies",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 121,
                    "value": 649
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Track the currencies used for rewards."
                ]
              }
            ]
          },
          "calls": {
            "ty": 407
          },
          "event": {
            "ty": 163
          },
          "constants": [
            {
              "name": "MaxRewardCurrencies",
              "ty": 4,
              "value": [
                10,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of reward currencies."
              ]
            }
          ],
          "error": {
            "ty": 651
          },
          "index": 70,
          "docs": []
        },
        {
          "name": "VaultStaking",
          "storage": {
            "prefix": "VaultStaking",
            "entries": [
              {
                "name": "TotalStake",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 652,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total stake - this will increase on deposit and decrease on withdrawal."
                ]
              },
              {
                "name": "TotalCurrentStake",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 652,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total stake - this will increase on deposit and decrease on withdrawal or slashing."
                ]
              },
              {
                "name": "TotalRewards",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 653,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total unclaimed rewards distributed to this reward pool.",
                  " NOTE: this is currently only used for integration tests."
                ]
              },
              {
                "name": "RewardPerToken",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 653,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Used to compute the rewards for a participant's stake."
                ]
              },
              {
                "name": "SlashPerToken",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 652,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Used to compute the amount to slash from a participant's stake."
                ]
              },
              {
                "name": "Stake",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 654,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The stake of a participant in this reward pool."
                ]
              },
              {
                "name": "RewardTally",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 656,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Accounts for previous changes in stake size."
                ]
              },
              {
                "name": "SlashTally",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 654,
                    "value": 164
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Accounts for previous changes in stake size."
                ]
              },
              {
                "name": "Nonce",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 143,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The nonce of the current staking pool, used in force refunds.",
                  " This is a strictly increasing value."
                ]
              },
              {
                "name": "RewardCurrencies",
                "modifier": "Default",
                "ty": {
                  "Plain": 649
                },
                "default": [
                  0
                ],
                "docs": [
                  " store with all the reward currencies in use"
                ]
              }
            ]
          },
          "calls": {
            "ty": 408
          },
          "event": {
            "ty": 166
          },
          "constants": [
            {
              "name": "GetNativeCurrencyId",
              "ty": 121,
              "value": [
                0
              ],
              "docs": []
            }
          ],
          "error": {
            "ty": 658
          },
          "index": 71,
          "docs": []
        },
        {
          "name": "ClientsInfo",
          "storage": {
            "prefix": "ClientsInfo",
            "entries": [
              {
                "name": "CurrentClientReleases",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 169,
                    "value": 168
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping of client name (string literal represented as bytes) to its release details."
                ]
              },
              {
                "name": "PendingClientReleases",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 169,
                    "value": 168
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping of client name (string literal represented as bytes) to its pending release details."
                ]
              },
              {
                "name": "AuthorizedAccounts",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 43
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of all authorized accounts"
                ]
              }
            ]
          },
          "calls": {
            "ty": 409
          },
          "event": {
            "ty": 167
          },
          "constants": [
            {
              "name": "MaxNameLength",
              "ty": 4,
              "value": [
                255,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum length of a client name."
              ]
            },
            {
              "name": "MaxUriLength",
              "ty": 4,
              "value": [
                255,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum length of a client URI."
              ]
            }
          ],
          "error": {
            "ty": 659
          },
          "index": 72,
          "docs": []
        },
        {
          "name": "RewardDistribution",
          "storage": {
            "prefix": "RewardDistribution",
            "entries": [
              {
                "name": "RewardPerBlock",
                "modifier": "Optional",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0
                ],
                "docs": [
                  " Reward per block."
                ]
              },
              {
                "name": "RewardsAdaptedAt",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Last Block were rewards per block were modified"
                ]
              },
              {
                "name": "NativeLiability",
                "modifier": "Optional",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage to keep track of the to-be-minted native rewards"
                ]
              }
            ]
          },
          "calls": {
            "ty": 410
          },
          "event": {
            "ty": 170
          },
          "constants": [
            {
              "name": "DecayInterval",
              "ty": 4,
              "value": [
                192,
                75,
                3,
                0
              ],
              "docs": [
                " Defines the interval (in number of blocks) at which the reward per block decays."
              ]
            },
            {
              "name": "DecayRate",
              "ty": 58,
              "value": [
                0,
                144,
                34,
                236,
                89,
                119,
                133,
                0
              ],
              "docs": [
                " Defines the rate at which the reward per block decays."
              ]
            }
          ],
          "error": {
            "ty": 660
          },
          "index": 73,
          "docs": []
        },
        {
          "name": "TokenAllowance",
          "storage": {
            "prefix": "TokenAllowance",
            "entries": [
              {
                "name": "Approvals",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 661,
                    "value": 6
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Approved balance transfers. Balance is the amount approved for transfer.",
                  " First key is the currency ID, second key is the owner and third key is the delegate."
                ]
              },
              {
                "name": "AllowedCurrencies",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 121,
                    "value": 43
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Currencies that can be used in chain extension"
                ]
              }
            ]
          },
          "calls": {
            "ty": 411
          },
          "event": {
            "ty": 171
          },
          "constants": [
            {
              "name": "MaxAllowedCurrencies",
              "ty": 4,
              "value": [
                0,
                1,
                0,
                0
              ],
              "docs": [
                " The maximum number of allowed currencies."
              ]
            }
          ],
          "error": {
            "ty": 662
          },
          "index": 80,
          "docs": []
        },
        {
          "name": "TreasuryBuyoutExtension",
          "storage": {
            "prefix": "TreasuryBuyoutExtension",
            "entries": [
              {
                "name": "BuyoutLimit",
                "modifier": "Optional",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores buyout limit amount user could buy for a period of `BuyoutPeriod` blocks.",
                  " Each user can buyout up to this amount in a period. After each period passes, buyout limit is reset",
                  " When `None` - buyouts are not limited"
                ]
              },
              {
                "name": "Buyouts",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 178
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores amount of buyouts (amount, block number of last buyout)"
                ]
              },
              {
                "name": "AllowedCurrencies",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 121,
                    "value": 43
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores allowed currencies for buyout"
                ]
              }
            ]
          },
          "calls": {
            "ty": 412
          },
          "event": {
            "ty": 173
          },
          "constants": [
            {
              "name": "TreasuryAccount",
              "ty": 0,
              "value": [
                109,
                111,
                100,
                108,
                112,
                121,
                47,
                116,
                114,
                115,
                114,
                121,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Used for getting the treasury account"
              ]
            },
            {
              "name": "BuyoutPeriod",
              "ty": 4,
              "value": [
                32,
                28,
                0,
                0
              ],
              "docs": [
                " Buyout period in blocks in which a caller can buyout up to the amount limit stored in `BuyoutLimit`",
                " When attempting to buyout after this period, the buyout limit is reset for the caller"
              ]
            },
            {
              "name": "SellFee",
              "ty": 475,
              "value": [
                80,
                195,
                0,
                0
              ],
              "docs": [
                " Fee from the native asset buyouts"
              ]
            },
            {
              "name": "MinAmountToBuyout",
              "ty": 6,
              "value": [
                0,
                232,
                118,
                72,
                23,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Min amount of native token to buyout"
              ]
            },
            {
              "name": "MaxAllowedBuyoutCurrencies",
              "ty": 4,
              "value": [
                20,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum number of allowed currencies for buyout"
              ]
            }
          ],
          "error": {
            "ty": 663
          },
          "index": 82,
          "docs": []
        },
        {
          "name": "Farming",
          "storage": {
            "prefix": "Farming",
            "entries": [
              {
                "name": "PoolNextId",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "GaugePoolNextId",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "RetireLimit",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "PoolInfos",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 664
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Record reward pool info.",
                  "",
                  " map PoolId => PoolInfo"
                ]
              },
              {
                "name": "GaugePoolInfos",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 671
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Record gauge farming pool info.",
                  "",
                  " map PoolId => GaugePoolInfo"
                ]
              },
              {
                "name": "GaugeInfos",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 677,
                    "value": 678
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "SharesAndWithdrawnRewards",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 677,
                    "value": 679
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Record share amount, reward currency and withdrawn reward amount for",
                  " specific `AccountId` under `PoolId`.",
                  "",
                  " double_map (PoolId, AccountId) => ShareInfo"
                ]
              },
              {
                "name": "BoostPoolInfos",
                "modifier": "Default",
                "ty": {
                  "Plain": 680
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "UserBoostInfos",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 681
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "BoostWhitelist",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 43
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "BoostNextRoundWhitelist",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 43
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "BoostVotingPools",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "BoostBasicRewards",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 683,
                    "value": 6
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 414
          },
          "event": {
            "ty": 174
          },
          "constants": [
            {
              "name": "TreasuryAccount",
              "ty": 0,
              "value": [
                109,
                111,
                100,
                108,
                112,
                121,
                47,
                116,
                114,
                115,
                114,
                121,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": []
            },
            {
              "name": "Keeper",
              "ty": 476,
              "value": [
                97,
                109,
                47,
                102,
                109,
                107,
                112,
                114
              ],
              "docs": [
                " ModuleID for creating sub account"
              ]
            },
            {
              "name": "RewardIssuer",
              "ty": 476,
              "value": [
                97,
                109,
                47,
                102,
                109,
                114,
                105,
                114
              ],
              "docs": []
            },
            {
              "name": "FarmingBoost",
              "ty": 476,
              "value": [
                97,
                109,
                47,
                102,
                109,
                98,
                115,
                116
              ],
              "docs": []
            },
            {
              "name": "WhitelistMaximumLimit",
              "ty": 4,
              "value": [
                10,
                0,
                0,
                0
              ],
              "docs": []
            }
          ],
          "error": {
            "ty": 684
          },
          "index": 90,
          "docs": []
        },
        {
          "name": "AssetRegistry",
          "storage": {
            "prefix": "AssetRegistry",
            "entries": [
              {
                "name": "Metadata",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 121,
                    "value": 183
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The metadata of an asset, indexed by asset id."
                ]
              },
              {
                "name": "LocationToAssetId",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 63,
                    "value": 121
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Maps a multilocation to an asset id - useful when processing xcm",
                  " messages."
                ]
              },
              {
                "name": "LastAssetId",
                "modifier": "Default",
                "ty": {
                  "Plain": 121
                },
                "default": [
                  0
                ],
                "docs": [
                  " The last processed asset id - used when assigning a sequential id."
                ]
              }
            ]
          },
          "calls": {
            "ty": 423
          },
          "event": {
            "ty": 182
          },
          "constants": [
            {
              "name": "StringLimit",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum length of a name or symbol."
              ]
            }
          ],
          "error": {
            "ty": 685
          },
          "index": 91,
          "docs": []
        },
        {
          "name": "VestingManager",
          "storage": null,
          "calls": {
            "ty": 428
          },
          "event": {
            "ty": 189
          },
          "constants": [],
          "error": null,
          "index": 100,
          "docs": []
        },
        {
          "name": "MessageQueue",
          "storage": {
            "prefix": "MessageQueue",
            "entries": [
              {
                "name": "BookStateFor",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 191,
                    "value": 686
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The index of the first and last (non-empty) pages."
                ]
              },
              {
                "name": "ServiceHead",
                "modifier": "Optional",
                "ty": {
                  "Plain": 191
                },
                "default": [
                  0
                ],
                "docs": [
                  " The origin at which we should begin servicing."
                ]
              },
              {
                "name": "Pages",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 689,
                    "value": 690
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The map of page indices to pages."
                ]
              }
            ]
          },
          "calls": {
            "ty": 429
          },
          "event": {
            "ty": 190
          },
          "constants": [
            {
              "name": "HeapSize",
              "ty": 4,
              "value": [
                0,
                0,
                1,
                0
              ],
              "docs": [
                " The size of the page; this implies the maximum message size which can be sent.",
                "",
                " A good value depends on the expected message sizes, their weights, the weight that is",
                " available for processing them and the maximal needed message size. The maximal message",
                " size is slightly lower than this as defined by [`MaxMessageLenOf`]."
              ]
            },
            {
              "name": "MaxStale",
              "ty": 4,
              "value": [
                8,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of stale pages (i.e. of overweight messages) allowed before culling",
                " can happen. Once there are more stale pages than this, then historical pages may be",
                " dropped, even if they contain unprocessed overweight messages."
              ]
            },
            {
              "name": "ServiceWeight",
              "ty": 205,
              "value": [
                1,
                7,
                0,
                162,
                148,
                26,
                29,
                2,
                0,
                80,
                0
              ],
              "docs": [
                " The amount of weight (if any) which should be provided to the message queue for",
                " servicing enqueued items.",
                "",
                " This may be legitimately `None` in the case that you will call",
                " `ServiceQueues::service_queues` manually."
              ]
            }
          ],
          "error": {
            "ty": 692
          },
          "index": 222,
          "docs": []
        }
      ],
      "extrinsic": {
        "version": 4,
        "address_ty": 274,
        "call_ty": 282,
        "signature_ty": 380,
        "extra_ty": 693,
        "signed_extensions": [
          {
            "identifier": "CheckNonZeroSender",
            "ty": 694,
            "additional_signed": 43
          },
          {
            "identifier": "CheckSpecVersion",
            "ty": 695,
            "additional_signed": 4
          },
          {
            "identifier": "CheckTxVersion",
            "ty": 696,
            "additional_signed": 4
          },
          {
            "identifier": "CheckGenesis",
            "ty": 697,
            "additional_signed": 12
          },
          {
            "identifier": "CheckMortality",
            "ty": 698,
            "additional_signed": 12
          },
          {
            "identifier": "CheckNonce",
            "ty": 700,
            "additional_signed": 43
          },
          {
            "identifier": "CheckWeight",
            "ty": 701,
            "additional_signed": 43
          },
          {
            "identifier": "ChargeTransactionPayment",
            "ty": 702,
            "additional_signed": 43
          },
          {
            "identifier": "CheckBuyout",
            "ty": 703,
            "additional_signed": 43
          },
          {
            "identifier": "CheckMetadataHash",
            "ty": 704,
            "additional_signed": 32
          }
        ]
      },
      "ty": 129,
      "apis": [
        {
          "name": "AuraApi",
          "methods": [
            {
              "name": "slot_duration",
              "inputs": [],
              "output": 706,
              "docs": [
                " Returns the slot duration for Aura.",
                "",
                " Currently, only the value provided by this type at genesis will be used."
              ]
            },
            {
              "name": "authorities",
              "inputs": [],
              "output": 495,
              "docs": [
                " Return the current set of authorities."
              ]
            }
          ],
          "docs": [
            " API necessary for block authorship with aura."
          ]
        },
        {
          "name": "Core",
          "methods": [
            {
              "name": "version",
              "inputs": [],
              "output": 209,
              "docs": [
                " Returns the version of the runtime."
              ]
            },
            {
              "name": "execute_block",
              "inputs": [
                {
                  "name": "block",
                  "ty": 707
                }
              ],
              "output": 43,
              "docs": [
                " Execute the given block."
              ]
            },
            {
              "name": "initialize_block",
              "inputs": [
                {
                  "name": "header",
                  "ty": 708
                }
              ],
              "output": 43,
              "docs": [
                " Initialize a block with the given header."
              ]
            }
          ],
          "docs": [
            " The `Core` runtime api that every Substrate runtime needs to implement."
          ]
        },
        {
          "name": "Metadata",
          "methods": [
            {
              "name": "metadata",
              "inputs": [],
              "output": 711,
              "docs": [
                " Returns the metadata of a runtime."
              ]
            },
            {
              "name": "metadata_at_version",
              "inputs": [
                {
                  "name": "version",
                  "ty": 4
                }
              ],
              "output": 712,
              "docs": [
                " Returns the metadata at a given version.",
                "",
                " If the given `version` isn't supported, this will return `None`.",
                " Use [`Self::metadata_versions`] to find out about supported metadata version of the runtime."
              ]
            },
            {
              "name": "metadata_versions",
              "inputs": [],
              "output": 422,
              "docs": [
                " Returns the supported metadata versions.",
                "",
                " This can be used to call `metadata_at_version`."
              ]
            }
          ],
          "docs": [
            " The `Metadata` api trait that returns metadata for the runtime."
          ]
        },
        {
          "name": "BlockBuilder",
          "methods": [
            {
              "name": "apply_extrinsic",
              "inputs": [
                {
                  "name": "extrinsic",
                  "ty": 709
                }
              ],
              "output": 713,
              "docs": [
                " Apply the given extrinsic.",
                "",
                " Returns an inclusion outcome which specifies if this extrinsic is included in",
                " this block or not."
              ]
            },
            {
              "name": "finalize_block",
              "inputs": [],
              "output": 708,
              "docs": [
                " Finish the current block."
              ]
            },
            {
              "name": "inherent_extrinsics",
              "inputs": [
                {
                  "name": "inherent",
                  "ty": 717
                }
              ],
              "output": 710,
              "docs": [
                " Generate inherent extrinsics. The inherent data will vary from chain to chain."
              ]
            },
            {
              "name": "check_inherents",
              "inputs": [
                {
                  "name": "block",
                  "ty": 707
                },
                {
                  "name": "data",
                  "ty": 717
                }
              ],
              "output": 721,
              "docs": [
                " Check that the inherents are valid. The inherent data will vary from chain to chain."
              ]
            }
          ],
          "docs": [
            " The `BlockBuilder` api trait that provides the required functionality for building a block."
          ]
        },
        {
          "name": "TaggedTransactionQueue",
          "methods": [
            {
              "name": "validate_transaction",
              "inputs": [
                {
                  "name": "source",
                  "ty": 722
                },
                {
                  "name": "tx",
                  "ty": 709
                },
                {
                  "name": "block_hash",
                  "ty": 12
                }
              ],
              "output": 723,
              "docs": [
                " Validate the transaction.",
                "",
                " This method is invoked by the transaction pool to learn details about given transaction.",
                " The implementation should make sure to verify the correctness of the transaction",
                " against current state. The given `block_hash` corresponds to the hash of the block",
                " that is used as current state.",
                "",
                " Note that this call may be performed by the pool multiple times and transactions",
                " might be verified in any possible order."
              ]
            }
          ],
          "docs": [
            " The `TaggedTransactionQueue` api trait for interfering with the transaction queue."
          ]
        },
        {
          "name": "OffchainWorkerApi",
          "methods": [
            {
              "name": "offchain_worker",
              "inputs": [
                {
                  "name": "header",
                  "ty": 708
                }
              ],
              "output": 43,
              "docs": [
                " Starts the off-chain task for given block header."
              ]
            }
          ],
          "docs": [
            " The offchain worker api."
          ]
        },
        {
          "name": "SessionKeys",
          "methods": [
            {
              "name": "generate_session_keys",
              "inputs": [
                {
                  "name": "seed",
                  "ty": 542
                }
              ],
              "output": 13,
              "docs": [
                " Generate a set of session keys with optionally using the given seed.",
                " The keys should be stored within the keystore exposed via runtime",
                " externalities.",
                "",
                " The seed needs to be a valid `utf8` string.",
                "",
                " Returns the concatenated SCALE encoded public keys."
              ]
            },
            {
              "name": "decode_session_keys",
              "inputs": [
                {
                  "name": "encoded",
                  "ty": 13
                }
              ],
              "output": 725,
              "docs": [
                " Decode the given public session keys.",
                "",
                " Returns the list of public raw public keys + key type."
              ]
            }
          ],
          "docs": [
            " Session keys runtime api."
          ]
        },
        {
          "name": "AccountNonceApi",
          "methods": [
            {
              "name": "account_nonce",
              "inputs": [
                {
                  "name": "account",
                  "ty": 0
                }
              ],
              "output": 4,
              "docs": [
                " Get current account nonce of given `AccountId`."
              ]
            }
          ],
          "docs": [
            " The API to query account nonce."
          ]
        },
        {
          "name": "TransactionPaymentApi",
          "methods": [
            {
              "name": "query_info",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 709
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 728,
              "docs": []
            },
            {
              "name": "query_fee_details",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 709
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 729,
              "docs": []
            },
            {
              "name": "query_weight_to_fee",
              "inputs": [
                {
                  "name": "weight",
                  "ty": 9
                }
              ],
              "output": 6,
              "docs": []
            },
            {
              "name": "query_length_to_fee",
              "inputs": [
                {
                  "name": "length",
                  "ty": 4
                }
              ],
              "output": 6,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "CollectCollationInfo",
          "methods": [
            {
              "name": "collect_collation_info",
              "inputs": [
                {
                  "name": "header",
                  "ty": 708
                }
              ],
              "output": 732,
              "docs": [
                " Collect information about a collation.",
                "",
                " The given `header` is the header of the built block for that",
                " we are collecting the collation info for."
              ]
            }
          ],
          "docs": [
            " Runtime api to collect information about a collation."
          ]
        },
        {
          "name": "ParachainStakingApi",
          "methods": [
            {
              "name": "get_unclaimed_staking_rewards",
              "inputs": [
                {
                  "name": "account",
                  "ty": 0
                }
              ],
              "output": 735,
              "docs": []
            },
            {
              "name": "get_staking_rates",
              "inputs": [],
              "output": 736,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "DiaOracleApi",
          "methods": [
            {
              "name": "get_coin_info",
              "inputs": [
                {
                  "name": "blockchain",
                  "ty": 13
                },
                {
                  "name": "symbol",
                  "ty": 13
                }
              ],
              "output": 737,
              "docs": []
            },
            {
              "name": "get_value",
              "inputs": [
                {
                  "name": "lockchain",
                  "ty": 13
                },
                {
                  "name": "symbol",
                  "ty": 13
                }
              ],
              "output": 738,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "ZenlinkProtocolApi",
          "methods": [
            {
              "name": "get_balance",
              "inputs": [
                {
                  "name": "asset_id",
                  "ty": 136
                },
                {
                  "name": "owner",
                  "ty": 0
                }
              ],
              "output": 6,
              "docs": []
            },
            {
              "name": "get_pair_by_asset_id",
              "inputs": [
                {
                  "name": "asset_0",
                  "ty": 136
                },
                {
                  "name": "asset_1",
                  "ty": 136
                }
              ],
              "output": 740,
              "docs": []
            },
            {
              "name": "get_amount_in_price",
              "inputs": [
                {
                  "name": "supply",
                  "ty": 6
                },
                {
                  "name": "path",
                  "ty": 137
                }
              ],
              "output": 6,
              "docs": []
            },
            {
              "name": "get_amount_out_price",
              "inputs": [
                {
                  "name": "supply",
                  "ty": 6
                },
                {
                  "name": "path",
                  "ty": 137
                }
              ],
              "output": 6,
              "docs": []
            },
            {
              "name": "get_estimate_lptoken",
              "inputs": [
                {
                  "name": "asset_0",
                  "ty": 136
                },
                {
                  "name": "asset_1",
                  "ty": 136
                },
                {
                  "name": "amount_0_desired",
                  "ty": 6
                },
                {
                  "name": "amount_1_desired",
                  "ty": 6
                },
                {
                  "name": "amount_0_min",
                  "ty": 6
                },
                {
                  "name": "amount_1_min",
                  "ty": 6
                }
              ],
              "output": 6,
              "docs": []
            },
            {
              "name": "calculate_remove_liquidity",
              "inputs": [
                {
                  "name": "asset_0",
                  "ty": 136
                },
                {
                  "name": "asset_1",
                  "ty": 136
                },
                {
                  "name": "amount",
                  "ty": 6
                }
              ],
              "output": 742,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "FarmingRuntimeApi",
          "methods": [
            {
              "name": "get_farming_rewards",
              "inputs": [
                {
                  "name": "who",
                  "ty": 0
                },
                {
                  "name": "pid",
                  "ty": 4
                }
              ],
              "output": 175,
              "docs": []
            },
            {
              "name": "get_gauge_rewards",
              "inputs": [
                {
                  "name": "who",
                  "ty": 0
                },
                {
                  "name": "pid",
                  "ty": 4
                }
              ],
              "output": 175,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "IssueApi",
          "methods": [
            {
              "name": "get_issue_requests",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 194,
              "docs": [
                " Get all issue requests for a particular account"
              ]
            },
            {
              "name": "get_vault_issue_requests",
              "inputs": [
                {
                  "name": "vault_id",
                  "ty": 0
                }
              ],
              "output": 194,
              "docs": [
                " Get all issue requests for a particular vault"
              ]
            }
          ],
          "docs": []
        },
        {
          "name": "VaultRegistryApi",
          "methods": [
            {
              "name": "get_vault_collateral",
              "inputs": [
                {
                  "name": "vault_id",
                  "ty": 143
                }
              ],
              "output": 743,
              "docs": [
                " Get the vault's collateral (excluding nomination)"
              ]
            },
            {
              "name": "get_vaults_by_account_id",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 744,
              "docs": [
                " Get all the vaultIds registered by a vault's accountId"
              ]
            },
            {
              "name": "get_vault_total_collateral",
              "inputs": [
                {
                  "name": "vault_id",
                  "ty": 143
                }
              ],
              "output": 743,
              "docs": [
                " Get the vault's collateral (including nomination)"
              ]
            },
            {
              "name": "get_premium_redeem_vaults",
              "inputs": [],
              "output": 746,
              "docs": [
                " Get all vaults below the premium redeem threshold, ordered in descending order of this amount"
              ]
            },
            {
              "name": "get_vaults_with_issuable_tokens",
              "inputs": [],
              "output": 746,
              "docs": [
                " Get all vaults with non-zero issuable tokens, ordered in descending order of this amount"
              ]
            },
            {
              "name": "get_vaults_with_redeemable_tokens",
              "inputs": [],
              "output": 746,
              "docs": [
                " Get all vaults with non-zero redeemable tokens, ordered in descending order of this amount"
              ]
            },
            {
              "name": "get_issuable_tokens_from_vault",
              "inputs": [
                {
                  "name": "vault",
                  "ty": 143
                }
              ],
              "output": 743,
              "docs": [
                " Get the amount of tokens a vault can issue"
              ]
            },
            {
              "name": "get_collateralization_from_vault",
              "inputs": [
                {
                  "name": "vault",
                  "ty": 143
                },
                {
                  "name": "only_issued",
                  "ty": 30
                }
              ],
              "output": 749,
              "docs": [
                " Get the collateralization rate of a vault"
              ]
            },
            {
              "name": "get_collateralization_from_vault_and_collateral",
              "inputs": [
                {
                  "name": "vault",
                  "ty": 143
                },
                {
                  "name": "collateral",
                  "ty": 735
                },
                {
                  "name": "only_issued",
                  "ty": 30
                }
              ],
              "output": 749,
              "docs": [
                " Get the collateralization rate of a vault and collateral"
              ]
            },
            {
              "name": "get_required_collateral_for_wrapped",
              "inputs": [
                {
                  "name": "amount_wrapped",
                  "ty": 735
                },
                {
                  "name": "wrapped_currency_id",
                  "ty": 121
                },
                {
                  "name": "collateral_currency_id",
                  "ty": 121
                }
              ],
              "output": 743,
              "docs": [
                " Get the minimum amount of collateral required for the given amount of token",
                " with the current threshold and exchange rate"
              ]
            },
            {
              "name": "get_required_collateral_for_vault",
              "inputs": [
                {
                  "name": "vault_id",
                  "ty": 143
                }
              ],
              "output": 743,
              "docs": [
                " Get the amount of collateral required for the given vault to be at the",
                " current SecureCollateralThreshold with the current exchange rate"
              ]
            }
          ],
          "docs": []
        },
        {
          "name": "RedeemApi",
          "methods": [
            {
              "name": "get_redeem_requests",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 194,
              "docs": [
                " Get all redeem requests for a particular account"
              ]
            },
            {
              "name": "get_vault_redeem_requests",
              "inputs": [
                {
                  "name": "vault_id",
                  "ty": 0
                }
              ],
              "output": 194,
              "docs": [
                " Get all redeem requests for a particular vault"
              ]
            }
          ],
          "docs": []
        },
        {
          "name": "ReplaceApi",
          "methods": [
            {
              "name": "get_old_vault_replace_requests",
              "inputs": [
                {
                  "name": "vault_id",
                  "ty": 0
                }
              ],
              "output": 194,
              "docs": [
                " Get all replace requests from a particular vault"
              ]
            },
            {
              "name": "get_new_vault_replace_requests",
              "inputs": [
                {
                  "name": "vault_id",
                  "ty": 0
                }
              ],
              "output": 194,
              "docs": [
                " Get all replace requests to a particular vault"
              ]
            }
          ],
          "docs": []
        },
        {
          "name": "ContractsApi",
          "methods": [
            {
              "name": "call",
              "inputs": [
                {
                  "name": "origin",
                  "ty": 0
                },
                {
                  "name": "dest",
                  "ty": 0
                },
                {
                  "name": "value",
                  "ty": 6
                },
                {
                  "name": "gas_limit",
                  "ty": 205
                },
                {
                  "name": "storage_deposit_limit",
                  "ty": 145
                },
                {
                  "name": "input_data",
                  "ty": 13
                }
              ],
              "output": 750,
              "docs": [
                " Perform a call from a specified account to a given contract.",
                "",
                " See [`crate::Pallet::bare_call`]."
              ]
            },
            {
              "name": "instantiate",
              "inputs": [
                {
                  "name": "origin",
                  "ty": 0
                },
                {
                  "name": "value",
                  "ty": 6
                },
                {
                  "name": "gas_limit",
                  "ty": 205
                },
                {
                  "name": "storage_deposit_limit",
                  "ty": 145
                },
                {
                  "name": "code",
                  "ty": 757
                },
                {
                  "name": "data",
                  "ty": 13
                },
                {
                  "name": "salt",
                  "ty": 13
                }
              ],
              "output": 758,
              "docs": [
                " Instantiate a new contract.",
                "",
                " See `[crate::Pallet::bare_instantiate]`."
              ]
            },
            {
              "name": "upload_code",
              "inputs": [
                {
                  "name": "origin",
                  "ty": 0
                },
                {
                  "name": "code",
                  "ty": 13
                },
                {
                  "name": "storage_deposit_limit",
                  "ty": 145
                },
                {
                  "name": "determinism",
                  "ty": 388
                }
              ],
              "output": 761,
              "docs": [
                " Upload new code without instantiating a contract from it.",
                "",
                " See [`crate::Pallet::bare_upload_code`]."
              ]
            },
            {
              "name": "get_storage",
              "inputs": [
                {
                  "name": "address",
                  "ty": 0
                },
                {
                  "name": "key",
                  "ty": 13
                }
              ],
              "output": 763,
              "docs": [
                " Query a given storage key in a given contract.",
                "",
                " Returns `Ok(Some(Vec<u8>))` if the storage value exists under the given key in the",
                " specified account and `Ok(None)` if it doesn't. If the account specified by the address",
                " doesn't exist, or doesn't have a contract then `Err` is returned."
              ]
            }
          ],
          "docs": [
            " The API used to dry-run contract interactions."
          ]
        },
        {
          "name": "OracleApi",
          "methods": [
            {
              "name": "currency_to_usd",
              "inputs": [
                {
                  "name": "amount",
                  "ty": 735
                },
                {
                  "name": "currency_id",
                  "ty": 121
                }
              ],
              "output": 743,
              "docs": []
            },
            {
              "name": "usd_to_currency",
              "inputs": [
                {
                  "name": "amount",
                  "ty": 735
                },
                {
                  "name": "currency_id",
                  "ty": 121
                }
              ],
              "output": 743,
              "docs": []
            },
            {
              "name": "get_exchange_rate",
              "inputs": [
                {
                  "name": "currency",
                  "ty": 121
                }
              ],
              "output": 749,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "GenesisBuilder",
          "methods": [
            {
              "name": "create_default_config",
              "inputs": [],
              "output": 13,
              "docs": [
                " Creates the default `GenesisConfig` and returns it as a JSON blob.",
                "",
                " This function instantiates the default `GenesisConfig` struct for the runtime and serializes it into a JSON",
                " blob. It returns a `Vec<u8>` containing the JSON representation of the default `GenesisConfig`."
              ]
            },
            {
              "name": "build_config",
              "inputs": [
                {
                  "name": "json",
                  "ty": 13
                }
              ],
              "output": 765,
              "docs": [
                " Build `GenesisConfig` from a JSON blob not using any defaults and store it in the storage.",
                "",
                " This function deserializes the full `GenesisConfig` from the given JSON blob and puts it into the storage.",
                " If the provided JSON blob is incorrect or incomplete or the deserialization fails, an error is returned.",
                " It is recommended to log any errors encountered during the process.",
                "",
                " Please note that provided json blob must contain all `GenesisConfig` fields, no defaults will be used."
              ]
            }
          ],
          "docs": [
            " API to interact with GenesisConfig for the runtime"
          ]
        }
      ],
      "outer_enums": {
        "call_enum_ty": 282,
        "event_enum_ty": 20,
        "error_enum_ty": 766
      },
      "custom": {
        "map": {}
      }
    }
  }
]